---
- id: rustsec:cargo:simd-json:RUSTSEC-2019-0008
  title: Flaw in string parsing can lead to crashes due to invalid memory access.
  description: "The affected version of this crate did not guard against accessing
    memory\nbeyond the range of its input data. A pointer cast to read the data into\na
    256-bit register could lead to a segmentation fault when the end plus\nthe 32
    bytes (256 bit) read would overlap into the next page during string\nparsing.\n\n```\npage
    \  |  ...  page 1  ...  | ... page 2  ... |\ndata   | x[n * 32 byte]xx__ |                 |\naccess
    | ..][ 32 byte ]     |                 |\nsegflt |               [ 32 | byte ]
    \         |\n```\n\nThis allows an attacker to eventually crash a service.\n \nThe
    flaw was corrected by using a padding buffer for the last read from the\ninput.
    So that we are we never read over the boundary of the input data.\n"
  affected_package: simd-json
  unaffected_versions:
  - "<= 0.1.13"
  patched_versions:
  - ">= 0.1.15"
  severity: high
  package_manager: cargo
  disclosed_date: 2019-06-24
  created_date: 2019-06-24
  last_modified_date: 2019-06-24
  credit:
  - RustSec
  references:
  - https://github.com/Licenser/simdjson-rs/pull/273
  source_url: https://github.com/RustSec/advisory-db/blob/master/crates/simd-json/RUSTSEC-2019-0008.toml
