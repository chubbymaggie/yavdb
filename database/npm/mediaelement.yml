---
- id: snykio:npm:mediaelement:20160504
  title: Cross-site Scripting (XSS)
  description: |
    [`mediaelement`][1] is an HTML5 audio or video player.

    Affected versions of the package are vulnerable to Cross-site Scripting
    (XSS) due to not sanitizing HTML.



    [1]: https://www.npmjs.com/package/mediaelement
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

    You can read more about `Cross-site Scripting (XSS)` on our [blog][1].



    [1]: https://snyk.io/blog/marked-xss-vulnerability/
  affected_package: mediaelement
  vulnerable_versions:
  - "<2.21.0 >=2.17.0"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2016-4567
  cwe:
  - CWE-79
  disclosed_date: 2016-05-03
  created_date: 2017-05-08
  last_modified_date: 2017-05-08
  credit:
  - John Dyer
  references:
  - http://seclists.org/oss-sec/2016/q2/275
  - https://github.com/johndyer/mediaelement/commit/24c6ad056d3f43a78a011ec145f1f099f2a1cdbf
  source_url: https://snyk.io/vuln/npm:mediaelement:20160504
- id: snykio:npm:mediaelement:20170208
  title: Cross-site Scripting (XSS)
  description: |
    [`mediaelement`][1] is an HTML5 audio or video player.

    Affected versions of the package are vulnerable to Cross-site Scripting
    (XSS) due to not sanitizing HTML.



    [1]: https://www.npmjs.com/package/mediaelement
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

    You can read more about `Cross-site Scripting (XSS)` on our [blog][1].



    [1]: https://snyk.io/blog/marked-xss-vulnerability/
  affected_package: mediaelement
  vulnerable_versions:
  - "<3.1.2 >=3.0.0"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-79
  disclosed_date: 2017-02-07
  created_date: 2017-05-08
  last_modified_date: 2017-05-08
  credit:
  - Rafael Miranda
  references:
  - https://github.com/johndyer/mediaelement/commit/fd88ce0e2fab8e02f8ab8e00a0b2bfc5769966cf
  source_url: https://snyk.io/vuln/npm:mediaelement:20170208
