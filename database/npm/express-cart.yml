---
- id: npmjs:npm:express-cart:676
  title: Path Traversal
  description: Versions of `express-cart` before 1.1.7 are vulnerable to Path Traversal.
  affected_package: express-cart
  vulnerable_versions:
  - "<=1.1.5"
  severity: high
  package_manager: npm
  cwe: CWE-22
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Patrick
  references: https://npmjs.com/advisories/676
  source_url: https://npmjs.com/advisories/676
- id: npmjs:npm:express-cart:724
  title: NoSQL injection
  description: "Versions of `express-cart` before 1.1.8 are vulnerable to NoSQL injection.
    \n\nThe vulnerability is caused by the lack of user input sanitization in the
    login handlers. In both cases, the customer login and the admin login, parameters
    from the JSON body are sent directly into the MongoDB query which allows to insert
    operators. \n\nThese operators can be used to extract the value of the field blindly
    in the same manner of a blind SQL injection. In this case, the `$regex` operator
    is used to guess each character of the token from the start."
  affected_package: express-cart
  vulnerable_versions:
  - "<=1.1.7"
  severity: high
  package_manager: npm
  cwe: CWE-943
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Benoit Côté-Jodoin
  references: https://npmjs.com/advisories/724
  source_url: https://npmjs.com/advisories/724
- id: npmjs:npm:express-cart:730
  title: Privilege Escalation
  description: Versions of `express-cart` before 1.1.6 are vulnerable to privilege
    escalation. This vulnerability can be exploited so that normal users can escalate
    their privilege and add new administrator users.
  affected_package: express-cart
  vulnerable_versions:
  - "<=1.1.5"
  severity: high
  package_manager: npm
  cwe: CWE-284
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Patrick
  references: https://npmjs.com/advisories/730
  source_url: https://npmjs.com/advisories/730
- id: npmjs:npm:express-cart:808
  title: Cross-Site Scripting
  description: All versions of `harp` are vulnerable to Cross-Site Scripting. In the
    admin page it is possible to inject arbitrary JavaScript as a new product option,
    allowing attackers to execute arbitrary code. This is limited to the admin page
    and does not affect other pages.
  affected_package: express-cart
  vulnerable_versions:
  - ">=0"
  severity: low
  package_manager: npm
  cwe: CWE-79
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Avinash Hanwate
  references: https://npmjs.com/advisories/808
  source_url: https://npmjs.com/advisories/808
- id: snykio:npm:express-cart:174131
  title: Cross-site Scripting (XSS)
  description: |+
    [express-cart][1] is a fully functional shopping cart built in Node.js
    (Express, MongoDB) with Stripe, PayPal and Authorize.net payments.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). It allows a user to insert malicious payload in the user input
    field and the script gets reflected in the browser.



    [1]: https://www.npmjs.com/package/express-cart
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: express-cart
  vulnerable_versions:
  - "*"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-79
  disclosed_date: 2019-04-07
  created_date: 2019-04-07
  last_modified_date: 2019-04-07
  credit:
  - Avinash Hanwate
  references:
  - https://hackerone.com/reports/395944
  source_url: https://snyk.io/vuln/SNYK-JS-EXPRESSCART-174131
- id: snykio:npm:express-cart:20180606
  title: Arbitrary Code Execution
  description: |
    [express-cart][1] is a fully functional shopping cart built in Node.js
    (Express, MongoDB) with Stripe, PayPal and Authorize.net payments.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. It allows a privileged users to upload files to the server,
    and choose which path it\'ll be saved in. The path does not do through
    validation, nor is the file type or size validated. This may allow an
    attacker to upload malicious files that may execute code on the server,
    send data back to the attacker or cause a denial of service.



    [1]: https://www.npmjs.com/package/express-cart
  affected_package: express-cart
  vulnerable_versions:
  - "<1.1.7"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-3758
  cwe:
  - CWE-94
  disclosed_date: 2018-06-06
  created_date: 2018-06-06
  last_modified_date: 2018-06-06
  credit:
  - Patrick (patrickrbc)
  references:
  - https://github.com/mrvautin/expressCart/commit/65b18cfe426fa217aa6ada1d4162891883137893
  - https://hackerone.com/reports/343726
  source_url: https://snyk.io/vuln/npm:express-cart:20180606
- id: snykio:npm:express-cart:20180712
  title: Privilege Escalation
  description: |
    [`express-cart`][1] is a fully functioning Node.js shopping cart with
    Stripe, PayPal and Authorize.net payments.

    Affected versions of this package are vulnerable to Privilege
    Escalation. Users from expressCart could add new users as administrators
    to the application due to deficiency in the access control.



    [1]: https://www.npmjs.com/package/express-cart
  affected_package: express-cart
  vulnerable_versions:
  - "<1.1.6"
  severity: high
  package_manager: npm
  cve:
  - CVE-2018-16483
  cwe:
  - CWE-265
  disclosed_date: 2018-07-12
  created_date: 2018-08-21
  last_modified_date: 2018-08-21
  credit:
  - patrickrbc
  references:
  - https://hackerone.com/reports/343626
  source_url: https://snyk.io/vuln/npm:express-cart:20180712
- id: snykio:npm:express-cart:72404
  title: SQL Injection
  description: |
    [express-cart][1] is a fully functional shopping cart built in Node.js
    (Express, MongoDB) with Stripe, PayPal and Authorize.net payments.

    Affected versions of this package are vulnerable to SQL Injection due to
    a lack of user input sanitization in the login handlers. An attacker
    could enumerate the email address of the customers and the
    administrators.



    [1]: https://www.npmjs.com/package/express-cart
  affected_package: express-cart
  vulnerable_versions:
  - "<1.1.8"
  severity: high
  package_manager: npm
  cwe:
  - CWE-89
  disclosed_date: 2018-09-11
  created_date: 2018-09-26
  last_modified_date: 2018-09-26
  credit:
  - becojo
  references:
  - https://github.com/mrvautin/expressCart/commit/b2234ef4f28225bb42f74bf6cf33759048aba518
  - https://hackerone.com/reports/397445
  source_url: https://snyk.io/vuln/SNYK-JS-EXPRESSCART-72404
