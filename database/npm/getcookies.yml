---
- id: nodesecurity:npm:getcookies:2018-05-16
  title: Malicious Module
  description: The `getcookies` module contained a backdoor that would allow for a
    remote attacker to execute arbitrary commands on the system running the malicious
    module.
  affected_package: getcookies
  vulnerable_versions:
  - "<=99.999.99999"
  patched_versions:
  - "<0.0.0"
  severity: high
  package_manager: npm
  cvss_v3_vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H
  credit:
  - npm community
  references:
  - https://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies)
  source_url: https://nodesecurity.io/advisories/649
- id: snykio:npm:getcookies:2018-05-02
  title: Malicious Package
  description: |+
    `getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

    \n`getcookies` contains a malicious backdoor.

    The backdoor works by parsing the user-supplied HTTP `request.headers`,
    looking for specifically formatted data that provides three different
    commands to the backdoor:

    * resetting the code buffer.
    * executing code located in the buffer by calling `vm.runInThisContext`,
      providing `module.exports`, `required`, `req`, `res`, and `next` as
      arguments.
    * loading remote code in to memory for execution.

    These control codes allowed for an attacker to input arbitrary code into
    a running server and execute it.

    The list of packages and their scripts are:

        express-cookies
        getcookies
        http-fetch-cookies

  affected_package: getcookies
  vulnerable_versions:
  - "*"
  severity: high
  package_manager: npm
  cwe:
  - CWE-506
  credit:
  - Unknown
  references:
  - https://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies
  - https://news.ycombinator.com/item?id=16975025
  source_url: https://snyk.io/vuln/npm:getcookies:20180502
