---
- id: ossindex:npm:ejs:2017-07-30
  title: Remoter Code Execution
  description: A remote code execution vulnerability was identified in this package
    for versions prior to 2.5.3
  affected_package: ejs
  vulnerable_versions:
  - "<2.5.3"
  package_manager: npm
  disclosed_date: 2017-07-30
  created_date: 2017-07-30
  last_modified_date: 2017-07-30
  credit:
  - OSSIndex
  references:
  - https://dzone.com/articles/fixing-a-remote-code-execution-vulnerability-in-ej
  - https://github.com/mde/ejs/commit/3d447c5a335844b25faec04b1132dbc721f9c8f6
  source_url: https://ossindex.net/resource/package/7013517735/vulnerabilities
- id: snykio:npm:ejs:CVE-2017-1000188
  title: Cross-site Scripting (XSS)
  description: "[`ejs`][1] is a popular JavaScript templating engine. Affected versions\nof
    the package are vulnerable to *Cross-site Scripting* by letting the\nattacker
    under certain conditions control and override the `filename`\noption causing it
    to render the value as is, without escaping it. You\ncan read more about this
    vulnerability on the [Snyk blog][2].\n\nThere\\'s also a [Remote Code Execution][3]
    &amp; [Denial of Service][4]\nvulnerabilities caused by the same behaviour.\n\n\n\n[1]:
    https://www.npmjs.com/package/ejs\n[2]: https://snyk.io/blog/fixing-ejs-rce-vuln\n[3]:
    https://snyk.io/vuln/npm:ejs:20161128\n[4]: https://snyk.io/vuln/npm:ejs:20161130-1\n\\n`ejs`
    provides a few different options for you to render a template, two\nbeing very
    similar: `ejs.render()` and `ejs.renderFile()`. The only\ndifference being that
    `render` expects a string to be used for the\ntemplate and `renderFile` expects
    a path to a template file.\n\nBoth functions can be invoked in two ways. The first
    is calling them\nwith `template`, `data`, and `options`\\:\n\n    ejs.render(str,
    data, options);\n    \n    ejs.renderFile(filename, data, options, callback)\n\nThe
    second way would be by calling only the `template` and `data`, while\n`ejs` lets
    the `options` be passed as part of the `data`\\:\n\n    ejs.render(str, dataAndOptions);\n
    \   \n    ejs.renderFile(filename, dataAndOptions, callback)\n\nIf used with a
    variable list supplied by the user (e.g. by reading it\nfrom the URI with `qs`
    or equivalent), an attacker can control `ejs`\noptions. This includes the `filename`
    option, which will be rendered as\nis when an error occurs during rendering.\n\n
    \   ejs.renderFile('my-template', {filename:'<script>alert(1)</script>'}, callback);\n\nThe
    [fix][1] introduced in version `2.5.3` blacklisted `root` options\nfrom options
    passed via the `data` object.\n\n\n\n[1]: https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f\n"
  affected_package: ejs
  vulnerable_versions:
  - "<2.5.5"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2017-1000188
  cwe:
  - CWE-79
  disclosed_date: 2016-11-27
  created_date: 2016-12-06
  last_modified_date: 2016-12-06
  credit:
  - Snyk Security Research Team
  references:
  - https://snyk.io/blog/fixing-ejs-rce-vuln
  - https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f
  source_url: https://snyk.io/vuln/npm:ejs:20161130
- id: snykio:npm:ejs:CVE-2017-1000189
  title: Denial of Service (DoS)
  description: "[`ejs`][1] is a popular JavaScript templating engine. Affected versions\nof
    the package are vulnerable to *Denial of Service* by letting the\nattacker under
    certain conditions control and override the `localNames`\noption causing it to
    crash. You can read more about this vulnerability\non the [Snyk blog][2].\n\nThere\\'s
    also a [Remote Code Execution][3] &amp; [Cross-site\nScripting][4] vulnerabilities
    caused by the same behaviour.\n\n\n\n[1]: https://www.npmjs.com/package/ejs\n[2]:
    https://snyk.io/blog/fixing-ejs-rce-vuln\n[3]: https://snyk.io/vuln/npm:ejs:20161128\n[4]:
    https://snyk.io/vuln/npm:ejs:20161130\n\\n`ejs` provides a few different options
    for you to render a template, two\nbeing very similar: `ejs.render()` and `ejs.renderFile()`.
    The only\ndifference being that `render` expects a string to be used for the\ntemplate
    and `renderFile` expects a path to a template file.\n\nBoth functions can be invoked
    in two ways. The first is calling them\nwith `template`, `data`, and `options`\\:\n\n
    \   ejs.render(str, data, options);\n    \n    ejs.renderFile(filename, data,
    options, callback)\n\nThe second way would be by calling only the `template` and
    `data`, while\n`ejs` lets the `options` be passed as part of the `data`\\:\n\n
    \   ejs.render(str, dataAndOptions);\n    \n    ejs.renderFile(filename, dataAndOptions,
    callback)\n\nIf used with a variable list supplied by the user (e.g. by reading
    it\nfrom the URI with `qs` or equivalent), an attacker can control `ejs`\noptions.
    This includes the `localNames` option, which will cause the\nrenderer to crash.\n\n
    \   ejs.renderFile('my-template', {localNames:'try'}, callback);\n\nThe [fix][1]
    introduced in version `2.5.3` blacklisted `root` options\nfrom options passed
    via the `data` object.\n\n\n\n[1]: https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f\n"
  affected_package: ejs
  vulnerable_versions:
  - "<2.5.5"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2017-1000189
  cwe:
  - CWE-400
  disclosed_date: 2016-11-27
  created_date: 2016-12-06
  last_modified_date: 2016-12-06
  credit:
  - Snyk Security Research Team
  references:
  - https://snyk.io/blog/fixing-ejs-rce-vuln
  - https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f
  source_url: https://snyk.io/vuln/npm:ejs:20161130-1
- id: snykio:npm:ejs:CVE-2017-1000228
  title: Arbitrary Code Execution
  description: "[`ejs`][1] is a popular JavaScript templating engine. Affected versions\nof
    the package are vulnerable to *Remote Code Execution* by letting the\nattacker
    under certain conditions control the source folder from which\nthe engine renders
    include files. You can read more about this\nvulnerability on the [Snyk blog][2].\n\nThere\\'s
    also a [Cross-site Scripting][3] &amp; [Denial of Service][4]\nvulnerabilities
    caused by the same behaviour.\n\n\n\n[1]: https://www.npmjs.com/package/ejs\n[2]:
    https://snyk.io/blog/fixing-ejs-rce-vuln\n[3]: https://snyk.io/vuln/npm:ejs:20161130\n[4]:
    https://snyk.io/vuln/npm:ejs:20161130-1\n\\n`ejs` provides a few different options
    for you to render a template, two\nbeing very similar: `ejs.render()` and `ejs.renderFile()`.
    The only\ndifference being that `render` expects a string to be used for the\ntemplate
    and `renderFile` expects a path to a template file.\n\nBoth functions can be invoked
    in two ways. The first is calling them\nwith `template`, `data`, and `options`\\:\n\n
    \   ejs.render(str, data, options);\n    \n    ejs.renderFile(filename, data,
    options, callback)\n\nThe second way would be by calling only the `template` and
    `data`, while\n`ejs` lets the `options` be passed as part of the `data`\\:\n\n
    \   ejs.render(str, dataAndOptions);\n    \n    ejs.renderFile(filename, dataAndOptions,
    callback)\n\nIf used with a variable list supplied by the user (e.g. by reading
    it\nfrom the URI with `qs` or equivalent), an attacker can control `ejs`\noptions.
    This includes the `root` option, which allows changing the\nproject root for includes
    with an absolute path.\n\n    ejs.renderFile('my-template', {root:'/bad/root/'},
    callback);\n\nBy passing along the root directive in the line above, any includes\nwould
    now be pulled from `/bad/root` instead of the path intended. This\nallows the
    attacker to take control of the root directory for included\nscripts and divert
    it to a library under his control, thus leading to\nremote code execution.\n\nThe
    [fix][1] introduced in version `2.5.3` blacklisted `root` options\nfrom options
    passed via the `data` object.\n\n\n\n[1]: https://github.com/mde/ejs/commit/3d447c5a335844b25faec04b1132dbc721f9c8f6\n"
  affected_package: ejs
  vulnerable_versions:
  - "<2.5.3"
  severity: high
  package_manager: npm
  cve:
  - CVE-2017-1000228
  cwe:
  - CWE-94
  disclosed_date: 2016-11-27
  created_date: 2016-11-28
  last_modified_date: 2016-11-28
  credit:
  - Snyk Security Research Team
  references:
  - https://snyk.io/blog/fixing-ejs-rce-vuln
  - https://github.com/mde/ejs/commit/3d447c5a335844b25faec04b1132dbc721f9c8f6
  source_url: https://snyk.io/vuln/npm:ejs:20161128
