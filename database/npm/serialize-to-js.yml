---
- id: npmjs:npm:serialize-to-js:313
  title: Code Execution Through IIFE
  description: "Affected versions of `serialize-to-js` may be vulnerable to arbitrary
    code execution through an Immediately Invoked Function Expression (IIFE). \n\n##
    Proof of Concept\n```\nvar payload = \"{e: (function(){ eval('console.log(`exploited`)')
    })() }\"\nvar serialize = require('serialize-to-js');\nserialize.deserialize(payload);\n```"
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2017-5954
  cwe: CWE-502
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Ajin Abraham
  references: https://npmjs.com/advisories/313
  source_url: https://npmjs.com/advisories/313
- id: npmjs:npm:serialize-to-js:790
  title: Denial of Service
  description: Versions of `serialize-to-js` prior to 2.0.0 are vulnerable to Denial
    of Service. User input is not properly validated, allowing attackers to provide
    inputs that lead the execution to loop indefinitely.
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<2.0.0"
  severity: high
  package_manager: npm
  cwe: CWE-400
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Dor Tumarkin
  references: https://npmjs.com/advisories/790
  source_url: https://npmjs.com/advisories/790
- id: ossindex:npm:serialize-to-js:8402397862
  title: Code Execution Through IIFE
  description: "> Passing untrusted data to the .deserialize function can cause arbitrary
    code execution through an Immediately Invoked Function Expression (IIFE).\n> \n>
    -- [nodesecurity.io](https://nodesecurity.io/advisories/313)"
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  package_manager: npm
  disclosed_date: 2017-02-11
  created_date: 2017-02-11
  last_modified_date: 2017-02-13
  credit:
  - OSSIndex
  references:
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://nodesecurity.io/advisories/313
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  - https://www.npmjs.com/package/serialize-to-js#deserialize
  source_url: https://ossindex.net/resource/package/7014431649/vulnerabilities
- id: ossindex:npm:serialize-to-js:8402514944
  title: "[CVE-2017-5954]  Deserialization of Untrusted Data"
  description: An issue was discovered in the serialize-to-js package 0.5.0 for Node.js.
    Untrusted data passed into the deserialize() function can be exploited to achieve
    arbitrary code execution by passing a JavaScript Object with an Immediately Invoked
    Function Expression (IIFE).
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  package_manager: npm
  cve:
  - CVE-2017-5954
  disclosed_date: 2017-02-10
  created_date: 2017-02-10
  last_modified_date: 2017-07-30
  credit:
  - OSSIndex
  references:
  - http://www.securityfocus.com/bid/96223
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  source_url: https://ossindex.net/resource/package/7014431649/vulnerabilities
- id: snykio:npm:serialize-to-js:20170208
  title: Arbitrary Code Execution
  description: |
    [`serialize-to-js`][1] serializes objects to javascript.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. If untrusted user-input is passed into the `deserialize()`,
    attackers will be able to send a serialized JavaScript Objects with an
    [Immediately Invoked Function Expression (IIFE)][2].

    **Example:**

        var serialize = require('serialize-to-js');
        var payload = '{"rce":"_$$ND_FUNC$$_function (){require(\'child_process\').exec(\'ls /\', function(error, stdout, stderr) { console.log(stdout) });}()"}';
        serialize.deserialize(payload);
    {: .language-js}



    [1]: https://www.npmjs.com/package/serialize-to-js
    [2]: https://en.wikipedia.org/wiki/Immediately-invoked_function_expression
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<=0.5.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2017-5954
  cwe:
  - CWE-502
  disclosed_date: 2017-02-08
  created_date: 2017-02-13
  last_modified_date: 2017-02-13
  credit:
  - Ajin Abraham
  references:
  - https://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429
  - https://github.com/commenthol/serialize-to-js/issues/1
  - https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/
  - https://www.npmjs.com/package/serialize-to-js#deserialize
  source_url: https://snyk.io/vuln/npm:serialize-to-js:20170208
- id: snykio:npm:serialize-to-js:460149
  title: Denial of Service (DoS)
  description: "[serialize-to-js][1] is a is a package to serialize objects into a\nstring
    while checking circular structures and respecting references.\n\nAffected versions
    of this package are vulnerable to Denial of Service\n(DoS). It is possible for
    attackers to provide inputs that lead the\nexecution to loop indefinitely.\n\n###
    POC   {#poc}\n\n    const serializeToJs = require('serialize-to-js')\n    var
    str = 'function(){while(true){}}()'\n    var res = serializeToJs.deserialize(str)
    \n    console.log(res)\n\n\n\n[1]: https://www.npmjs.com/package/serialize-to-js\n\\nDenial
    of Service (DoS) describes a family of attacks, all aimed at\nmaking a system
    inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities,
    DoS attacks usually do not aim at\nbreaching security. Rather, they are focused
    on making websites and\nservices unavailable to genuine users resulting in downtime.\n\nOne
    popular Denial of Service vulnerability is DDoS (a Distributed\nDenial of Service),
    an attack that attempts to clog network pipes to the\nsystem by generating a large
    volume of traffic from many machines.\n\nWhen it comes to open source libraries,
    DoS vulnerabilities allow\nattackers to trigger such a crash or crippling of the
    service by using a\nflaw either in the application code or from the use of open
    source\nlibraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory
    Consumption- An attacker sending crafted requests that\n  could cause the system
    to take a disproportionate amount of time to\n  process. For example,\n  [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n*
    Crash - An attacker sending crafted requests that could cause the\n  system to
    crash. For Example, [npm `ws` package](npm:ws:20171108)\n\n"
  affected_package: serialize-to-js
  vulnerable_versions:
  - "<2.0.0"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-400
  disclosed_date: 2019-03-28
  created_date: 2019-08-22
  last_modified_date: 2019-08-22
  credit:
  - Dor Tumarkin
  references:
  - https://github.com/commenthol/serialize-to-js/pull/8
  - https://github.com/commenthol/serialize-to-js/pull/8/commits/ef723b5b2924b9a2369b3b12f2417f256660ae49
  - https://www.npmjs.com/advisories/790
  source_url: https://snyk.io/vuln/SNYK-JS-SERIALIZETOJS-460149
