---
- id: ossindex:npm:knex:2016-11-30
  title: SQL Injection in PostgreSQL dialect
  description: Column names are not being properly escaped in the postgreSQL dialect,
    allowing SQL Injection.
  affected_package: knex
  vulnerable_versions:
  - "<0.6.23"
  - ">=0.7 <0.7.6"
  package_manager: npm
  credit:
  - OSSIndex
  references:
  - https://cwe.mitre.org/data/definitions/89.html
  - https://github.com/tgriesser/knex/commit/13995d6936208fe0a968b9ae0f46a2f19faacffc
  - https://github.com/tgriesser/knex/issues/737
  source_url: https://ossindex.net/resource/package/7014041222/vulnerabilities
- id: snykio:npm:knex:2015-04-12
  title: SQL Injection
  description: |
    [`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
    \n[`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
    \n[`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
    \n[`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
    \n[`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
    \n[`knex`][1] is a batteries-included SQL query &amp; schema builder for
    Postgres, MySQL and SQLite3 and the Browser.

    Column names are not properly escaped in the postgreSQL dialect. This
    may allow attackers to craft a query to the host DB and access private
    information. Writing the following code:

        var query = knex.select('id","name').from('test')
        console.log(query.toSQL())

    Has the following result:

        { method: 'select',
          options: undefined,
          bindings: [],
          sql: 'select "id","name" from "test"' }



    [1]: https://www.npmjs.com/package/knex
  affected_package: knex
  vulnerable_versions:
  - "<0.6.23 || >=0.7.0 <0.7.6"
  severity: medium
  package_manager: npm
  cwe:
  - CWE-89
  credit:
  - Jorge Godoy
  references:
  - https://github.com/tgriesser/knex/issues/737
  - https://github.com/tgriesser/knex/commit/13995d6936208fe0a968b9ae0f46a2f19faacffc
  source_url: https://snyk.io/vuln/npm:knex:20150413
