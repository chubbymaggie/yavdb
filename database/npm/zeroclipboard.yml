---
- id: ossindex:npm:zeroclipboard:2017-03-31
  title: Cross Site Scripting (XSS)
  description: An ID is not being escaped, resulting in a possible XSS vulnerability.
  affected_package: zeroclipboard
  vulnerable_versions:
  - "<1.0.7"
  package_manager: npm
  disclosed_date: 2017-03-31
  created_date: 2017-03-31
  last_modified_date: 2017-05-16
  credit:
  - OSSIndex
  references:
  - https://github.com/zeroclipboard/zeroclipboard/commit/21c1b56f783131d74b549b37587a24c45b5c7c6d
  - https://github.com/zeroclipboard/zeroclipboard/issues/2
  source_url: https://ossindex.net/resource/package/7014648925/vulnerabilities
- id: ossindex:npm:zeroclipboard:CVE-2012-6550
  title: '[CVE-2012-6550]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in ZeroClipboard before 1.1.4
    allows remote attackers to inject arbitrary web script or HTML via "the clipText
    returned from the flash object," a different vulnerability than CVE-2013-1808.
  affected_package: zeroclipboard
  vulnerable_versions:
  - "<1.1.4"
  package_manager: npm
  cve:
  - CVE-2012-6550
  disclosed_date: 2013-04-02
  created_date: 2013-04-02
  last_modified_date: 2017-05-16
  credit:
  - OSSIndex
  references:
  - http://seclists.org/fulldisclosure/2013/Feb/103
  - https://github.com/jonrohan/ZeroClipboard/blob/master/docs/releases.md#zeroclipboard-114
  - https://github.com/jonrohan/ZeroClipboard/commit/51b67b6d696f62aaf003210c08542588222c4913
  source_url: https://ossindex.net/resource/package/7014648925/vulnerabilities
- id: ossindex:npm:zeroclipboard:CVE-2013-1808
  title: '[CVE-2013-1808]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: 'Cross-site scripting (XSS) vulnerability in ZeroClipboard.swf and
    ZeroClipboard10.swf in ZeroClipboard before 1.0.8, as used in em-shorty, RepRapCalculator,
    Fulcrum, Django, aCMS, and other products, allows remote attackers to inject arbitrary
    web script or HTML via the id parameter.  NOTE: this is might be the same vulnerability
    as CVE-2013-1463. If so, it is likely that CVE-2013-1463 will be REJECTed.'
  affected_package: zeroclipboard
  vulnerable_versions:
  - 1.0.5
  - 1.0.7
  package_manager: npm
  cve:
  - CVE-2013-1808
  disclosed_date: 2013-04-02
  created_date: 2013-04-02
  last_modified_date: 2017-05-16
  credit:
  - OSSIndex
  references:
  - http://seclists.org/fulldisclosure/2013/Apr/87
  - http://seclists.org/fulldisclosure/2013/Apr/88
  - http://seclists.org/fulldisclosure/2013/Feb/103
  - http://seclists.org/fulldisclosure/2013/Feb/109
  - http://seclists.org/fulldisclosure/2013/Mar/5
  - http://securityvulns.ru/docs29103.html
  - http://securityvulns.ru/docs29104.html
  - http://securityvulns.ru/docs29105.html
  - http://www.cloudbees.com/jenkins-advisory/jenkins-security-advisory-2013-05-02.cb
  - http://www.openwall.com/lists/oss-security/2013/03/03/3
  - http://www.openwall.com/lists/oss-security/2013/03/10/2
  - http://www.openwall.com/lists/oss-security/2013/03/25/1
  - http://www.openwall.com/lists/oss-security/2013/03/26/8
  - http://www.securityfocus.com/bid/58257
  - https://github.com/jonrohan/ZeroClipboard/blob/master/docs/releases.md#zeroclipboard-108
  - https://github.com/jonrohan/ZeroClipboard/commit/a0e02933f5f7ce5f364fbad36a005f0a349f0696
  source_url: https://ossindex.net/resource/package/7014648925/vulnerabilities
- id: ossindex:npm:zeroclipboard:CVE-2014-1869
  title: '[CVE-2014-1869]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Multiple cross-site scripting (XSS) vulnerabilities in ZeroClipboard.swf
    in ZeroClipboard before 1.3.2, as maintained by Jon Rohan and James M. Greene,
    allow remote attackers to inject arbitrary web script or HTML via vectors related
    to certain SWF query parameters (aka loaderInfo.parameters).
  affected_package: zeroclipboard
  vulnerable_versions:
  - 1.0.5
  - 1.0.7
  - 1.0.8
  - 1.1.0
  - 1.1.1
  - 1.1.2
  - 1.1.3
  - 1.1.4
  - 1.1.5
  - 1.1.6
  - 1.1.7
  - 1.2.0
  - 1.2.1
  - 1.2.2
  - 1.2.3
  - 1.3.0
  - 1.3.1
  package_manager: npm
  cve:
  - CVE-2014-1869
  disclosed_date: 2014-02-08
  created_date: 2014-02-08
  last_modified_date: 2017-05-16
  credit:
  - OSSIndex
  references:
  - http://secunia.com/advisories/56821
  - http://www.securityfocus.com/bid/65484
  - http://xforce.iss.net/xforce/xfdb/91085
  - https://access.redhat.com/errata/RHSA-2016:0070
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/91085
  - https://github.com/zeroclipboard/zeroclipboard/commit/2f9eb9750a433965572d047e24b0fc78fd1415ca
  - https://github.com/zeroclipboard/zeroclipboard/pull/335
  - https://github.com/zeroclipboard/zeroclipboard/releases/tag/v1.3.2
  - https://wiki.jenkins-ci.org/display/SECURITY/Jenkins%20Security%20Advisory%202014-10-01
  - https://wiki.jenkins-ci.org/display/SECURITY/Jenkins+Security+Advisory+2014-10-01
  source_url: https://ossindex.net/resource/package/7014648925/vulnerabilities
- id: snykio:npm:zeroclipboard:CVE-2012-6550
  title: Cross-site Scripting (XSS)
  description: |+
    [zeroclipboard][1] provides an easy way to copy text to the clipboard
    using an invisible Adobe Flash movie and a JavaScript interface.

    Affected versions of the package are vulnerable to Cross-site Scripting
    (XSS)due to not escaping the clipText returned from the flash object.
    This allows remote attackers to inject arbitrary web script or HTML into
    the browser.



    [1]: https://www.npmjs.com/package/zeroclipboard
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zeroclipboard
  vulnerable_versions:
  - "<1.1.4"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2012-6550
  cwe:
  - CWE-79
  disclosed_date: 2012-05-27
  created_date: 2017-03-13
  last_modified_date: 2017-03-13
  credit:
  - Kingfo
  references:
  - http://seclists.org/fulldisclosure/2013/Feb/103
  - https://github.com/zeroclipboard/zeroclipboard/commit/51b67b6d696f62aaf003210c08542588222c4913
  - https://github.com/zeroclipboard/zeroclipboard/issues/14
  - https://github.com/zeroclipboard/zeroclipboard/pull/2
  - https://github.com/zeroclipboard/zeroclipboard/releases/tag/v1.1.4
  source_url: https://snyk.io/vuln/npm:zeroclipboard:20120528
- id: snykio:npm:zeroclipboard:CVE-2013-1808
  title: Cross-site Scripting (XSS)
  description: |+
    [zeroclipboard][1] provides an easy way to copy text to the clipboard
    using an invisible Adobe Flash movie and a JavaScript interface.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). It allows remote attackers to inject arbitrary web script or HTML
    via the id parameter.



    [1]: https://www.npmjs.com/package/zeroclipboard
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zeroclipboard
  vulnerable_versions:
  - "<1.0.8"
  severity: low
  package_manager: npm
  cve:
  - CVE-2013-1808
  cwe:
  - CWE-79
  disclosed_date: 2013-01-04
  created_date: 2018-03-15
  last_modified_date: 2018-03-15
  credit:
  - Unknown
  references:
  - https://github.com/zeroclipboard/zeroclipboard/commit/a0e02933f5f7ce5f364fbad36a005f0a349f0696
  - https://nvd.nist.gov/vuln/detail/CVE-2013-1808
  - https://www.cloudbees.com/jenkins-security-advisory-2013-05-02
  source_url: https://snyk.io/vuln/npm:zeroclipboard:20130104
- id: snykio:npm:zeroclipboard:CVE-2014-1869
  title: Cross-site Scripting (XSS)
  description: |+
    [`zeroclipboard`][1] Affected versions of the package are vulnerable to
    Cross-site Scripting (XSS). This allows remote attackers to inject
    arbitrary web script or HTML via vectors related to certain SWF query
    parameters.



    [1]: https://www.npmjs.com/package/zeroclipboard
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zeroclipboard
  vulnerable_versions:
  - "<1.3.2 >=1.0.7"
  severity: medium
  package_manager: npm
  cve:
  - CVE-2014-1869
  cwe:
  - CWE-79
  disclosed_date: 2014-01-30
  created_date: 2017-03-13
  last_modified_date: 2017-03-13
  credit:
  - Masato Kinugawa
  references:
  - https://github.com/zeroclipboard/zeroclipboard/commit/2f9eb9750a433965572d047e24b0fc78fd1415ca
  - https://github.com/zeroclipboard/zeroclipboard/pull/335
  source_url: https://snyk.io/vuln/npm:zeroclipboard:20140131
