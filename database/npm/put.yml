---
- id: snykio:npm:put:20180614
  title: Uninitialized Memory Exposure
  description: |+
    [put][1] Pack multibyte binary values into buffers with specific
    endiannesses.

    Affected versions of this package are vulnerable to Uninitialized Memory
    Exposure. It incorrectly calculates the total length of the allocated
    Buffer and does not trim it to the total bytes written.



    [1]: https://hackerone.com/reports/321702
    \nThe Buffer class on Node.js is a mutable array of binary data, and can
    be initialized with a string, array or number.

        const buf1 = new Buffer([1,2,3]);
        // creates a buffer containing [01, 02, 03]
        const buf2 = new Buffer('test');
        // creates a buffer containing ASCII bytes [74, 65, 73, 74]
        const buf3 = new Buffer(10);
        // creates a buffer of length 10

    The first two variants simply create a binary representation of the
    value it received. The last one, however, pre-allocates a buffer of the
    specified size, making it a useful buffer, especially when reading data
    from a stream. When using the number constructor of Buffer, it will
    allocate the memory, but will not fill it with zeros. Instead, the
    allocated buffer will hold whatever was in memory at the time. If the
    buffer is not `zeroed` by using `buf.fill(0)`, it may leak sensitive
    information like keys, source code, and system info.

  affected_package: put
  vulnerable_versions:
  - "*"
  severity: low
  package_manager: npm
  cwe:
  - CWE-399
  disclosed_date: 2018-06-14
  created_date: 2018-07-24
  last_modified_date: 2018-07-24
  credit:
  - ChALkeR
  references:
  - https://hackerone.com/reports/321702
  source_url: https://snyk.io/vuln/npm:put:20180614
