---
- id: npmjs:npm:bootstrap-tagsinput:124
  title: Cross-Site Scripting
  description: 'All versions of `bootstrap-tagsinput` are vulnerable to cross-site
    scripting when user input is passed into the `itemTitle` parameter unmodified,
    as the package fails to properly sanitize or encode user input for that parameter.

'
  affected_package: bootstrap-tagsinput
  vulnerable_versions:
  - "<=0.8.0"
  severity: high
  package_manager: npm
  cve:
  - CVE-2016-1000227
  cwe: CWE-79
  disclosed_date: 1970-01-01
  created_date: 1970-01-01
  last_modified_date: 1970-01-01
  credit: Alex Wong
  references: https://npmjs.com/advisories/124
  source_url: https://npmjs.com/advisories/124
- id: ossindex:npm:bootstrap-tagsinput:8400171337
  title: "[Duplicate] Cross Site Scripting (XSS) in itemTitle"
  description: "See https://ossindex.net/resource/vulnerability/8399946930\n\n> The
    tagClass, itemValue, itemText are all encoded. For some reason, only itemTitle
    is left out exposing a potential XSS vunerability.\n> \n> -- [github.com](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/501)"
  affected_package: bootstrap-tagsinput
  vulnerable_versions:
  - "<=0.8.0"
  package_manager: npm
  disclosed_date: 2016-10-05
  created_date: 2016-10-05
  last_modified_date: 2017-02-20
  credit:
  - OSSIndex
  references:
  - https://cwe.mitre.org/data/definitions/79.html
  - https://github.com/TimSchlechter/bootstrap-tagsinput/issues/501
  - https://nodesecurity.io/advisories/124
  source_url: https://ossindex.net/resource/package/7012140063/vulnerabilities
- id: snykio:npm:bootstrap-tagsinput:20160720
  title: XSS in itemTitle parameter
  description: |+
    Bootstrap Tags Input is a jQuery plugin providing a Twitter Bootstrap
    user interface for managing tags.

    The plugin supports various inputs for each tag, such as tagClass,
    itemValue and itemText, and all of those are HTML Encoded as they should
    be. However, HTML encoding was overlooked for the `itemTitle` parameter,
    exposing a potential Cross-site Scripting (XSS) vulnerability.

    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: bootstrap-tagsinput
  vulnerable_versions:
  - "<=0.8.0"
  severity: high
  package_manager: npm
  cwe:
  - CWE-79
  disclosed_date: 2016-07-20
  created_date: 2016-07-20
  last_modified_date: 2016-07-20
  credit:
  - Alex Wong
  references:
  - https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/501
  source_url: https://snyk.io/vuln/npm:bootstrap-tagsinput:20160720
