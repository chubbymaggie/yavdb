---
- id: friendsofphp:packagist:zetacomponents/mail:2017-11-01
  title: Arbitrary code execution via a crafted email address
  affected_package: zetacomponents/mail
  vulnerable_versions:
  - "<1.8.2"
  package_manager: packagist
  cve:
  - CVE-2017-15806
  credit:
  - FriendsOfPHP
  references:
  - https://github.com/zetacomponents/Mail/issues/58
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/socalnick/scn-social-auth/2015-01-15.yaml/blob/master/kazist/phpwhois/CVE-2015-5243.yaml/blob/master/amphp/http/2018-03-15.yaml/blob/master/amphp/artax/CVE-2016-5385.yaml/blob/master/amphp/artax/2017-05-09.yaml/blob/master/laravel/socialite/2015-07-23.yaml/blob/master/laravel/socialite/2015-08-03.yaml/blob/master/laravel/framework/CVE-2017-14775.yaml/blob/master/laravel/framework/2014-05-20.yaml/blob/master/laravel/framework/2018-03-30-1.yaml/blob/master/laravel/framework/2018-08-08-1.yaml/blob/master/laravel/framework/2014-04-15.yaml/blob/master/laravel/framework/CVE-2017-9303.yaml/blob/master/drupal/drupal/CVE-2017-6923.yaml/blob/master/drupal/drupal/CVE-2016-6212.yaml/blob/master/drupal/drupal/CVE-2016-3170.yaml/blob/master/drupal/drupal/2018-04-18.yaml/blob/master/drupal/drupal/CVE-2017-6930.yaml/blob/master/drupal/drupal/CVE-2017-6379.yaml/blob/master/drupal/drupal/CVE-2016-9450.yaml/blob/master/drupal/drupal/CVE-2017-6927.yaml/blob/master/drupal/drupal/CVE-2016-3162.yaml/blob/master/drupal/drupal/CVE-2017-6921.yaml/blob/master/drupal/drupal/CVE-2018-7602.yaml/blob/master/drupal/drupal/CVE-2016-9452.yaml/blob/master/drupal/drupal/CVE-2016-6211.yaml/blob/master/drupal/drupal/CVE-2016-3164.yaml/blob/master/drupal/drupal/CVE-2016-5385.yaml/blob/master/drupal/drupal/CVE-2017-6920.yaml/blob/master/drupal/drupal/CVE-2016-3163.yaml/blob/master/drupal/drupal/CVE-2016-3169.yaml/blob/master/drupal/drupal/CVE-2017-6931.yaml/blob/master/drupal/drupal/CVE-2018-7600.yaml/blob/master/drupal/drupal/CVE-2017-6929.yaml/blob/master/drupal/drupal/CVE-2016-3166.yaml/blob/master/drupal/drupal/CVE-2016-3167.yaml/blob/master/drupal/drupal/CVE-2016-7571.yaml/blob/master/drupal/drupal/CVE-2017-6928.yaml/blob/master/drupal/drupal/CVE-2016-3168.yaml/blob/master/drupal/drupal/CVE-2016-7572.yaml/blob/master/drupal/drupal/CVE-2017-6377.yaml/blob/master/drupal/drupal/CVE-2017-6922.yaml/blob/master/drupal/drupal/CVE-2017-6924.yaml/blob/master/drupal/drupal/CVE-2017-6925.yaml/blob/master/drupal/drupal/CVE-2017-6381.yaml/blob/master/drupal/drupal/CVE-2017-6926.yaml/blob/master/drupal/drupal/CVE-2016-7570.yaml/blob/master/drupal/drupal/CVE-2016-3171.yaml/blob/master/drupal/drupal/CVE-2017-6919.yaml/blob/master/drupal/drupal/CVE-2016-9449.yaml/blob/master/drupal/drupal/CVE-2017-6932.yaml/blob/master/drupal/drupal/CVE-2016-3165.yaml/blob/master/drupal/core/CVE-2017-6923.yaml/blob/master/drupal/core/CVE-2016-6212.yaml/blob/master/drupal/core/CVE-2016-3170.yaml/blob/master/drupal/core/2018-04-18.yaml/blob/master/drupal/core/CVE-2017-6930.yaml/blob/master/drupal/core/CVE-2017-6379.yaml/blob/master/drupal/core/CVE-2016-9450.yaml/blob/master/drupal/core/CVE-2017-6927.yaml/blob/master/drupal/core/CVE-2016-3162.yaml/blob/master/drupal/core/CVE-2017-6921.yaml/blob/master/drupal/core/CVE-2018-7602.yaml/blob/master/drupal/core/CVE-2016-9452.yaml/blob/master/drupal/core/CVE-2016-6211.yaml/blob/master/drupal/core/CVE-2016-3164.yaml/blob/master/drupal/core/CVE-2016-5385.yaml/blob/master/drupal/core/CVE-2017-6920.yaml/blob/master/drupal/core/CVE-2016-3163.yaml/blob/master/drupal/core/CVE-2016-3169.yaml/blob/master/drupal/core/CVE-2017-6931.yaml/blob/master/drupal/core/CVE-2018-7600.yaml/blob/master/drupal/core/CVE-2017-6929.yaml/blob/master/drupal/core/CVE-2016-3166.yaml/blob/master/drupal/core/CVE-2016-3167.yaml/blob/master/drupal/core/CVE-2016-7571.yaml/blob/master/drupal/core/CVE-2017-6928.yaml/blob/master/drupal/core/CVE-2016-3168.yaml/blob/master/drupal/core/CVE-2016-7572.yaml/blob/master/drupal/core/CVE-2017-6377.yaml/blob/master/drupal/core/CVE-2017-6922.yaml/blob/master/drupal/core/CVE-2017-6924.yaml/blob/master/drupal/core/CVE-2017-6925.yaml/blob/master/drupal/core/CVE-2017-6381.yaml/blob/master/drupal/core/CVE-2017-6926.yaml/blob/master/drupal/core/CVE-2016-7570.yaml/blob/master/drupal/core/CVE-2016-3171.yaml/blob/master/drupal/core/CVE-2017-6919.yaml/blob/master/drupal/core/CVE-2016-9449.yaml/blob/master/drupal/core/CVE-2017-6932.yaml/blob/master/drupal/core/CVE-2016-3165.yaml/blob/master/robrichards/xmlseclibs/2018-09-27.yaml/blob/master/erusev/parsedown/2017-05-01.yaml/blob/master/contao-components/mediaelement/CVE-2016-4567.yaml/blob/master/aws/aws-sdk-php/2015-08-31.yaml/blob/master/zetacomponents/mail/2017-11-15-1.yaml
- id: snykio:packagist:zetacomponents/mail:2017-12-03
  title: SQL Injection
  description: |
    Affected versions of [`zetacomponents/mail`][1] are vulnerable to
    Arbitrary Code Execution.

    A malicious user may pass arbitrary parameters to the `sendmail` binary
    when setting the returnPath property of `ezcMail` when using the
    `ezcMailMtaTransport`. In some situations, it is possible to use an
    e-mail address that contains `-X/path/to/wwwroot/file.php"` to write a
    file to the file system, that can then be accessed and run through
    `domainname/file.php`.

    This is only possible if all of these conditions are true:

    * you use the ezcMailMtaTransport
    * your \"sendmail\" binary allows the -X flag to be set, which is not
      the case for exim4 and postfix, as they don\'t support that argument
    * your wwwroot is writable by the user your webserver is running at
    * the input to use for the ezcMailAddress that is assigned to the
      returnPath property is not properly escaped



    [1]: https://packagist.org/packages/zetacomponents/mail
    \nAffected versions of [`zetacomponents/mail`][1] are vulnerable to
    Arbitrary Code Execution.

    A malicious user may pass arbitrary parameters to the `sendmail` binary
    when setting the returnPath property of `ezcMail` when using the
    `ezcMailMtaTransport`. In some situations, it is possible to use an
    e-mail address that contains `-X/path/to/wwwroot/file.php"` to write a
    file to the file system, that can then be accessed and run through
    `domainname/file.php`.

    This is only possible if all of these conditions are true:

    * you use the ezcMailMtaTransport
    * your \"sendmail\" binary allows the -X flag to be set, which is not
      the case for exim4 and postfix, as they don\'t support that argument
    * your wwwroot is writable by the user your webserver is running at
    * the input to use for the ezcMailAddress that is assigned to the
      returnPath property is not properly escaped



    [1]: https://packagist.org/packages/zetacomponents/mail
    \nAffected versions of [`zetacomponents/mail`][1] are vulnerable to
    Arbitrary Code Execution.

    A malicious user may pass arbitrary parameters to the `sendmail` binary
    when setting the returnPath property of `ezcMail` when using the
    `ezcMailMtaTransport`. In some situations, it is possible to use an
    e-mail address that contains `-X/path/to/wwwroot/file.php"` to write a
    file to the file system, that can then be accessed and run through
    `domainname/file.php`.

    This is only possible if all of these conditions are true:

    * you use the ezcMailMtaTransport
    * your \"sendmail\" binary allows the -X flag to be set, which is not
      the case for exim4 and postfix, as they don\'t support that argument
    * your wwwroot is writable by the user your webserver is running at
    * the input to use for the ezcMailAddress that is assigned to the
      returnPath property is not properly escaped



    [1]: https://packagist.org/packages/zetacomponents/mail
    \nAffected versions of [`zetacomponents/mail`][1] are vulnerable to
    Arbitrary Code Execution.

    A malicious user may pass arbitrary parameters to the `sendmail` binary
    when setting the returnPath property of `ezcMail` when using the
    `ezcMailMtaTransport`. In some situations, it is possible to use an
    e-mail address that contains `-X/path/to/wwwroot/file.php"` to write a
    file to the file system, that can then be accessed and run through
    `domainname/file.php`.

    This is only possible if all of these conditions are true:

    * you use the ezcMailMtaTransport
    * your \"sendmail\" binary allows the -X flag to be set, which is not
      the case for exim4 and postfix, as they don\'t support that argument
    * your wwwroot is writable by the user your webserver is running at
    * the input to use for the ezcMailAddress that is assigned to the
      returnPath property is not properly escaped



    [1]: https://packagist.org/packages/zetacomponents/mail
    \nAffected versions of [`zetacomponents/mail`][1] are vulnerable to
    Arbitrary Code Execution.

    A malicious user may pass arbitrary parameters to the `sendmail` binary
    when setting the returnPath property of `ezcMail` when using the
    `ezcMailMtaTransport`. In some situations, it is possible to use an
    e-mail address that contains `-X/path/to/wwwroot/file.php"` to write a
    file to the file system, that can then be accessed and run through
    `domainname/file.php`.

    This is only possible if all of these conditions are true:

    * you use the ezcMailMtaTransport
    * your \"sendmail\" binary allows the -X flag to be set, which is not
      the case for exim4 and postfix, as they don\'t support that argument
    * your wwwroot is writable by the user your webserver is running at
    * the input to use for the ezcMailAddress that is assigned to the
      returnPath property is not properly escaped



    [1]: https://packagist.org/packages/zetacomponents/mail
  affected_package: zetacomponents/mail
  vulnerable_versions:
  - "<1.8.2"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-15806
  cwe:
  - CWE-89
  credit:
  - Unknown
  references:
  - https://github.com/zetacomponents/Mail/issues/58
  source_url: https://snyk.io/vuln/SNYK-PHP-ZETACOMPONENTSMAIL-70374
