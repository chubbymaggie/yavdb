---
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-14619
  title: Cross-site Scripting (XSS)
  description: |+
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). It allows remote attackers to inject arbitrary web scripts or
    HTML via the \"Title of your FAQ\" field in the Configuration Module.



    [1]: https://github.com/thorsten/phpMyFAQ
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-14619
  cwe:
  - CWE-79
  disclosed_date: 2017-10-19
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/30b0025e19bd95ba28f4eff4d259671e7bb6bb86
  - https://nvd.nist.gov/vuln/detail/CVE-2017-14619
  - https://packetstormsecurity.com/files/144603/phpMyFAQ-2.9.8-Cross-Site-Scripting.html
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72060
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15727
  title: Cross-site Scripting (XSS)
  description: |+
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) via an HTML attachment.



    [1]: https://github.com/thorsten/phpMyFAQ
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-15727
  cwe:
  - CWE-79
  disclosed_date: 2017-10-02
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/blob/3.0/composer.json
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15727
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72061
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15728
  title: Cross-site Scripting (XSS)
  description: |+
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) via `metaDescription` or `metaKeywords`.



    [1]: https://github.com/thorsten/phpMyFAQ
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-15728
  cwe:
  - CWE-79
  disclosed_date: 2017-10-10
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/2d2a85b59e058869d7cbcfe2d73fed4a282f2e5b
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15728
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72062
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15729
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) when adding a glossary.



    [1]: https://packagist.org/packages/thorsten/phpmyfaq
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15729
  cwe:
  - CWE-352
  disclosed_date: 2017-10-08
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/867618110feb836e168435548d6c2cbb7c65eda3
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15729
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72057
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15730
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) in `admin/stat.ratings.php`.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15730
  cwe:
  - CWE-79
  disclosed_date: 2017-09-27
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/cce47f94375bb0102ab4f210672231dbb854dd0d
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15730
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72055
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15731
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) in `admin/stat.adminlog.php`.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15731
  cwe:
  - CWE-352
  disclosed_date: 2017-10-02
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/fadb9a70b5f7624a6926b8834d5c6001c210f09c
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15731
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72058
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15733
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) due to the flaws in `admin/ajax.attachment.php` and
    `admin/att.main.php` files.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15733
  cwe:
  - CWE-352
  disclosed_date: 2017-10-08
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/ef5a66df4bcfacc7573322af33ce10c30e0bb896
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15732
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72052
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15734
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) in `admin/stat.main.php`.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15734
  cwe:
  - CWE-352
  disclosed_date: 2017-10-22
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/fa26c52384b010edaf60c525ae5b040f05da9f77
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15734
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72053
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15735
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) by modifying a glossary.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15735
  cwe:
  - CWE-352
  disclosed_date: 2017-10-08
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/867618110feb836e168435548d6c2cbb7c65eda3
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15735
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72051
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15808
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) in `admin/ajax.config.php`.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2017-15808
  cwe:
  - CWE-352
  disclosed_date: 2017-10-23
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/a249b4645fb86f6a9fbe5d2344ab1cbdb906b75c
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15808
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72056
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2017-15809
  title: Cross-Site Request Forgery (CSRF)
  description: |
    [thorsten/phpmyfaq][1] is a multilingual, completely database-driven
    FAQ-system.

    Affected versions of this package are vulnerable to Cross-Site Request
    Forgery (CSRF) via a crafted tag.



    [1]: https://github.com/thorsten/phpMyFAQ
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2017-15809
  cwe:
  - CWE-352
  disclosed_date: 2017-10-10
  created_date: 2018-02-26
  last_modified_date: 2018-02-26
  credit:
  - Unknown
  references:
  - https://github.com/thorsten/phpMyFAQ/commit/cb648f0d5690b81647dd5c9efe942ebf6cce7da9
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15809
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72054
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2018-16650
  title: Cross-site Request Forgery (CSRF)
  description: |
    [phpmyfaq/phpmyfaq][1] is an Open Source FAQ system for PHP and MySQL,
    PostgreSQL and other databases.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF) due to insufficient checks.



    [1]: https://packagist.org/packages/phpmyfaq/phpmyfaq
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.11"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-16650
  cwe:
  - CWE-352
  disclosed_date: 2018-09-02
  created_date: 2018-09-16
  last_modified_date: 2018-09-16
  credit:
  - Zeel Chavda
  references:
  - https://www.phpmyfaq.de/security/advisory-2018-09-02
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72398
- id: snykio:packagist:thorsten/phpmyfaq:CVE-2018-16651
  title: CSV Injection
  description: |
    [phpmyfaq/phpmyfaq][1] is an Open Source FAQ system for PHP and MySQL,
    PostgreSQL and other databases.

    Affected versions of this package are vulnerable to CSV Injection in
    reports.

    CSV Injection, also known as Formula Injection, occurs when websites
    embed untrusted input inside CSV files. When a spreadsheet program is
    used to open a CSV, any cells starting with \'=\' will be interpreted by
    the software as a formula. Maliciously crafted formulas can be used for
    three key attacks:

    * Hijacking the user\'s computer by exploiting vulnerabilities in the
      spreadsheet software.
    * Hijacking the user\'s computer by exploiting the user\'s tendency to
      ignore security warnings in spreadsheets that they downloaded from
      their own website
    * Exfiltrating contents from the spreadsheet, or other open
      spreadsheets.



    [1]: https://packagist.org/packages/phpmyfaq/phpmyfaq
  affected_package: thorsten/phpmyfaq
  vulnerable_versions:
  - "<2.9.11"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2018-16651
  cwe:
  - CWE-74
  disclosed_date: 2018-09-02
  created_date: 2018-09-16
  last_modified_date: 2018-09-16
  credit:
  - Zeel Chavda
  references:
  - https://www.phpmyfaq.de/security/advisory-2018-09-02
  source_url: https://snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-72399
