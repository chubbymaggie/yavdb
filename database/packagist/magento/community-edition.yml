---
- id: snykio:packagist:magento/community-edition:174030
  title: SQL Injection
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to SQL Injection. A bug
    in both `internal/Magento/Framework/DB/Adapter/Pdo/Mysql.php` and
    `lib/Varien/Db/Adapter/Pdo/Mysql.php` allows for a SQLi vector in
    `Magento\Catalog\Controller\Product\Frontend\Action\Synchronize`.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">2.0.0  <2.1.17"
  - ">2.2.0  <2.2.8"
  - ">2.3.0  <2.3.1"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2019-7139
  cwe:
  - CWE-89
  disclosed_date: 2019-03-29
  created_date: 2019-03-30
  last_modified_date: 2019-03-30
  credit:
  - Ambionics Security
  - Charles Fol
  references:
  - https://github.com/ambionics/magento-exploits/blob/master/magento-sqli.py
  - https://github.com/bragento/magento-core/commit/92083b04e50c64ee7653604ae26e18075ec1d243
  - https://github.com/magento/magento2/commit/60ae26d9fbff50e247b9803e0a247bfd51f4332a
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  - https://thehackernews.com/2019/03/magento-website-security.html
  - https://www.ambionics.io/blog/magento-sqli
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174030
- id: snykio:packagist:magento/community-edition:174043
  title: Remote Code Execution (RCE)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Remote Code
    Execution (RCE). An authenticated user with privileges to create
    newsletter or email templates, can execute arbitrary code through
    crafted newsletter or email template code.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-94
  disclosed_date: 2019-03-26
  created_date: 2019-03-31
  last_modified_date: 2019-03-31
  credit:
  - DDV_UA
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174043
- id: snykio:packagist:magento/community-edition:174044
  title: Remote Code Execution (RCE)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Remote Code
    Execution (RCE). An authenticated user with administrative privileges
    can execute arbitrary code through email templates.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-94
  disclosed_date: 2019-03-26
  created_date: 2019-03-31
  last_modified_date: 2019-03-31
  credit:
  - valis_
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174044
- id: snykio:packagist:magento/community-edition:174046
  title: SQL Injection
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to SQL Injection. An
    authenticated user can insert embedded malicious code through an SQL
    injection vulnerability in the `Catalog` section by manipulating
    `attribute_code`.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-94
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Pete O'Callaghan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174046
- id: snykio:packagist:magento/community-edition:174048
  title: Remote Code Execution
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Remote Code
    Execution. An authenticated user with administrative privileges can
    execute arbitrary code through a `Phar deserialisation` vulnerability.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-352
  - CWE-94
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Simon Scannell
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174048
- id: snykio:packagist:magento/community-edition:174049
  title: Remote Code Execution
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Remote Code
    Execution. An attacker with privileges to configure store settings can
    execute arbitrary code through server-side request forgery.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-352
  - CWE-94
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174049
- id: snykio:packagist:magento/community-edition:174050
  title: Remote Code Execution
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Remote Code
    Execution. An attacker can execute arbitrary code via a PHP archive
    deserialisation vulnerability if he has privileges to configure email
    templates.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-352
  - CWE-94
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Simon Scannell
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174050
- id: snykio:packagist:magento/community-edition:174051
  title: Information Exposure
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Information
    Exposure. Because NGINX configuration allows PHP files to be executed in
    any directory, an authenticated user with administrative privileges can
    upload PHP files to access sensitive data.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Kieren Evans
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174051
- id: snykio:packagist:magento/community-edition:174052
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with administrative privileges can embed
    arbitrary code when editing the `Newsletter` section of the admin panel.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - internal
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174052
- id: snykio:packagist:magento/community-edition:174053
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An Attacker can use a stored cross site scripting vulnerability
    to embed malicious code via the `Customer Segments` section of the Admin
    if he has privileges to the Customer Segments section.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - magecraze
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174053
- id: snykio:packagist:magento/community-edition:174054
  title: Authentication Bypass
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Authentication
    Bypass. An authenticated user can create a B2B account without
    administrative approval.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-288
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - craiggene
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174054
- id: snykio:packagist:magento/community-edition:174055
  title: Privilege Escalation
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Privilege
    Escalation. By using a web API endpoint to send a request to the server,
    an authenticated customer can control other customer\'s requisition
    lists . This overrides the `customer_id` parameter.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-269
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Brian LaBelle
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174055
- id: snykio:packagist:magento/community-edition:174056
  title: SQL Injection
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to SQL Injection. An
    authenticated user with privileges to configure email templates can
    execute arbitrary SQL queries.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Blaklis_
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174056
- id: snykio:packagist:magento/community-edition:174057
  title: Cross-site Scripting (XSS)
  description: |-
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An Attacker can use cross-site scripting to embed malicious code
    if he has privileges to the Admin requisition list ID.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \n
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Pete O'Callaghan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174057
- id: snykio:packagist:magento/community-edition:174058
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with administrative privileges can embed
    arbitrary code in the Conditions tab of Admin Shopping Cart Rules page.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - magecraze
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174058
- id: snykio:packagist:magento/community-edition:174059
  title: Cross-site Request Forgery (CSRF)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). An attacker can delete a product attribute within the
    context of authenticated administrator\'s session through cross-site
    request forgery.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-352
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - djordjemarjanovic
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174059
- id: snykio:packagist:magento/community-edition:174060
  title: Cross-site Request Forgery (CSRF)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). An attacker can delete the site map within the context
    of an authenticated administrator\'s session through cross-site request
    forgery.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-352
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - djordjemarjanovic
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174060
- id: snykio:packagist:magento/community-edition:174061
  title: Cross-site Request Forgery (CSRF)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). An attacker can delete all synonyms groups within the
    context of an authenticated administrator\'s session through cross-site
    request forgery.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-352
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - djordjemarjanovic
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174061
- id: snykio:packagist:magento/community-edition:174062
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) via a stored XSS in the `Terms & Conditions` with Checkbox Text
    field in the admin panel if there are administrative privileges.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - magecraze
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174062
- id: snykio:packagist:magento/community-edition:174063
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to edit the Admin
    notification section can use a stored XSS to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - wiardvanrij
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174063
- id: snykio:packagist:magento/community-edition:174064
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to product name fields on
    the Admin can use stored cros-site scripting vulnerability to embed
    malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174064
- id: snykio:packagist:magento/community-edition:174065
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to the B2B packages through
    an unsanitized URL parameter can use a stored cross-site scripting
    vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Pete O'Callaghan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174065
- id: snykio:packagist:magento/community-edition:174066
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to the Admin **Stores**
    &gt; **Attributes** &gt; <strong>Product </strong> configuration area
    can use a stored cross-site scripting vulnerability to embed malicious
    code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Luke Rodgers
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174066
- id: snykio:packagist:magento/community-edition:174067
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to the Checkbox Custom
    Option Value field on the Admin can use a stored cross-site scripting
    vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174067
- id: snykio:packagist:magento/community-edition:174068
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to B2B packages through an
    unsanitized URL parameter can use a stored cross-site scripting
    vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Pete O'Callaghan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174068
- id: snykio:packagist:magento/community-edition:174069
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with administrative privileges can embed
    malicious code in the `Attribute Label` for `Media Attributes` section
    in the admin panel.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174069
- id: snykio:packagist:magento/community-edition:174070
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with administrative privileges can
    manipulate the notification feed, which allows an attacker to use a
    cross-site scripting vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174070
- id: snykio:packagist:magento/community-edition:174071
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to the Admin **Products**
    &gt; **Catalog** configuration section can use a stored cross-site
    scripting vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Max Chadwick
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174071
- id: snykio:packagist:magento/community-edition:174072
  title: Cross-site Scripting (XSS)
  description: |+
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user with privileges to the Admin product
    configurations section can use a stored cross-site scripting
    vulnerability to embed malicious code.



    [1]: https://packagist.org/packages/magento/project-community-edition
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Zhouyuan Yang of Fortinet's FortiGuard Labs
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174072
- id: snykio:packagist:magento/community-edition:174073
  title: Cross-site Request Forgery (CSRF)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). An attacker can delete the content of `wyswig` directory
    within the context of authenticated administrator\'s session.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-352
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - boskostan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174073
- id: snykio:packagist:magento/community-edition:174075
  title: Information disclosure
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Information
    disclosure. The default configuration allows public access to custom PHP
    settings.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Willem de Groot
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174075
- id: snykio:packagist:magento/community-edition:174076
  title: Information Exposure
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Information
    Exposure. An authenticated user can view Personally identifiable details
    of another user.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - jealousbat
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174076
- id: snykio:packagist:magento/community-edition:174078
  title: Information Disclousure
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Information
    Disclousure. Exception error reports capture administrative credentials
    in clear text format.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - magecraze
  - Matt Hamm
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174078
- id: snykio:packagist:magento/community-edition:174079
  title: Information Exposure
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Information
    Exposure. An authenticated user can enumerate and access unauthorised
    wish list.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - Roberto Suggi Liverani
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174079
- id: snykio:packagist:magento/community-edition:174080
  title: Script Injections
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Script Injections.
    An authenticated user can add and execute a malicious script on an HTML
    page through a vulnerable CLI command due to lack of data validation.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-94
  disclosed_date: 2018-03-26
  created_date: 2019-04-02
  last_modified_date: 2019-04-02
  credit:
  - scottsb
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174080
- id: snykio:packagist:magento/community-edition:174081
  title: Cross-site Scripting (XSS)
  description: |
    [magento/community-edition][1] is a modern cloud eCommerce platform.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An authenticated user can insert embedded malicious code through
    a stored cross-site scripting vulnerability in the `Catalog` section by
    manipulating `attribute_code`.



    [1]: https://packagist.org/packages/magento/project-community-edition
  affected_package: magento/community-edition
  vulnerable_versions:
  - ">=2.1  <2.1.17"
  - ">=2.2  <2.2.8"
  - ">=2.3  <2.3.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2018-03-26
  created_date: 2019-04-01
  last_modified_date: 2019-04-01
  credit:
  - Pete O'Callaghan
  references:
  - https://magento.com/security/patches/magento-2.3.1-2.2.8-and-2.1.17-security-update
  source_url: https://snyk.io/vuln/SNYK-PHP-MAGENTOCOMMUNITYEDITION-174081
