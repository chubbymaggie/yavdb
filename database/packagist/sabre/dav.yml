---
- id: friendsofphp:packagist:sabre/dav:2013-04-11
  title: Local file exposure on Windows installations
  affected_package: sabre/dav
  vulnerable_versions:
  - ">=1.6.0 <1.6.9"
  - ">=1.7.0 <1.7.7"
  - ">=1.8.0 <1.8.5"
  package_manager: packagist
  cve:
  - CVE-2013-1939
  credit:
  - FriendsOfPHP
  references:
  - https://groups.google.com/forum/?fromgroups=#!topic/sabredav-discuss/ehOUu7wTSGQ
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/socalnick/scn-social-auth/2015-01-15.yaml/blob/master/kazist/phpwhois/CVE-2015-5243.yaml/blob/master/amphp/http/2018-03-15.yaml/blob/master/amphp/artax/CVE-2016-5385.yaml/blob/master/amphp/artax/2017-05-09.yaml/blob/master/laravel/socialite/2015-07-23.yaml/blob/master/laravel/socialite/2015-08-03.yaml/blob/master/laravel/framework/CVE-2017-14775.yaml/blob/master/laravel/framework/2014-05-20.yaml/blob/master/laravel/framework/2018-03-30-1.yaml/blob/master/laravel/framework/2018-08-08-1.yaml/blob/master/laravel/framework/2014-04-15.yaml/blob/master/laravel/framework/CVE-2017-9303.yaml/blob/master/drupal/drupal/CVE-2017-6923.yaml/blob/master/drupal/drupal/CVE-2016-6212.yaml/blob/master/drupal/drupal/CVE-2016-3170.yaml/blob/master/drupal/drupal/2018-04-18.yaml/blob/master/drupal/drupal/CVE-2017-6930.yaml/blob/master/drupal/drupal/CVE-2017-6379.yaml/blob/master/drupal/drupal/CVE-2016-9450.yaml/blob/master/drupal/drupal/CVE-2017-6927.yaml/blob/master/drupal/drupal/CVE-2016-3162.yaml/blob/master/drupal/drupal/CVE-2017-6921.yaml/blob/master/drupal/drupal/CVE-2018-7602.yaml/blob/master/drupal/drupal/CVE-2016-9452.yaml/blob/master/drupal/drupal/CVE-2016-6211.yaml/blob/master/drupal/drupal/CVE-2016-3164.yaml/blob/master/drupal/drupal/CVE-2016-5385.yaml/blob/master/drupal/drupal/CVE-2017-6920.yaml/blob/master/drupal/drupal/CVE-2016-3163.yaml/blob/master/drupal/drupal/CVE-2016-3169.yaml/blob/master/drupal/drupal/CVE-2017-6931.yaml/blob/master/drupal/drupal/CVE-2018-7600.yaml/blob/master/drupal/drupal/CVE-2017-6929.yaml/blob/master/drupal/drupal/CVE-2016-3166.yaml/blob/master/drupal/drupal/CVE-2016-3167.yaml/blob/master/drupal/drupal/CVE-2016-7571.yaml/blob/master/drupal/drupal/CVE-2017-6928.yaml/blob/master/drupal/drupal/CVE-2016-3168.yaml/blob/master/drupal/drupal/CVE-2016-7572.yaml/blob/master/drupal/drupal/CVE-2017-6377.yaml/blob/master/drupal/drupal/CVE-2017-6922.yaml/blob/master/drupal/drupal/CVE-2017-6924.yaml/blob/master/drupal/drupal/CVE-2017-6925.yaml/blob/master/drupal/drupal/CVE-2017-6381.yaml/blob/master/drupal/drupal/CVE-2017-6926.yaml/blob/master/drupal/drupal/CVE-2016-7570.yaml/blob/master/drupal/drupal/CVE-2016-3171.yaml/blob/master/drupal/drupal/CVE-2017-6919.yaml/blob/master/drupal/drupal/CVE-2016-9449.yaml/blob/master/drupal/drupal/CVE-2017-6932.yaml/blob/master/drupal/drupal/CVE-2016-3165.yaml/blob/master/drupal/core/CVE-2017-6923.yaml/blob/master/drupal/core/CVE-2016-6212.yaml/blob/master/drupal/core/CVE-2016-3170.yaml/blob/master/drupal/core/2018-04-18.yaml/blob/master/drupal/core/CVE-2017-6930.yaml/blob/master/drupal/core/CVE-2017-6379.yaml/blob/master/drupal/core/CVE-2016-9450.yaml/blob/master/drupal/core/CVE-2017-6927.yaml/blob/master/drupal/core/CVE-2016-3162.yaml/blob/master/drupal/core/CVE-2017-6921.yaml/blob/master/drupal/core/CVE-2018-7602.yaml/blob/master/drupal/core/CVE-2016-9452.yaml/blob/master/drupal/core/CVE-2016-6211.yaml/blob/master/drupal/core/CVE-2016-3164.yaml/blob/master/drupal/core/CVE-2016-5385.yaml/blob/master/drupal/core/CVE-2017-6920.yaml/blob/master/drupal/core/CVE-2016-3163.yaml/blob/master/drupal/core/CVE-2016-3169.yaml/blob/master/drupal/core/CVE-2017-6931.yaml/blob/master/drupal/core/CVE-2018-7600.yaml/blob/master/drupal/core/CVE-2017-6929.yaml/blob/master/drupal/core/CVE-2016-3166.yaml/blob/master/drupal/core/CVE-2016-3167.yaml/blob/master/drupal/core/CVE-2016-7571.yaml/blob/master/drupal/core/CVE-2017-6928.yaml/blob/master/drupal/core/CVE-2016-3168.yaml/blob/master/drupal/core/CVE-2016-7572.yaml/blob/master/drupal/core/CVE-2017-6377.yaml/blob/master/drupal/core/CVE-2017-6922.yaml/blob/master/drupal/core/CVE-2017-6924.yaml/blob/master/drupal/core/CVE-2017-6925.yaml/blob/master/drupal/core/CVE-2017-6381.yaml/blob/master/drupal/core/CVE-2017-6926.yaml/blob/master/drupal/core/CVE-2016-7570.yaml/blob/master/drupal/core/CVE-2016-3171.yaml/blob/master/drupal/core/CVE-2017-6919.yaml/blob/master/drupal/core/CVE-2016-9449.yaml/blob/master/drupal/core/CVE-2017-6932.yaml/blob/master/drupal/core/CVE-2016-3165.yaml/blob/master/robrichards/xmlseclibs/2018-09-27.yaml/blob/master/erusev/parsedown/2017-05-01.yaml/blob/master/contao-components/mediaelement/CVE-2016-4567.yaml/blob/master/aws/aws-sdk-php/2015-08-31.yaml/blob/master/zetacomponents/mail/2017-11-15-1.yaml/blob/master/squizlabs/php_codesniffer/2017-03-01.yaml/blob/master/squizlabs/php_codesniffer/2017-05-18.yaml/blob/master/slim/slim/CVE-2015-2171.yaml/blob/master/fuel/core/2018-04-14-1.yaml/blob/master/fuel/core/2016-06-29-1.yaml/blob/master/contao/listing-bundle/CVE-2017-16558.yaml/blob/master/contao/core-bundle/CVE-2017-16558.yaml/blob/master/contao/core-bundle/CVE-2017-10993.yaml/blob/master/contao/core-bundle/CVE-2018-10125.yaml/blob/master/contao/newsletter-bundle/CVE-2018-5478.yaml/blob/master/contao/core/2014-02-13.yaml/blob/master/contao/core/CVE-2015-0269.yaml/blob/master/contao/core/CVE-2017-16558.yaml/blob/master/contao/core/CVE-2017-10993.yaml/blob/master/contao/core/CVE-2018-10125.yaml/blob/master/contao/core/CVE-2016-4567.yaml/blob/master/contao/core/2014-04-07.yaml/blob/master/contao/core/CVE-2018-5478.yaml/blob/master/zf-commons/zfc-user/2015-01-08.yaml/blob/master/brightlocal/phpwhois/CVE-2015-5243.yaml/blob/master/silverstripe/forum/SS-2015-017-1.yaml/blob/master/silverstripe/userforms/SS-2015-018-1.yaml/blob/master/silverstripe/cms/SS-2015-008-1.yaml/blob/master/silverstripe/cms/SS-2015-003-1.yaml/blob/master/silverstripe/cms/SS-2015-005-1.yaml/blob/master/silverstripe/framework/SS-2015-012-1.yaml/blob/master/silverstripe/framework/SS-2014-017-1.yaml/blob/master/silverstripe/framework/SS-2015-027-1.yaml/blob/master/silverstripe/framework/SS-2016-002-1.yaml/blob/master/silverstripe/framework/SS-2015-009-1.yaml/blob/master/silverstripe/framework/SS-2015-006-1.yaml/blob/master/silverstripe/framework/SS-2015-013-1.yaml/blob/master/silverstripe/framework/SS-2015-014-1.yaml/blob/master/silverstripe/framework/SS-2015-028-1.yaml/blob/master/silverstripe/framework/SS-2015-026-1.yaml/blob/master/silverstripe/framework/SS-2015-010-1.yaml/blob/master/silverstripe/framework/SS-2015-011-1.yaml/blob/master/silverstripe/framework/SS-2015-004-1.yaml/blob/master/silverstripe/framework/SS-2015-016-1.yaml/blob/master/silverstripe/framework/SS-2015-015-1.yaml/blob/master/silverstripe/framework/SS-2016-003-1.yaml/blob/master/silverstripe/framework/SS-2014-015-1.yaml/blob/master/silverstripe/framework/SS-2015-007-1.yaml/blob/master/cakephp/cakephp/2015-08-06.yaml/blob/master/cakephp/cakephp/2014-04-29.yaml/blob/master/cakephp/cakephp/2015-05-28.yaml/blob/master/cakephp/cakephp/2015-05-07.yaml/blob/master/cakephp/cakephp/2015-11-05.yaml/blob/master/cakephp/cakephp/2018-05-20.yaml/blob/master/yiisoft/yii2-bootstrap/CVE-2015-3397.yaml/blob/master/yiisoft/yii/CVE-2014-4672.yaml/blob/master/yiisoft/yii2-elasticsearch/CVE-2018-8074.yaml/blob/master/yiisoft/yii2-jui/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-gii/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2018-6010.yaml/blob/master/yiisoft/yii2/CVE-2018-7269.yaml/blob/master/yiisoft/yii2/CVE-2015-5467.yaml/blob/master/yiisoft/yii2/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2018-6009.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6010.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-7269.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-5467.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6009.yaml/blob/master/yiisoft/yii2-redis/CVE-2018-8073.yaml/blob/master/pusher/pusher-php-server/2015-05-13.yaml/blob/master/oro/crm/2015-07-08.yaml/blob/master/oro/platform/2015-07-08.yaml/blob/master/zfr/zfr-oauth2-server-module/2014-04-26.yaml/blob/master/cart2quote/module-quotation/2017-02-01.yaml/blob/master/zfcampus/zf-apigility-doctrine/ZF2015-07.yaml/blob/master/bugsnag/bugsnag-laravel/CVE-2016-5385.yaml/blob/master/alterphp/easyadmin-extension-bundle/2018-10-02.yaml/blob/master/sabre/dav/CVE-2014-2055.yaml/blob/master/sabre/dav/CVE-2013-1939.yaml
- id: friendsofphp:packagist:sabre/dav:2014-02-26
  title: XEE issue that could expose local files or easily trigger a DOS attack.
  affected_package: sabre/dav
  vulnerable_versions:
  - ">=1.6.0 <1.6.99"
  - ">=1.7.0 <1.7.11"
  - ">=1.8.0 <1.8.9"
  package_manager: packagist
  cve:
  - CVE-2014-2055
  credit:
  - FriendsOfPHP
  references:
  - https://github.com/fruux/sabre-dav/releases/tag/1.7.11
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/socalnick/scn-social-auth/2015-01-15.yaml/blob/master/kazist/phpwhois/CVE-2015-5243.yaml/blob/master/amphp/http/2018-03-15.yaml/blob/master/amphp/artax/CVE-2016-5385.yaml/blob/master/amphp/artax/2017-05-09.yaml/blob/master/laravel/socialite/2015-07-23.yaml/blob/master/laravel/socialite/2015-08-03.yaml/blob/master/laravel/framework/CVE-2017-14775.yaml/blob/master/laravel/framework/2014-05-20.yaml/blob/master/laravel/framework/2018-03-30-1.yaml/blob/master/laravel/framework/2018-08-08-1.yaml/blob/master/laravel/framework/2014-04-15.yaml/blob/master/laravel/framework/CVE-2017-9303.yaml/blob/master/drupal/drupal/CVE-2017-6923.yaml/blob/master/drupal/drupal/CVE-2016-6212.yaml/blob/master/drupal/drupal/CVE-2016-3170.yaml/blob/master/drupal/drupal/2018-04-18.yaml/blob/master/drupal/drupal/CVE-2017-6930.yaml/blob/master/drupal/drupal/CVE-2017-6379.yaml/blob/master/drupal/drupal/CVE-2016-9450.yaml/blob/master/drupal/drupal/CVE-2017-6927.yaml/blob/master/drupal/drupal/CVE-2016-3162.yaml/blob/master/drupal/drupal/CVE-2017-6921.yaml/blob/master/drupal/drupal/CVE-2018-7602.yaml/blob/master/drupal/drupal/CVE-2016-9452.yaml/blob/master/drupal/drupal/CVE-2016-6211.yaml/blob/master/drupal/drupal/CVE-2016-3164.yaml/blob/master/drupal/drupal/CVE-2016-5385.yaml/blob/master/drupal/drupal/CVE-2017-6920.yaml/blob/master/drupal/drupal/CVE-2016-3163.yaml/blob/master/drupal/drupal/CVE-2016-3169.yaml/blob/master/drupal/drupal/CVE-2017-6931.yaml/blob/master/drupal/drupal/CVE-2018-7600.yaml/blob/master/drupal/drupal/CVE-2017-6929.yaml/blob/master/drupal/drupal/CVE-2016-3166.yaml/blob/master/drupal/drupal/CVE-2016-3167.yaml/blob/master/drupal/drupal/CVE-2016-7571.yaml/blob/master/drupal/drupal/CVE-2017-6928.yaml/blob/master/drupal/drupal/CVE-2016-3168.yaml/blob/master/drupal/drupal/CVE-2016-7572.yaml/blob/master/drupal/drupal/CVE-2017-6377.yaml/blob/master/drupal/drupal/CVE-2017-6922.yaml/blob/master/drupal/drupal/CVE-2017-6924.yaml/blob/master/drupal/drupal/CVE-2017-6925.yaml/blob/master/drupal/drupal/CVE-2017-6381.yaml/blob/master/drupal/drupal/CVE-2017-6926.yaml/blob/master/drupal/drupal/CVE-2016-7570.yaml/blob/master/drupal/drupal/CVE-2016-3171.yaml/blob/master/drupal/drupal/CVE-2017-6919.yaml/blob/master/drupal/drupal/CVE-2016-9449.yaml/blob/master/drupal/drupal/CVE-2017-6932.yaml/blob/master/drupal/drupal/CVE-2016-3165.yaml/blob/master/drupal/core/CVE-2017-6923.yaml/blob/master/drupal/core/CVE-2016-6212.yaml/blob/master/drupal/core/CVE-2016-3170.yaml/blob/master/drupal/core/2018-04-18.yaml/blob/master/drupal/core/CVE-2017-6930.yaml/blob/master/drupal/core/CVE-2017-6379.yaml/blob/master/drupal/core/CVE-2016-9450.yaml/blob/master/drupal/core/CVE-2017-6927.yaml/blob/master/drupal/core/CVE-2016-3162.yaml/blob/master/drupal/core/CVE-2017-6921.yaml/blob/master/drupal/core/CVE-2018-7602.yaml/blob/master/drupal/core/CVE-2016-9452.yaml/blob/master/drupal/core/CVE-2016-6211.yaml/blob/master/drupal/core/CVE-2016-3164.yaml/blob/master/drupal/core/CVE-2016-5385.yaml/blob/master/drupal/core/CVE-2017-6920.yaml/blob/master/drupal/core/CVE-2016-3163.yaml/blob/master/drupal/core/CVE-2016-3169.yaml/blob/master/drupal/core/CVE-2017-6931.yaml/blob/master/drupal/core/CVE-2018-7600.yaml/blob/master/drupal/core/CVE-2017-6929.yaml/blob/master/drupal/core/CVE-2016-3166.yaml/blob/master/drupal/core/CVE-2016-3167.yaml/blob/master/drupal/core/CVE-2016-7571.yaml/blob/master/drupal/core/CVE-2017-6928.yaml/blob/master/drupal/core/CVE-2016-3168.yaml/blob/master/drupal/core/CVE-2016-7572.yaml/blob/master/drupal/core/CVE-2017-6377.yaml/blob/master/drupal/core/CVE-2017-6922.yaml/blob/master/drupal/core/CVE-2017-6924.yaml/blob/master/drupal/core/CVE-2017-6925.yaml/blob/master/drupal/core/CVE-2017-6381.yaml/blob/master/drupal/core/CVE-2017-6926.yaml/blob/master/drupal/core/CVE-2016-7570.yaml/blob/master/drupal/core/CVE-2016-3171.yaml/blob/master/drupal/core/CVE-2017-6919.yaml/blob/master/drupal/core/CVE-2016-9449.yaml/blob/master/drupal/core/CVE-2017-6932.yaml/blob/master/drupal/core/CVE-2016-3165.yaml/blob/master/robrichards/xmlseclibs/2018-09-27.yaml/blob/master/erusev/parsedown/2017-05-01.yaml/blob/master/contao-components/mediaelement/CVE-2016-4567.yaml/blob/master/aws/aws-sdk-php/2015-08-31.yaml/blob/master/zetacomponents/mail/2017-11-15-1.yaml/blob/master/squizlabs/php_codesniffer/2017-03-01.yaml/blob/master/squizlabs/php_codesniffer/2017-05-18.yaml/blob/master/slim/slim/CVE-2015-2171.yaml/blob/master/fuel/core/2018-04-14-1.yaml/blob/master/fuel/core/2016-06-29-1.yaml/blob/master/contao/listing-bundle/CVE-2017-16558.yaml/blob/master/contao/core-bundle/CVE-2017-16558.yaml/blob/master/contao/core-bundle/CVE-2017-10993.yaml/blob/master/contao/core-bundle/CVE-2018-10125.yaml/blob/master/contao/newsletter-bundle/CVE-2018-5478.yaml/blob/master/contao/core/2014-02-13.yaml/blob/master/contao/core/CVE-2015-0269.yaml/blob/master/contao/core/CVE-2017-16558.yaml/blob/master/contao/core/CVE-2017-10993.yaml/blob/master/contao/core/CVE-2018-10125.yaml/blob/master/contao/core/CVE-2016-4567.yaml/blob/master/contao/core/2014-04-07.yaml/blob/master/contao/core/CVE-2018-5478.yaml/blob/master/zf-commons/zfc-user/2015-01-08.yaml/blob/master/brightlocal/phpwhois/CVE-2015-5243.yaml/blob/master/silverstripe/forum/SS-2015-017-1.yaml/blob/master/silverstripe/userforms/SS-2015-018-1.yaml/blob/master/silverstripe/cms/SS-2015-008-1.yaml/blob/master/silverstripe/cms/SS-2015-003-1.yaml/blob/master/silverstripe/cms/SS-2015-005-1.yaml/blob/master/silverstripe/framework/SS-2015-012-1.yaml/blob/master/silverstripe/framework/SS-2014-017-1.yaml/blob/master/silverstripe/framework/SS-2015-027-1.yaml/blob/master/silverstripe/framework/SS-2016-002-1.yaml/blob/master/silverstripe/framework/SS-2015-009-1.yaml/blob/master/silverstripe/framework/SS-2015-006-1.yaml/blob/master/silverstripe/framework/SS-2015-013-1.yaml/blob/master/silverstripe/framework/SS-2015-014-1.yaml/blob/master/silverstripe/framework/SS-2015-028-1.yaml/blob/master/silverstripe/framework/SS-2015-026-1.yaml/blob/master/silverstripe/framework/SS-2015-010-1.yaml/blob/master/silverstripe/framework/SS-2015-011-1.yaml/blob/master/silverstripe/framework/SS-2015-004-1.yaml/blob/master/silverstripe/framework/SS-2015-016-1.yaml/blob/master/silverstripe/framework/SS-2015-015-1.yaml/blob/master/silverstripe/framework/SS-2016-003-1.yaml/blob/master/silverstripe/framework/SS-2014-015-1.yaml/blob/master/silverstripe/framework/SS-2015-007-1.yaml/blob/master/cakephp/cakephp/2015-08-06.yaml/blob/master/cakephp/cakephp/2014-04-29.yaml/blob/master/cakephp/cakephp/2015-05-28.yaml/blob/master/cakephp/cakephp/2015-05-07.yaml/blob/master/cakephp/cakephp/2015-11-05.yaml/blob/master/cakephp/cakephp/2018-05-20.yaml/blob/master/yiisoft/yii2-bootstrap/CVE-2015-3397.yaml/blob/master/yiisoft/yii/CVE-2014-4672.yaml/blob/master/yiisoft/yii2-elasticsearch/CVE-2018-8074.yaml/blob/master/yiisoft/yii2-jui/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-gii/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2018-6010.yaml/blob/master/yiisoft/yii2/CVE-2018-7269.yaml/blob/master/yiisoft/yii2/CVE-2015-5467.yaml/blob/master/yiisoft/yii2/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2018-6009.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6010.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-7269.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-5467.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6009.yaml/blob/master/yiisoft/yii2-redis/CVE-2018-8073.yaml/blob/master/pusher/pusher-php-server/2015-05-13.yaml/blob/master/oro/crm/2015-07-08.yaml/blob/master/oro/platform/2015-07-08.yaml/blob/master/zfr/zfr-oauth2-server-module/2014-04-26.yaml/blob/master/cart2quote/module-quotation/2017-02-01.yaml/blob/master/zfcampus/zf-apigility-doctrine/ZF2015-07.yaml/blob/master/bugsnag/bugsnag-laravel/CVE-2016-5385.yaml/blob/master/alterphp/easyadmin-extension-bundle/2018-10-02.yaml/blob/master/sabre/dav/CVE-2014-2055.yaml
- id: ossindex:packagist:sabre/dav:2016-06-05
  title: XEE issue that could expose local files or easily trigger a DOS attack.
  description: XEE issue that could expose local files or easily trigger a DOS attack.
  affected_package: sabre/dav
  vulnerable_versions:
  - ">=1.6.0 <1.6.99"
  - ">=1.7.0 <1.7.11"
  - ">=1.8.0 <1.8.9"
  package_manager: packagist
  credit:
  - OSSIndex
  references:
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/sabre/dav/CVE-2014-2055.yaml
  - https://github.com/fruux/sabre-dav/releases/tag/1.7.11
  source_url: https://ossindex.net/resource/package/8397314004/vulnerabilities
- id: ossindex:packagist:sabre/dav:2016-06-05
  title: Local file exposure on Windows installations
  description: Local file exposure on Windows installations
  affected_package: sabre/dav
  vulnerable_versions:
  - ">=1.6.0 <1.6.9"
  - ">=1.7.0 <1.7.7"
  - ">=1.8.0 <1.8.5"
  package_manager: packagist
  credit:
  - OSSIndex
  references:
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/sabre/dav/CVE-2013-1939.yaml
  - https://groups.google.com/forum/?fromgroups=#!topic/sabredav-discuss/ehOUu7wTSGQ
  source_url: https://ossindex.net/resource/package/8397314004/vulnerabilities
- id: snykio:packagist:sabre/dav:2013-04-11
  title: Information Exposure
  description: |
    Affected versions of [`sabre/dav`][1] are vulnerable to Information
    Exposure.

    The HTML\\Browser plugin in SabreDAV before 1.6.9, 1.7.x before 1.7.7,
    and 1.8.x before 1.8.5, as used in ownCloud, when running on Windows,
    does not properly check path separators in the base path, which allows
    remote attackers to read arbitrary files via a \\ (backslash) character.



    [1]: https://packagist.org/packages/sabre/dav
    \nAffected versions of [`sabre/dav`][1] are vulnerable to Information
    Exposure.

    The HTML\\Browser plugin in SabreDAV before 1.6.9, 1.7.x before 1.7.7,
    and 1.8.x before 1.8.5, as used in ownCloud, when running on Windows,
    does not properly check path separators in the base path, which allows
    remote attackers to read arbitrary files via a \\ (backslash) character.



    [1]: https://packagist.org/packages/sabre/dav
    \nAffected versions of [`sabre/dav`][1] are vulnerable to Information
    Exposure.

    The HTML\\Browser plugin in SabreDAV before 1.6.9, 1.7.x before 1.7.7,
    and 1.8.x before 1.8.5, as used in ownCloud, when running on Windows,
    does not properly check path separators in the base path, which allows
    remote attackers to read arbitrary files via a \\ (backslash) character.



    [1]: https://packagist.org/packages/sabre/dav
  affected_package: sabre/dav
  vulnerable_versions:
  - "<1.6.9 || >=1.7.0 &&  <1.7.7 || >=1.8.0 &&  <1.8.5"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2013-1939
  cwe:
  - CWE-200
  credit:
  - Unknown
  references:
  - https://groups.google.com/forum/?fromgroups=#!topic/sabredav-discuss/ehOUu7wTSGQ
  source_url: https://snyk.io/vuln/SNYK-PHP-SABREDAV-70130
- id: snykio:packagist:sabre/dav:2014-02-26
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`sabre/dav`][1] are vulnerable to XML External
    Entity (XXE) Injection.

    SabreDAV before 1.7.11, as used in ownCloud Server before 5.0.15 and
    6.0.x before 6.0.2, allows remote attackers to read arbitrary files,
    cause a denial of service, or possibly have other impact via an XML
    External Entity (XXE) attack.



    [1]: https://packagist.org/packages/sabre/dav
    \nAffected versions of [`sabre/dav`][1] are vulnerable to XML External
    Entity (XXE) Injection.

    SabreDAV before 1.7.11, as used in ownCloud Server before 5.0.15 and
    6.0.x before 6.0.2, allows remote attackers to read arbitrary files,
    cause a denial of service, or possibly have other impact via an XML
    External Entity (XXE) attack.



    [1]: https://packagist.org/packages/sabre/dav
    \nAffected versions of [`sabre/dav`][1] are vulnerable to XML External
    Entity (XXE) Injection.

    SabreDAV before 1.7.11, as used in ownCloud Server before 5.0.15 and
    6.0.x before 6.0.2, allows remote attackers to read arbitrary files,
    cause a denial of service, or possibly have other impact via an XML
    External Entity (XXE) attack.



    [1]: https://packagist.org/packages/sabre/dav
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: sabre/dav
  vulnerable_versions:
  - ">=1.8.0 &&  <1.8.9 || <1.7.11"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2014-2055
  cwe:
  - CWE-611
  credit:
  - Unknown
  references:
  - https://github.com/fruux/sabre-dav/releases/tag/1.7.11
  source_url: https://snyk.io/vuln/SNYK-PHP-SABREDAV-70131
