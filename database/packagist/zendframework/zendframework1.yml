---
- id: friendsofphp:packagist:zendframework/zendframework1:2009-02-13
  title: LFI vector in Zend_View::setScriptPath() and render()
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.5"
  package_manager: packagist
  disclosed_date: 2009-02-13
  created_date: 2009-02-13
  last_modified_date: 2009-02-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2009-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2009-02-27
  title: XSS vector in Zend_Filter_StripTags
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.6"
  package_manager: packagist
  disclosed_date: 2009-02-27
  created_date: 2009-02-27
  last_modified_date: 2009-02-27
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2009-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2010-01-08
  title: Potential XSS vector in Zend_Service_ReCaptcha_MailHide
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.9"
  - ">=1.8.0 <1.8.5"
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-05
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2010-04-01
  title: Potential Security Issues in Bundled Dojo Library
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.10.0 <1.10.3"
  - ">=1.9.0 <1.9.8"
  package_manager: packagist
  disclosed_date: 2010-04-01
  created_date: 2010-04-01
  last_modified_date: 2010-04-01
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-07
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2011-05-03
  title: Potential SQL Injection Vector When Using PDO_MySql
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.10.0 <1.10.9"
  - ">=1.11.0 <1.11.6"
  package_manager: packagist
  disclosed_date: 2011-05-03
  created_date: 2011-05-03
  last_modified_date: 2011-05-03
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2011-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2012-06-13
  title: Potential XSS in Development Environment Error View Script
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.4"
  package_manager: packagist
  disclosed_date: 2012-06-13
  created_date: 2012-06-13
  last_modified_date: 2012-06-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2011-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2012-08-20
  title: Local file disclosure via XXE injection in Zend_XmlRpc
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.13"
  package_manager: packagist
  disclosed_date: 2012-08-20
  created_date: 2012-08-20
  last_modified_date: 2012-08-20
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2012-09-20
  title: Denial of Service vector via XEE injection
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.13"
  package_manager: packagist
  disclosed_date: 2012-09-20
  created_date: 2012-09-20
  last_modified_date: 2012-09-20
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2012-12-18
  title: Potential XML eXternal Entity injection vectors in Zend Framework 1 Zend_Feed
    component
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.11.0 <1.11.15"
  - ">=1.12.0 <1.12.1"
  package_manager: packagist
  disclosed_date: 2012-12-18
  created_date: 2012-12-18
  last_modified_date: 2012-12-18
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-05
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-05.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2014-02-17
  title: Potential security issue in login mechanism of ZendOpenId and Zend_OpenId
    consumer
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.4"
  package_manager: packagist
  disclosed_date: 2014-02-17
  created_date: 2014-02-17
  last_modified_date: 2014-02-17
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2014-02-26
  title: 'Potential XXE/XEE attacks using PHP functions: simplexml_load_*, DOMDocument::loadXML,
    and xml_parse'
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.4"
  package_manager: packagist
  disclosed_date: 2014-02-26
  created_date: 2014-02-26
  last_modified_date: 2014-02-26
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2014-06-11
  title: Potential SQL injection in the ORDER implementation of Zend_Db_Select
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.7"
  package_manager: packagist
  disclosed_date: 2014-06-11
  created_date: 2014-06-11
  last_modified_date: 2014-06-11
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-04
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-04.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2015-09-15
  title: Potential SQL injection vector using null byte for PDO (MsSql, SQLite)
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.16"
  package_manager: packagist
  disclosed_date: 2015-09-15
  created_date: 2015-09-15
  last_modified_date: 2015-09-15
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-08
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-08.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2015-11-23
  title: Potential Information Disclosure and Insufficient Entropy vulnerability in
    Zend\Captcha\Word
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.17"
  package_manager: packagist
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-09
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-09.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2016-04-13
  title: Potential Insufficient Entropy Vulnerability in ZF1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.18"
  package_manager: packagist
  disclosed_date: 2016-04-13
  created_date: 2016-04-13
  last_modified_date: 2016-04-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2016-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:2016-09-02
  title: Potential SQL injection in ORDER and GROUP functions of ZF1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.20"
  package_manager: packagist
  disclosed_date: 2016-09-02
  created_date: 2016-09-02
  last_modified_date: 2016-09-02
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2016-03
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-03.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2014-8088
  title: Anonymous authentication in ldap_bind() function of PHP, using null byte
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.9"
  package_manager: packagist
  cve:
  - CVE-2014-8088
  disclosed_date: 2014-09-16
  created_date: 2014-09-16
  last_modified_date: 2014-09-16
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-05
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-05.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2014-8089
  title: SQL injection vector when manually quoting values for sqlsrv extension, using
    null byte
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.9"
  package_manager: packagist
  cve:
  - CVE-2014-8089
  disclosed_date: 2014-09-16
  created_date: 2014-09-16
  last_modified_date: 2014-09-16
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-06
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-06.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2015-3154
  title: Potential CRLF injection attacks in mail and HTTP headers
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.12"
  package_manager: packagist
  cve:
  - CVE-2015-3154
  disclosed_date: 2015-05-19
  created_date: 2015-05-19
  last_modified_date: 2015-05-19
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-04
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-04.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2015-5161
  title: XXE/XEE vector when using ZendXml on multibyte payloads
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.14"
  package_manager: packagist
  cve:
  - CVE-2015-5161
  disclosed_date: 2015-08-03
  created_date: 2015-08-03
  last_modified_date: 2015-08-03
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-06
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-06.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2015-5723
  title: Filesystem Permissions Issues in Multiple Components
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.16"
  package_manager: packagist
  cve:
  - CVE-2015-5723
  disclosed_date: 2015-09-15
  created_date: 2015-09-15
  last_modified_date: 2015-09-15
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-07
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-07.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:CVE-2016-6233
  title: Potential SQL injection in ORDER and GROUP statements of Zend_Db_Select
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.19"
  package_manager: packagist
  cve:
  - CVE-2016-6233
  disclosed_date: 2016-07-06
  created_date: 2016-07-06
  last_modified_date: 2016-07-06
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2016-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2009-01.yaml
  title: LFI vector in Zend_View::setScriptPath() and render()
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.5"
  package_manager: packagist
  disclosed_date: 2009-02-13
  created_date: 2009-02-13
  last_modified_date: 2009-02-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2009-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2009-02.yaml
  title: XSS vector in Zend_Filter_StripTags
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.6"
  package_manager: packagist
  disclosed_date: 2009-02-27
  created_date: 2009-02-27
  last_modified_date: 2009-02-27
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2009-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-01.yaml
  title: Potential XSS vectors due to inconsistent encodings
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-02.yaml
  title: Potential XSS vector in Zend_Dojo_View_Helper_Editor
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.9"
  - ">=1.8.0 <1.8.5"
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-03.yaml
  title: Potential XSS vector in Zend_Filter_StripTags when comments allowed
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.9"
  - ">=1.8.0 <1.8.5"
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-03
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-03.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-05.yaml
  title: Potential XSS vector in Zend_Service_ReCaptcha_MailHide
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.9"
  - ">=1.8.0 <1.8.5"
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-05
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-06.yaml
  title: Potential Security Issues in Bundled Dojo Library
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.9"
  - ">=1.8.0 <1.8.5"
  - ">=1.9.0 <1.9.7"
  package_manager: packagist
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-06
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2010-07.yaml
  title: Potential Security Issues in Bundled Dojo Library
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.10.0 <1.10.3"
  - ">=1.9.0 <1.9.8"
  package_manager: packagist
  disclosed_date: 2010-04-01
  created_date: 2010-04-01
  last_modified_date: 2010-04-01
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2010-07
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2011-01.yaml
  title: Potential XSS in Development Environment Error View Script
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.4"
  package_manager: packagist
  disclosed_date: 2012-06-13
  created_date: 2012-06-13
  last_modified_date: 2012-06-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2011-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2011-02.yaml
  title: Potential SQL Injection Vector When Using PDO_MySql
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.10.0 <1.10.9"
  - ">=1.11.0 <1.11.6"
  package_manager: packagist
  disclosed_date: 2011-05-03
  created_date: 2011-05-03
  last_modified_date: 2011-05-03
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2011-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2012-01.yaml
  title: Local file disclosure via XXE injection in Zend_XmlRpc
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.13"
  package_manager: packagist
  disclosed_date: 2012-08-20
  created_date: 2012-08-20
  last_modified_date: 2012-08-20
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2012-02.yaml
  title: Denial of Service vector via XEE injection
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.0.0 <1.11.13"
  package_manager: packagist
  disclosed_date: 2012-09-20
  created_date: 2012-09-20
  last_modified_date: 2012-09-20
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2012-05.yaml
  title: Potential XML eXternal Entity injection vectors in Zend Framework 1 Zend_Feed
    component
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.11.0 <1.11.15"
  - ">=1.12.0 <1.12.1"
  package_manager: packagist
  disclosed_date: 2012-12-18
  created_date: 2012-12-18
  last_modified_date: 2012-12-18
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2012-05
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-05.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2014-01.yaml
  title: 'Potential XXE/XEE attacks using PHP functions: simplexml_load_*, DOMDocument::loadXML,
    and xml_parse'
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.4"
  package_manager: packagist
  disclosed_date: 2014-02-26
  created_date: 2014-02-26
  last_modified_date: 2014-02-26
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2014-02.yaml
  title: Potential security issue in login mechanism of ZendOpenId and Zend_OpenId
    consumer
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.4"
  package_manager: packagist
  disclosed_date: 2014-02-17
  created_date: 2014-02-17
  last_modified_date: 2014-02-17
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-02
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-02.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2014-04.yaml
  title: Potential SQL injection in the ORDER implementation of Zend_Db_Select
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.7"
  package_manager: packagist
  disclosed_date: 2014-06-11
  created_date: 2014-06-11
  last_modified_date: 2014-06-11
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2014-04
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2014-04.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2015-08.yaml
  title: Potential SQL injection vector using null byte for PDO (MsSql, SQLite)
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.16"
  package_manager: packagist
  disclosed_date: 2015-09-15
  created_date: 2015-09-15
  last_modified_date: 2015-09-15
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-08
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-08.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2015-09.yaml
  title: Potential Information Disclosure and Insufficient Entropy vulnerability in
    Zend\Captcha\Word
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.17"
  package_manager: packagist
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2015-09
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-09.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2016-01.yaml
  title: Potential Insufficient Entropy Vulnerability in ZF1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0 <1.12.18"
  package_manager: packagist
  disclosed_date: 2016-04-13
  created_date: 2016-04-13
  last_modified_date: 2016-04-13
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2016-01
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-01.yaml
- id: friendsofphp:packagist:zendframework/zendframework1:ZF2016-03.yaml
  title: Potential SQL injection in ORDER and GROUP functions of ZF1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.20"
  package_manager: packagist
  disclosed_date: 2016-09-02
  created_date: 2016-09-02
  last_modified_date: 2016-09-02
  credit:
  - FriendsOfPHP
  references:
  - https://framework.zend.com/security/advisory/ZF2016-03
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-03.yaml
- id: ossindex:packagist:zendframework/zendframework1:2016-06-05
  title: LFI vector in Zend_View::setScriptPath() and render()
  description: LFI vector in Zend_View::setScriptPath() and render()
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0 <1.7.5"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://framework.zend.com/security/advisory/ZF2009-01
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-01.yaml
  source_url: https://ossindex.net/resource/package/8397710836/vulnerabilities
- id: ossindex:packagist:zendframework/zendframework1:2016-10-22
  title: Potential SQL injection in ORDER and GROUP statements of Zend_Db_Select
  description: Potential SQL injection in ORDER and GROUP statements of Zend_Db_Select
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.19"
  package_manager: packagist
  disclosed_date: 2016-10-22
  created_date: 2016-10-22
  last_modified_date: 2016-10-22
  credit:
  - OSSIndex
  references:
  - http://framework.zend.com/security/advisory/ZF2016-02
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2016-02.yaml
  source_url: https://ossindex.net/resource/package/8397710836/vulnerabilities
- id: snykio:packagist:zendframework/zendframework1:70338
  title: Local File Inclusion
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Local File Inclusion.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.7.5"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-98
  disclosed_date: 2009-02-13
  created_date: 2009-02-13
  last_modified_date: 2009-02-13
  credit:
  - Grzegorz Nowicki
  references:
  - https://framework.zend.com/security/advisory/ZF2009-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70338
- id: snykio:packagist:zendframework/zendframework1:70339
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.7.6"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2009-02-27
  created_date: 2009-02-27
  last_modified_date: 2009-02-27
  credit:
  - Aleksey Rechinskiy
  references:
  - https://framework.zend.com/security/advisory/ZF2009-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70339
- id: snykio:packagist:zendframework/zendframework1:70340
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.9.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - Pádraic Brady
  references:
  - https://framework.zend.com/security/advisory/ZF2010-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70340
- id: snykio:packagist:zendframework/zendframework1:70341
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.7.9"
  - ">=1.8.0  <1.8.5"
  - ">=1.9.0  <1.9.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - ZF201002
  references:
  - https://framework.zend.com/security/advisory/ZF2010-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70341
- id: snykio:packagist:zendframework/zendframework1:70342
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.7.9"
  - ">=1.8.0  <1.8.5"
  - ">=1.9.0  <1.9.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - Pádraic Brady
  references:
  - https://framework.zend.com/security/advisory/ZF2010-03
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70342
- id: snykio:packagist:zendframework/zendframework1:70343
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.7.9"
  - ">=1.8.0  <1.8.5"
  - ">=1.9.0  <1.9.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - Pádraic Brady
  references:
  - https://framework.zend.com/security/advisory/ZF2010-05
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70343
- id: snykio:packagist:zendframework/zendframework1:70344
  title: HTML Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to HTML Injection.

    `Zend_Json_Encoder` was not taking into account the solidus character
    (`/`) during encoding, leading to incompatibilities with the JSON
    specification, and opening the potential for XSS or HTML injection
    attacks when returning HTML within a JSON string.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.7.0  <1.7.9"
  - ">=1.8.0  <1.8.5"
  - ">=1.9.0  <1.9.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-74
  disclosed_date: 2010-01-08
  created_date: 2010-01-08
  last_modified_date: 2010-01-08
  credit:
  - Pádraic Brady
  references:
  - https://framework.zend.com/security/advisory/ZF2010-06
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70344
- id: snykio:packagist:zendframework/zendframework1:70345
  title: HTML Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to HTML Injection.

    `Zend_Json_Encoder` was not taking into account the solidus character
    (`/`) during encoding, leading to incompatibilities with the JSON
    specification, and opening the potential for XSS or HTML injection
    attacks when returning HTML within a JSON string.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.10.0  <1.10.3"
  - ">=1.9.0  <1.9.8"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-74
  disclosed_date: 2010-04-01
  created_date: 2010-04-01
  last_modified_date: 2010-04-01
  credit:
  - Paul Verhoeven
  references:
  - https://framework.zend.com/security/advisory/ZF2010-07
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70345
- id: snykio:packagist:zendframework/zendframework1:70346
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1  <1.11.4"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2012-06-13
  created_date: 2012-06-13
  last_modified_date: 2012-06-13
  credit:
  - Unknown
  references:
  - https://framework.zend.com/security/advisory/ZF2011-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70346
- id: snykio:packagist:zendframework/zendframework1:70347
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.9.8"
  - ">=1.10.0  <1.10.3"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2011-05-03
  created_date: 2011-05-03
  last_modified_date: 2011-05-03
  credit:
  - Paul Verhoeven
  references:
  - https://framework.zend.com/security/advisory/ZF2011-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70347
- id: snykio:packagist:zendframework/zendframework1:70348
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Local file disclosure via XXE injection in Zend\_XmlRpc.



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.11.13"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2012-08-20
  created_date: 2012-08-20
  last_modified_date: 2012-08-20
  credit:
  - Johannes Greil
  - Kestutis Gudinavicius
  references:
  - https://framework.zend.com/security/advisory/ZF2012-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70348
- id: snykio:packagist:zendframework/zendframework1:70349
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to XML External Entity (XXE) Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.11.13"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2012-09-20
  created_date: 2012-09-20
  last_modified_date: 2012-09-20
  credit:
  - Pádraic Brady
  references:
  - https://framework.zend.com/security/advisory/ZF2012-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70349
- id: snykio:packagist:zendframework/zendframework1:70350
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to XML External Entity (XXE) Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.11.0  <1.11.15"
  - ">=1.12.0  <1.12.1"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2012-12-18
  created_date: 2012-12-18
  last_modified_date: 2012-12-18
  credit:
  - Yury Dyachenko
  references:
  - https://framework.zend.com/security/advisory/ZF2012-05
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70350
- id: snykio:packagist:zendframework/zendframework1:70351
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to XML External Entity (XXE) Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.4"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-611
  disclosed_date: 2014-02-26
  created_date: 2014-02-26
  last_modified_date: 2014-02-26
  credit:
  - Lukas Reschke
  references:
  - https://framework.zend.com/security/advisory/ZF2014-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70351
- id: snykio:packagist:zendframework/zendframework1:70352
  title: User Impersonation
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to User Impersonation.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0  <1.12.4"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-290
  disclosed_date: 2014-02-17
  created_date: 2014-02-17
  last_modified_date: 2014-02-17
  credit:
  - Christian Mainka
  - Vladislav Mladenov
  references:
  - https://framework.zend.com/security/advisory/ZF2014-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70352
- id: snykio:packagist:zendframework/zendframework1:70353
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0  <1.12.7"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2014-06-11
  created_date: 2014-06-11
  last_modified_date: 2014-06-11
  credit:
  - Cassiano Dal Pizzol
  references:
  - https://framework.zend.com/security/advisory/ZF2014-04
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70353
- id: snykio:packagist:zendframework/zendframework1:70359
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0  <1.12.16"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2015-09-15
  created_date: 2015-09-15
  last_modified_date: 2015-09-15
  credit:
  - Chris KingsLynne
  references:
  - https://framework.zend.com/security/advisory/ZF2015-08
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70359
- id: snykio:packagist:zendframework/zendframework1:70360
  title: Information Exposure
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Potential Information Disclosure and Insufficient Entropy
    vulnerability in Zend\\Captcha\\Word.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.17"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-200
  disclosed_date: 2015-11-23
  created_date: 2015-11-23
  last_modified_date: 2015-11-23
  credit:
  - Vincent Herbulot
  references:
  - https://framework.zend.com/security/advisory/ZF2015-09
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70360
- id: snykio:packagist:zendframework/zendframework1:70361
  title: Access Restriction Bypass
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Access Restriction Bypass.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.18"
  severity: high
  package_manager: packagist
  cwe:
  - CWE-287
  disclosed_date: 2016-04-13
  created_date: 2016-04-13
  last_modified_date: 2016-04-13
  credit:
  - Brian Engert
  references:
  - https://framework.zend.com/security/advisory/ZF2016-01
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70361
- id: snykio:packagist:zendframework/zendframework1:70363
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.20"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2016-09-02
  created_date: 2016-09-02
  last_modified_date: 2016-09-02
  credit:
  - Hiroshi Tokumaru
  references:
  - https://framework.zend.com/security/advisory/ZF2016-03
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70363
- id: snykio:packagist:zendframework/zendframework1:CVE-2014-8088
  title: Authentication Bypass
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Authentication Bypass.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2014-8088
  cwe:
  - CWE-592
  disclosed_date: 2014-09-16
  created_date: 2014-09-16
  last_modified_date: 2014-09-16
  credit:
  - Matthew Daley
  references:
  - https://framework.zend.com/security/advisory/ZF2014-05
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70354
- id: snykio:packagist:zendframework/zendframework1:CVE-2014-8089
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection when manually quoting values for sqlsrv extension,
    using null byte.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - ">=1.12.0  <1.12.9"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2014-8089
  cwe:
  - CWE-89
  disclosed_date: 2014-09-16
  created_date: 2014-09-16
  last_modified_date: 2014-09-16
  credit:
  - Jonas Sandström
  references:
  - https://framework.zend.com/security/advisory/ZF2014-06
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70355
- id: snykio:packagist:zendframework/zendframework1:CVE-2015-3154
  title: CRLF Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Potential CRLF injection attacks in mail and HTTP headers.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.12"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2015-3154
  cwe:
  - CWE-113
  disclosed_date: 2015-05-19
  created_date: 2015-05-19
  last_modified_date: 2015-05-19
  credit:
  - Filippo Tessarotto
  - Maks3w
  references:
  - https://framework.zend.com/security/advisory/ZF2015-04
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70356
- id: snykio:packagist:zendframework/zendframework1:CVE-2015-5161
  title: XML External Entity (XXE) Injection
  description: |+
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to XML External Entity (XXE) Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.14"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2015-5161
  cwe:
  - CWE-611
  disclosed_date: 2015-08-03
  created_date: 2015-08-03
  last_modified_date: 2015-08-03
  credit:
  - Dawid Golunski
  references:
  - https://framework.zend.com/security/advisory/ZF2015-06
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70357
- id: snykio:packagist:zendframework/zendframework1:CVE-2015-5723
  title: Arbitrary Code Execution
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to Arbitrary Code Execution.

    Doctrine Annotations before 1.2.7, Cache before 1.3.2 and 1.4.x before
    1.4.2, Common before 2.4.3 and 2.5.x before 2.5.1, ORM before 2.4.8 or
    2.5.x before 2.5.1, MongoDB ODM before 1.0.2, and MongoDB ODM Bundle
    before 3.0.1 use world-writable permissions for cache directories, which
    allows local users to execute arbitrary PHP code with additional
    privileges by leveraging an application with the umask set to 0 and that
    executes cache entries as code.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.16"
  severity: high
  package_manager: packagist
  cve:
  - CVE-2015-5723
  cwe:
  - CWE-94
  disclosed_date: 2015-09-15
  created_date: 2015-09-15
  last_modified_date: 2015-09-15
  credit:
  - Marco Pivetta
  references:
  - https://framework.zend.com/security/advisory/ZF2015-07
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70358
- id: snykio:packagist:zendframework/zendframework1:CVE-2016-6233
  title: SQL Injection
  description: |
    Affected versions of [`zendframework/zendframework1`][1] are vulnerable
    to SQL Injection.



    [1]: https://packagist.org/packages/zendframework/zendframework1
  affected_package: zendframework/zendframework1
  vulnerable_versions:
  - "<1.12.19"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2016-6233
  cwe:
  - CWE-89
  disclosed_date: 2016-07-06
  created_date: 2016-07-06
  last_modified_date: 2016-07-06
  credit:
  - Peter O'Callaghan
  references:
  - https://framework.zend.com/security/advisory/ZF2016-02
  source_url: https://snyk.io/vuln/SNYK-PHP-ZENDFRAMEWORKZENDFRAMEWORK1-70362
