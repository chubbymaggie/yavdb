---
- id: friendsofphp:packagist:silverstripe/framework:2014-08-12
  title: 'SS-2014-017: XML Quadratic Blowup Attack'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <=3.1.11"
  package_manager: packagist
  disclosed_date: 2014-08-12
  created_date: 2014-08-12
  last_modified_date: 2014-08-12
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2014-017-xml-quadratic-blowup-attack/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2014-017-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-02-12
  title: 'SS-2015-006: XSS In GridField print'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <3.1.10"
  package_manager: packagist
  disclosed_date: 2015-02-12
  created_date: 2015-02-12
  last_modified_date: 2015-02-12
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2015-006/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-006-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-03-20
  title: 'SS-2014-015: IE requests not properly behaving with rewritehashlinks'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <=3.0.12"
  - ">=3.1.0 <=3.1.11"
  package_manager: packagist
  disclosed_date: 2015-03-20
  created_date: 2015-03-20
  last_modified_date: 2015-03-20
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2014-015-ie-requests-not-properly-behaving-with-rewritehashlinks/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2014-015-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-05-25
  title: 'SS-2015-012: External redirection risk in Security?ReturnURL'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <=3.0.13"
  - ">=3.1.0 <=3.1.12"
  package_manager: packagist
  disclosed_date: 2015-05-25
  created_date: 2015-05-25
  last_modified_date: 2015-05-25
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2015-012/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-012-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-05-28
  title: 'SS-2015-014: Vulnerability on ''isDev'', ''isTest'' and ''flush'' $_GET
    validation'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <=3.0.13"
  - ">=3.1.0 <3.1.13"
  package_manager: packagist
  disclosed_date: 2015-05-28
  created_date: 2015-05-28
  last_modified_date: 2015-05-28
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2015-014/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-014-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-05-29
  title: 'SS-2015-013: X-Forwarded-Host request hostname injection'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <3.1.13"
  package_manager: packagist
  disclosed_date: 2015-05-29
  created_date: 2015-05-29
  last_modified_date: 2015-05-29
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2015-013/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-013-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-09-14
  title: 'SS-2015-015: XSS in dev/build returnURL Parameter'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <3.1.14"
  package_manager: packagist
  disclosed_date: 2015-09-14
  created_date: 2015-09-14
  last_modified_date: 2015-09-14
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/software/download/security-releases/ss-2015-015/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-015-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-11-11
  title: 'SS-2015-026: Form field validation message XSS vulnerability'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.1.16"
  - ">=3.2.0 <3.2.1"
  package_manager: packagist
  disclosed_date: 2015-11-11
  created_date: 2015-11-11
  last_modified_date: 2015-11-11
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/download/security-releases/ss-2015-026/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-026-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2015-11-13
  title: 'SS-2015-027: HtmlEditor embed url sanitisation'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <3.1.0"
  - ">=3.1.0 <3.2.0"
  - ">=3.2.0 <3.2.1"
  package_manager: packagist
  disclosed_date: 2015-11-13
  created_date: 2015-11-13
  last_modified_date: 2015-11-13
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/download/security-releases/ss-2015-027/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2015-027-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2016-02-17
  title: 'SS-2016-002: CSRF vulnerability in GridFieldAddExistingAutocompleter'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <=3.1.16"
  - ">=3.2.0 <=3.2.1"
  - ">3.2 <3.3.0"
  package_manager: packagist
  disclosed_date: 2016-02-17
  created_date: 2016-02-17
  last_modified_date: 2016-02-17
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/download/security-releases/ss-2016-002/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-002-1.yaml
- id: friendsofphp:packagist:silverstripe/framework:2016-02-18
  title: 'SS-2016-003: Hostname, IP and Protocol Spoofing through HTTP Headers'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0 <=3.1.16"
  - ">=3.2.0 <=3.2.1"
  - ">3.2 <3.3.0"
  package_manager: packagist
  disclosed_date: 2016-02-18
  created_date: 2016-02-18
  last_modified_date: 2016-02-18
  credit:
  - FriendsOfPHP
  references:
  - https://www.silverstripe.org/download/security-releases/ss-2016-003/
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml
- id: ossindex:packagist:silverstripe/framework:2016-06-05
  title: '"SS-2014-015: IE requests not properly behaving with rewritehashlinks"'
  description: '"SS-2014-015: IE requests not properly behaving with rewritehashlinks"'
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.0.0 <=3.0.12"
  - ">=3.1.0 <=3.1.11"
  package_manager: packagist
  disclosed_date: 2016-06-05
  created_date: 2016-06-05
  last_modified_date: 2016-06-05
  credit:
  - OSSIndex
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2014-015-ie-requests-not-properly-behaving-with-rewritehashlinks/
  - https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2014-015-1.yaml
  source_url: https://ossindex.net/resource/package/8397594290/vulnerabilities
- id: snykio:packagist:silverstripe/framework:70140
  title: Arbitrary Code Injection
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Arbitrary Code Injection.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0  <3.1.12"
  - "<3.0.13"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-94
  disclosed_date: 2015-03-20
  created_date: 2015-03-20
  last_modified_date: 2015-03-20
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2014-015-ie-requests-not-properly-behaving-with-rewritehashlinks/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70140
- id: snykio:packagist:silverstripe/framework:70141
  title: Quadratic Blowup Attack
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Quadratic Blowup Attack.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.12"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-400
  disclosed_date: 2014-08-12
  created_date: 2014-08-12
  last_modified_date: 2014-08-12
  credit:
  - Jamie Totten
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2014-017-xml-quadratic-blowup-attack/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70141
- id: snykio:packagist:silverstripe/framework:70142
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.10"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-02-12
  created_date: 2015-02-12
  last_modified_date: 2015-02-12
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-004/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70142
- id: snykio:packagist:silverstripe/framework:70143
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.10"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-02-12
  created_date: 2015-02-12
  last_modified_date: 2015-02-12
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-006/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70143
- id: snykio:packagist:silverstripe/framework:70144
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.10"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-02-12
  created_date: 2015-02-12
  last_modified_date: 2015-02-12
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-007/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70144
- id: snykio:packagist:silverstripe/framework:70145
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0  <3.1.12"
  - "<3.0.13"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-03-20
  created_date: 2015-03-20
  last_modified_date: 2015-03-20
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-009-xss-in-rewritten-hash-links/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70145
- id: snykio:packagist:silverstripe/framework:70146
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.12"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-03-20
  created_date: 2015-03-20
  last_modified_date: 2015-03-20
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-010-xss-in-directorforce-redirect/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70146
- id: snykio:packagist:silverstripe/framework:70147
  title: SQL Injection
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to SQL
    Injection.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0  <3.1.13"
  - "<3.0.14"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-89
  disclosed_date: 2015-05-25
  created_date: 2015-05-25
  last_modified_date: 2015-05-25
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-011/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70147
- id: snykio:packagist:silverstripe/framework:70148
  title: Open Redirect
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Open Redirect.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0  <3.1.13"
  - "<3.0.14"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-601
  disclosed_date: 2015-05-25
  created_date: 2015-05-25
  last_modified_date: 2015-05-25
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-012/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70148
- id: snykio:packagist:silverstripe/framework:70149
  title: HTTP Hostname Injection
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    HTTP Hostname Injection.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.13"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-74
  disclosed_date: 2015-05-29
  created_date: 2015-05-29
  last_modified_date: 2015-05-29
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-013/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70149
- id: snykio:packagist:silverstripe/framework:70150
  title: Access Restriction Bypass
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Access Restriction Bypass.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - ">=3.1.0  <3.1.13"
  - "<3.0.14"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-284
  disclosed_date: 2015-05-28
  created_date: 2015-05-28
  last_modified_date: 2015-05-28
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-014/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70150
- id: snykio:packagist:silverstripe/framework:70151
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.14"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-09-14
  created_date: 2015-09-14
  last_modified_date: 2015-09-14
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-015/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70151
- id: snykio:packagist:silverstripe/framework:70152
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.14"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-09-14
  created_date: 2015-09-14
  last_modified_date: 2015-09-14
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/software/download/security-releases/ss-2015-016/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70152
- id: snykio:packagist:silverstripe/framework:70153
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.16"
  - ">=3.2.0  <3.2.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-11-11
  created_date: 2015-11-11
  last_modified_date: 2015-11-11
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/download/security-releases/ss-2015-026/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70153
- id: snykio:packagist:silverstripe/framework:70154
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Scripting (XSS).



    [1]: https://packagist.org/packages/silverstripe/framework
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.2.1"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-79
  disclosed_date: 2015-11-13
  created_date: 2015-11-13
  last_modified_date: 2015-11-13
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/download/security-releases/ss-2015-027/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70154
- id: snykio:packagist:silverstripe/framework:70155
  title: Access Restriction Bypass
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Access Restriction Bypass.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.17"
  - ">=3.2.0  <3.2.2"
  - ">=3.3-alpha  <3.3.0"
  severity: low
  package_manager: packagist
  cwe:
  - CWE-284
  disclosed_date: 2016-02-17
  created_date: 2016-02-17
  last_modified_date: 2016-02-17
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/download/security-releases/ss-2015-028/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70155
- id: snykio:packagist:silverstripe/framework:70156
  title: Cross-site Request Forgery (CSRF)
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    Cross-site Request Forgery (CSRF).



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.17"
  - ">=3.2.0  <3.2.2"
  - ">=3.3-alpha  <3.3.0"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-352
  disclosed_date: 2016-02-17
  created_date: 2016-02-17
  last_modified_date: 2016-02-17
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/download/security-releases/ss-2016-002/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70156
- id: snykio:packagist:silverstripe/framework:70157
  title: IP and Protocol Spoofing
  description: |
    Affected versions of [`silverstripe/framework`][1] are vulnerable to
    SS-2016-003: Hostname, IP and Protocol Spoofing through HTTP Headers.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<3.1.17"
  - ">=3.2.0  <3.2.2"
  - ">=3.3-alpha  <3.3.0"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-290
  disclosed_date: 2016-02-18
  created_date: 2016-02-18
  last_modified_date: 2016-02-18
  credit:
  - Unknown
  references:
  - http://www.silverstripe.org/download/security-releases/ss-2016-003/
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-70157
- id: snykio:packagist:silverstripe/framework:CVE-2010-5079
  title: Access Restriction Bypass
  description: |
    [silverstripe/framework][1] is The SilverStripe framework.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. It uses weak entropy when generating tokens for the CSRF
    protection mechanism.



    [1]: https://packagist.org/packages/silverstripe/framework
  affected_package: silverstripe/framework
  vulnerable_versions:
  - "<2.3.10"
  - ">=2.4.0  <2.4.4"
  severity: medium
  package_manager: packagist
  cve:
  - CVE-2010-5079
  cwe:
  - CWE-310
  disclosed_date: 2010-09-17
  created_date: 2018-06-17
  last_modified_date: 2018-06-17
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2010-5079
  source_url: https://snyk.io/vuln/SNYK-PHP-SILVERSTRIPEFRAMEWORK-72209
