---
- id: friendsofphp:packagist:simplesamlphp/simplesamlphp-module-infocard:2016-12-03
  title: Incorrect signature verification
  affected_package: simplesamlphp/simplesamlphp-module-infocard
  vulnerable_versions:
  - "<1.0.1"
  package_manager: packagist
  cve:
  - CVE-2017-12874
  credit:
  - FriendsOfPHP
  references:
  - https://simplesamlphp.org/security/201612-03
  source_url: https://github.com/FriendsOfPHP/security-advisories/blob/master/swiftmailer/swiftmailer/CVE-2016-10074.yaml/blob/master/swiftmailer/swiftmailer/2014-06-13.yaml/blob/master/ezsystems/ezpublish-legacy/2018-02-26-1.yaml/blob/master/ezsystems/ezpublish-legacy/2017-08-22-1.yaml/blob/master/ezsystems/ezpublish-legacy/2017-09-11-1.yaml/blob/master/monolog/monolog/2014-12-29-1.yaml/blob/master/illuminate/auth/CVE-2017-9303.yaml/blob/master/illuminate/auth/2014-04-15.yaml/blob/master/illuminate/auth/CVE-2017-14775.yaml/blob/master/illuminate/encryption/2018-03-30-1.yaml/blob/master/illuminate/database/2014-05-20.yaml/blob/master/illuminate/cookie/2018-08-08-1.yaml/blob/master/propel/propel/2018-02-14.yaml/blob/master/propel/propel1/2018-02-14.yaml/blob/master/alterphp/easyadmin-extension-bundle/2018-10-02.yaml/blob/master/yiisoft/yii2-jui/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-elasticsearch/CVE-2018-8074.yaml/blob/master/yiisoft/yii2-gii/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2015-5467.yaml/blob/master/yiisoft/yii2/CVE-2015-3397.yaml/blob/master/yiisoft/yii2/CVE-2018-6009.yaml/blob/master/yiisoft/yii2/CVE-2018-7269.yaml/blob/master/yiisoft/yii2/CVE-2018-6010.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-5467.yaml/blob/master/yiisoft/yii2-dev/CVE-2015-3397.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6009.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-7269.yaml/blob/master/yiisoft/yii2-dev/CVE-2018-6010.yaml/blob/master/yiisoft/yii2-redis/CVE-2018-8073.yaml/blob/master/yiisoft/yii2-bootstrap/CVE-2015-3397.yaml/blob/master/yiisoft/yii/CVE-2014-4672.yaml/blob/master/james-heinrich/getid3/CVE-2014-2053.yaml/blob/master/erusev/parsedown/2017-05-01.yaml/blob/master/squizlabs/php_codesniffer/2017-03-01.yaml/blob/master/squizlabs/php_codesniffer/2017-05-18.yaml/blob/master/pagarme/pagarme-php/2017-11-20.yaml/blob/master/gree/jose/2016-08-30.yaml/blob/master/typo3/cms-core/2018-07-12-3.yaml/blob/master/typo3/cms-core/2018-07-12-1.yaml/blob/master/typo3/cms-core/2018-07-12-4.yaml/blob/master/typo3/cms-core/2018-07-12-2.yaml/blob/master/typo3/cms/2017-09-05-3.yaml/blob/master/typo3/cms/2017-09-05-4.yaml/blob/master/typo3/cms/2017-09-05-2.yaml/blob/master/typo3/cms/2016-07-19-5.yaml/blob/master/typo3/cms/2016-07-19-3.yaml/blob/master/typo3/cms/2016-09-14-1.yaml/blob/master/typo3/cms/CVE-2015-5956.yaml/blob/master/typo3/cms/2016-05-24-1.yaml/blob/master/typo3/cms/2015-09-08-1.yaml/blob/master/typo3/cms/CVE-2014-3946.yaml/blob/master/typo3/cms/2015-07-01-2.yaml/blob/master/typo3/cms/2016-02-23-1.yaml/blob/master/typo3/cms/2016-04-12-2.yaml/blob/master/typo3/cms/2017-02-28-2.yaml/blob/master/typo3/cms/2015-07-01-3.yaml/blob/master/typo3/cms/CVE-2014-3943.yaml/blob/master/typo3/cms/2014-10-22-2.yaml/blob/master/typo3/cms/CVE-2014-3944.yaml/blob/master/typo3/cms/2018-07-12-3.yaml/blob/master/typo3/cms/2016-02-16-3.yaml/blob/master/typo3/cms/2016-11-22-1.yaml/blob/master/typo3/cms/2014-05-22-1.yaml/blob/master/typo3/cms/2017-02-28-1.yaml/blob/master/typo3/cms/2015-12-15-3.yaml/blob/master/typo3/cms/2015-12-15-4.yaml/blob/master/typo3/cms/2016-04-12-3.yaml/blob/master/typo3/cms/2016-02-16-4.yaml/blob/master/typo3/cms/2016-11-22-2.yaml/blob/master/typo3/cms/CVE-2014-3941.yaml/blob/master/typo3/cms/2015-07-01-6.yaml/blob/master/typo3/cms/2014-12-09-1.yaml/blob/master/typo3/cms/2016-02-23-2.yaml/blob/master/typo3/cms/2016-02-23-4.yaml/blob/master/typo3/cms/2017-01-03-1.yaml/blob/master/typo3/cms/2015-12-15-5.yaml/blob/master/typo3/cms/2016-02-16-2.yaml/blob/master/typo3/cms/2016-02-16-1.yaml/blob/master/typo3/cms/2015-07-01-4.yaml/blob/master/typo3/cms/2018-07-12-1.yaml/blob/master/typo3/cms/2016-07-19-1.yaml/blob/master/typo3/cms/2015-12-15-2.yaml/blob/master/typo3/cms/2018-07-12-4.yaml/blob/master/typo3/cms/2016-02-23-3.yaml/blob/master/typo3/cms/2016-07-19-6.yaml/blob/master/typo3/cms/2014-10-22-1.yaml/blob/master/typo3/cms/2015-07-01-1.yaml/blob/master/typo3/cms/2017-09-05-1.yaml/blob/master/typo3/cms/2016-07-19-7.yaml/blob/master/typo3/cms/2016-07-19-2.yaml/blob/master/typo3/cms/2016-04-12-4.yaml/blob/master/typo3/cms/2018-07-12-2.yaml/blob/master/typo3/cms/2015-07-01-5.yaml/blob/master/typo3/cms/2015-12-15-1.yaml/blob/master/typo3/cms/2014-12-09-2.yaml/blob/master/typo3/cms/2016-07-19-4.yaml/blob/master/typo3/cms/2016-09-14-2.yaml/blob/master/typo3/cms/2016-04-12-1.yaml/blob/master/typo3/neos/2015-03-28.yaml/blob/master/typo3/neos/2015-11-23.yaml/blob/master/typo3/flow/2015-11-23.yaml/blob/master/typo3/flow/CVE-2013-7082.yaml/blob/master/typo3/flow/2012-03-28.yaml/blob/master/typo3/flow/2016-11-01.yaml/blob/master/socalnick/scn-social-auth/2015-01-15.yaml/blob/master/aws/aws-sdk-php/2015-08-31.yaml/blob/master/oro/platform/2015-07-08.yaml/blob/master/oro/crm/2015-07-08.yaml/blob/master/robrichards/xmlseclibs/2018-09-27.yaml/blob/master/bugsnag/bugsnag-laravel/CVE-2016-5385.yaml/blob/master/fuel/core/2016-06-29-1.yaml/blob/master/fuel/core/2018-04-14-1.yaml/blob/master/twig/twig/2013-04-08.yaml/blob/master/twig/twig/2015-08-12.yaml/blob/master/sensiolabs/connect/2018-06-08-1.yaml/blob/master/smarty/smarty/CVE-2018-13982.yaml/blob/master/3f/pygmentize/2017-05-15.yaml/blob/master/kazist/phpwhois/CVE-2015-5243.yaml/blob/master/stormpath/sdk/2017-11-20.yaml/blob/master/gregwar/rst/2016-10-31.yaml/blob/master/zf-commons/zfc-user/2015-01-08.yaml/blob/master/adodb/adodb-php/2018-03-06.yaml/blob/master/adodb/adodb-php/CVE-2016-4855.yaml/blob/master/symfony/validator/CVE-2013-4751.yaml/blob/master/symfony/validator/2012-08-28.yaml/blob/master/symfony/security-csrf/CVE-2018-11406.yaml/blob/master/symfony/security-csrf/CVE-2017-16653.yaml/blob/master/symfony/yaml/CVE-2013-1348.yaml/blob/master/symfony/yaml/CVE-2013-1397.yaml/blob/master/symfony/http-foundation/2012-11-29.yaml/blob/master/symfony/http-foundation/CVE-2013-4752.yaml/blob/master/symfony/http-foundation/CVE-2018-14773.yaml/blob/master/symfony/http-foundation/CVE-2015-2309.yaml/blob/master/symfony/http-foundation/CVE-2014-5244.yaml/blob/master/symfony/http-foundation/CVE-2018-11386.yaml/blob/master/symfony/http-foundation/CVE-2014-6061.yaml/blob/master/symfony/http-foundation/CVE-2012-6431.yaml/blob/master/symfony/symfony/2012-11-29.yaml/blob/master/symfony/symfony/CVE-2014-6072.yaml/blob/master/symfony/symfony/2012-02-24.yaml/blob/master/symfony/symfony/2011-11-16.yaml/blob/master/symfony/symfony/CVE-2013-1348.yaml/blob/master/symfony/symfony/CVE-2018-11385.yaml/blob/master/symfony/symfony/CVE-2018-11406.yaml/blob/master/symfony/symfony/CVE-2014-5245.yaml/blob/master/symfony/symfony/CVE-2015-8125.yaml/blob/master/symfony/symfony/CVE-2013-4752.yaml/blob/master/symfony/symfony/CVE-2015-2308.yaml/blob/master/symfony/symfony/CVE-2018-14773.yaml/blob/master/symfony/symfony/CVE-2017-16790.yaml/blob/master/symfony/symfony/CVE-2015-8124.yaml/blob/master/symfony/symfony/CVE-2013-1397.yaml/blob/master/symfony/symfony/CVE-2017-16654.yaml/blob/master/symfony/symfony/CVE-2013-4751.yaml/blob/master/symfony/symfony/CVE-2015-2309.yaml/blob/master/symfony/symfony/CVE-2014-5244.yaml/blob/master/symfony/symfony/CVE-2017-16653.yaml/blob/master/symfony/symfony/CVE-2016-1902.yaml/blob/master/symfony/symfony/CVE-2018-11386.yaml/blob/master/symfony/symfony/CVE-2016-4423.yaml/blob/master/symfony/symfony/2012-08-28.yaml/blob/master/symfony/symfony/CVE-2014-4931.yaml/blob/master/symfony/symfony/CVE-2016-2403.yaml/blob/master/symfony/symfony/CVE-2014-6061.yaml/blob/master/symfony/symfony/CVE-2018-11408.yaml/blob/master/symfony/symfony/CVE-2017-16652.yaml/blob/master/symfony/symfony/CVE-2013-5958.yaml/blob/master/symfony/symfony/CVE-2012-6432.yaml/blob/master/symfony/symfony/CVE-2012-6431.yaml/blob/master/symfony/symfony/CVE-2017-11365.yaml/blob/master/symfony/symfony/CVE-2015-4050.yaml/blob/master/symfony/symfony/CVE-2018-11407.yaml/blob/master/symfony/security-bundle/CVE-2018-11406.yaml/blob/master/symfony/security-bundle/CVE-2018-11408.yaml/blob/master/symfony/security-guard/CVE-2018-11385.yaml/blob/master/symfony/serializer/2012-02-24.yaml/blob/master/symfony/security-core/CVE-2016-1902.yaml/blob/master/symfony/security-core/CVE-2016-2403.yaml/blob/master/symfony/security-core/CVE-2017-11365.yaml/blob/master/symfony/security-core/CVE-2018-11407.yaml/blob/master/symfony/translation/2012-08-28.yaml/blob/master/symfony/http-kernel/CVE-2014-5245.yaml/blob/master/symfony/http-kernel/CVE-2015-2308.yaml/blob/master/symfony/http-kernel/CVE-2015-4050.yaml/blob/master/symfony/security-http/CVE-2018-11385.yaml/blob/master/symfony/security-http/CVE-2018-11406.yaml/blob/master/symfony/security-http/CVE-2015-8125.yaml/blob/master/symfony/security-http/CVE-2015-8124.yaml/blob/master/symfony/security-http/CVE-2016-4423.yaml/blob/master/symfony/security-http/CVE-2017-16652.yaml/blob/master/symfony/web-profiler-bundle/CVE-2014-6072.yaml/blob/master/symfony/dependency-injection/2012-08-28.yaml/blob/master/symfony/form/CVE-2015-8125.yaml/blob/master/symfony/form/CVE-2017-16790.yaml/blob/master/symfony/intl/CVE-2017-16654.yaml/blob/master/symfony/security/CVE-2018-11385.yaml/blob/master/symfony/security/CVE-2018-11406.yaml/blob/master/symfony/security/CVE-2015-8125.yaml/blob/master/symfony/security/CVE-2015-8124.yaml/blob/master/symfony/security/CVE-2016-1902.yaml/blob/master/symfony/security/CVE-2013-5958.yaml/blob/master/symfony/security/CVE-2012-6431.yaml/blob/master/symfony/security/CVE-2017-11365.yaml/blob/master/symfony/security/CVE-2018-11407.yaml/blob/master/symfony/framework-bundle/CVE-2014-4931.yaml/blob/master/symfony/routing/2012-08-28.yaml/blob/master/symfony/routing/CVE-2012-6431.yaml/blob/master/padraic/humbug_get_contents/CVE-2016-5385.yaml/blob/master/pusher/pusher-php-server/2015-05-13.yaml/blob/master/theonedemon/phpwhois/CVE-2015-5243.yaml/blob/master/cartalyst/sentry/2016-09-05.yaml/blob/master/onelogin/php-saml/2017-02-28.yaml/blob/master/onelogin/php-saml/2016-10-04.yaml/blob/master/guzzlehttp/guzzle/CVE-2016-5385.yaml/blob/master/titon/framework/2017-11-20.yaml/blob/master/namshi/jose/2015-02-19.yaml/blob/master/namshi/jose/2015-03-10.yaml/blob/master/phpxmlrpc/extras/2017-10-29.yaml/blob/master/composer/composer/CVE-2015-8371.yaml/blob/master/ezyang/htmlpurifier/CVE-2010-2479.yaml/blob/master/ezyang/htmlpurifier/CVE-2010-4183.yaml/blob/master/zetacomponents/mail/2017-11-15-1.yaml/blob/master/paragonie/random_compat/2016-03-16.yaml/blob/master/simplesamlphp/simplesamlphp-module-infocard/CVE-2017-12874.yaml
- id: snykio:packagist:simplesamlphp/simplesamlphp-module-infocard:2016-12-03
  title: Incorrect Signature Verification
  description: "Affected versions of [`simplesamlphp/simplesamlphp-module-infocard`][1]\nare
    vulnerable to Incorrect signature verification.\n\n> The InfoCard SimpleSAMLphp
    module allows incorporates a series of\n> libraries provided by the Zend Framework.
    As part of this third-party\n> library, the class Zend\\_InfoCard\\_Xml\\_Security
    allows the\n> verification of the XML digital signature of XML chunks with a given\n>
    key. In particular, the validateXMLSignature() method receives an\n> string containing
    an XML document and a key to verify it, and throws\n> an exception in case there
    is any error, either caused by incorrect\n> input or an invalid signature. This
    method uses the openssl\\_verify()\n> function provided by the openssl PHP extension.\n\n>
    The openssl\\_verify() function returns 1 when the signature was\n> successfully
    verified, 0 if it failed to verify with the given key,\n> and -1 in case an error
    occurs. PHP allows translating numerical\n> values to boolean implicitly, with
    the following correspondences:\n> \n> * 0 equals false.\n> * Non-zero equals true.
    This means that an implicit conversion to\n>   boolean of the values returned
    by openssl\\_verify() will convert an\n>   error state, signaled by the value
    -1, to a successful verification\n>   of the signature (represented by the boolean
    true).\n\n> The aforementioned method was performing an implicit conversion to\n>
    boolean of the values returned by the openssl\\_verify() function. This\n> means
    an error during signature verification is treated as a\n> successful verification
    by the method.\n\n\n\n[1]: https://packagist.org/packages/simplesamlphp/simplesamlphp-module-infocard\n\\nAffected
    versions of [`simplesamlphp/simplesamlphp-module-infocard`][1]\nare vulnerable
    to Incorrect signature verification.\n\n> The InfoCard SimpleSAMLphp module allows
    incorporates a series of\n> libraries provided by the Zend Framework. As part
    of this third-party\n> library, the class Zend\\_InfoCard\\_Xml\\_Security allows
    the\n> verification of the XML digital signature of XML chunks with a given\n>
    key. In particular, the validateXMLSignature() method receives an\n> string containing
    an XML document and a key to verify it, and throws\n> an exception in case there
    is any error, either caused by incorrect\n> input or an invalid signature. This
    method uses the openssl\\_verify()\n> function provided by the openssl PHP extension.\n\n>
    The openssl\\_verify() function returns 1 when the signature was\n> successfully
    verified, 0 if it failed to verify with the given key,\n> and -1 in case an error
    occurs. PHP allows translating numerical\n> values to boolean implicitly, with
    the following correspondences:\n> \n> * 0 equals false.\n> * Non-zero equals true.
    This means that an implicit conversion to\n>   boolean of the values returned
    by openssl\\_verify() will convert an\n>   error state, signaled by the value
    -1, to a successful verification\n>   of the signature (represented by the boolean
    true).\n\n> The aforementioned method was performing an implicit conversion to\n>
    boolean of the values returned by the openssl\\_verify() function. This\n> means
    an error during signature verification is treated as a\n> successful verification
    by the method.\n\n\n\n[1]: https://packagist.org/packages/simplesamlphp/simplesamlphp-module-infocard\n\\nAffected
    versions of [`simplesamlphp/simplesamlphp-module-infocard`][1]\nare vulnerable
    to Incorrect signature verification.\n\n> The InfoCard SimpleSAMLphp module allows
    incorporates a series of\n> libraries provided by the Zend Framework. As part
    of this third-party\n> library, the class Zend\\_InfoCard\\_Xml\\_Security allows
    the\n> verification of the XML digital signature of XML chunks with a given\n>
    key. In particular, the validateXMLSignature() method receives an\n> string containing
    an XML document and a key to verify it, and throws\n> an exception in case there
    is any error, either caused by incorrect\n> input or an invalid signature. This
    method uses the openssl\\_verify()\n> function provided by the openssl PHP extension.\n\n>
    The openssl\\_verify() function returns 1 when the signature was\n> successfully
    verified, 0 if it failed to verify with the given key,\n> and -1 in case an error
    occurs. PHP allows translating numerical\n> values to boolean implicitly, with
    the following correspondences:\n> \n> * 0 equals false.\n> * Non-zero equals true.
    This means that an implicit conversion to\n>   boolean of the values returned
    by openssl\\_verify() will convert an\n>   error state, signaled by the value
    -1, to a successful verification\n>   of the signature (represented by the boolean
    true).\n\n> The aforementioned method was performing an implicit conversion to\n>
    boolean of the values returned by the openssl\\_verify() function. This\n> means
    an error during signature verification is treated as a\n> successful verification
    by the method.\n\n\n\n[1]: https://packagist.org/packages/simplesamlphp/simplesamlphp-module-infocard\n\\nAffected
    versions of [`simplesamlphp/simplesamlphp-module-infocard`][1]\nare vulnerable
    to Incorrect signature verification.\n\n> The InfoCard SimpleSAMLphp module allows
    incorporates a series of\n> libraries provided by the Zend Framework. As part
    of this third-party\n> library, the class Zend\\_InfoCard\\_Xml\\_Security allows
    the\n> verification of the XML digital signature of XML chunks with a given\n>
    key. In particular, the validateXMLSignature() method receives an\n> string containing
    an XML document and a key to verify it, and throws\n> an exception in case there
    is any error, either caused by incorrect\n> input or an invalid signature. This
    method uses the openssl\\_verify()\n> function provided by the openssl PHP extension.\n\n>
    The openssl\\_verify() function returns 1 when the signature was\n> successfully
    verified, 0 if it failed to verify with the given key,\n> and -1 in case an error
    occurs. PHP allows translating numerical\n> values to boolean implicitly, with
    the following correspondences:\n> \n> * 0 equals false.\n> * Non-zero equals true.
    This means that an implicit conversion to\n>   boolean of the values returned
    by openssl\\_verify() will convert an\n>   error state, signaled by the value
    -1, to a successful verification\n>   of the signature (represented by the boolean
    true).\n\n> The aforementioned method was performing an implicit conversion to\n>
    boolean of the values returned by the openssl\\_verify() function. This\n> means
    an error during signature verification is treated as a\n> successful verification
    by the method.\n\n\n\n[1]: https://packagist.org/packages/simplesamlphp/simplesamlphp-module-infocard\n\\nAffected
    versions of [`simplesamlphp/simplesamlphp-module-infocard`][1]\nare vulnerable
    to Incorrect signature verification.\n\n> The InfoCard SimpleSAMLphp module allows
    incorporates a series of\n> libraries provided by the Zend Framework. As part
    of this third-party\n> library, the class Zend\\_InfoCard\\_Xml\\_Security allows
    the\n> verification of the XML digital signature of XML chunks with a given\n>
    key. In particular, the validateXMLSignature() method receives an\n> string containing
    an XML document and a key to verify it, and throws\n> an exception in case there
    is any error, either caused by incorrect\n> input or an invalid signature. This
    method uses the openssl\\_verify()\n> function provided by the openssl PHP extension.\n\n>
    The openssl\\_verify() function returns 1 when the signature was\n> successfully
    verified, 0 if it failed to verify with the given key,\n> and -1 in case an error
    occurs. PHP allows translating numerical\n> values to boolean implicitly, with
    the following correspondences:\n> \n> * 0 equals false.\n> * Non-zero equals true.
    This means that an implicit conversion to\n>   boolean of the values returned
    by openssl\\_verify() will convert an\n>   error state, signaled by the value
    -1, to a successful verification\n>   of the signature (represented by the boolean
    true).\n\n> The aforementioned method was performing an implicit conversion to\n>
    boolean of the values returned by the openssl\\_verify() function. This\n> means
    an error during signature verification is treated as a\n> successful verification
    by the method.\n\n\n\n[1]: https://packagist.org/packages/simplesamlphp/simplesamlphp-module-infocard\n"
  affected_package: simplesamlphp/simplesamlphp-module-infocard
  vulnerable_versions:
  - "<1.0.1"
  severity: medium
  package_manager: packagist
  cwe:
  - CWE-345
  credit:
  - Unknown
  references:
  - https://simplesamlphp.org/security/201612-03
  source_url: https://snyk.io/vuln/SNYK-PHP-SIMPLESAMLPHPSIMPLESAMLPHPMODULEINFOCARD-70167
