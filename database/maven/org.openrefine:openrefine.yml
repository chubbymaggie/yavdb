---
- id: snykio:maven:org.openrefine:openrefine:72693
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[org.openrefine:openrefine][1] is a Java-based power tool that allows\nyou
    to load data, understand it, clean it up, reconcile it, and augment\nit with data
    coming from the web.\n\nAffected versions of this package are vulnerable to Arbitrary
    File Write\nvia Archive Extraction (Zip Slip).\n\nIt is exploited using a specially
    crafted zip archive, that holds path\ntraversal filenames. When exploited, a filename
    in a malicious archive\nis concatenated to the target extraction directory, which
    results in the\nfinal path ending up outside of the target folder. For instance,
    a zip\nmay hold a file with a \\\"../../file.exe\\\" location and thus break out
    of\nthe target folder. If an executable or a configuration file is\noverwritten
    with a file containing malicious code, the problem can turn\ninto an arbitrary
    code execution issue quite easily.\n\nThe following is an example of a zip archive
    with one benign file and\none malicious file. Extracting the malicous file will
    result in\ntraversing out of the target folder, ending up in `/root/.ssh/`\noverwriting
    the `authorized_keys` file:\n\n    \n    +2018-04-15 22:04:29 ..... 19 19 good.txt\n
    \   \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n\n\n[1]:
    https://github.com/OpenRefine/OpenRefine\n"
  affected_package: org.openrefine:openrefine
  vulnerable_versions:
  - "< 1.12.0"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-19859
  - CVE-2019-3580
  cwe:
  - CWE-29
  disclosed_date: 2018-12-05
  created_date: 2018-12-13
  last_modified_date: 2018-12-13
  credit:
  - itsacoderepo
  references:
  - https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656
  - https://github.com/OpenRefine/OpenRefine/issues/1840
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGOPENREFINE-72693
- id: snykio:maven:org.openrefine:openrefine:72721
  title: XML External Entity (XXE) Injection
  description: |
    [org.openrefine:openrefine][1] is a Java-based power tool that allows
    you to load data, understand it, clean it up, reconcile it, and augment
    it with data coming from the web.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection. The data import functionality in OpenRefine allows an
    XXE attack through a crafted (zip) file, allowing attackers to read
    arbitrary files.

    \##Details XXE Injection is a type of attack against an application that
    parses XML input. XML is a markup language that defines a set of rules
    for encoding documents in a format that is both human-readable and
    machine-readable. By default, many XML processors allow specification of
    an external entity, a URI that is dereferenced and evaluated during XML
    processing. When an XML document is being parsed, the parser can make a
    request and include the content at the specified URI inside of the XML
    document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.



    [1]: https://github.com/OpenRefine/OpenRefine
  affected_package: org.openrefine:openrefine
  vulnerable_versions:
  - ">= 0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-20157
  cwe:
  - CWE-611
  disclosed_date: 2018-12-14
  created_date: 2018-12-24
  last_modified_date: 2018-12-24
  credit:
  - Niko Schmidt
  references:
  - https://github.com/OpenRefine/OpenRefine/commit/6a0d7d56e4ffb420316ce7849fde881344fbf881
  - https://github.com/OpenRefine/OpenRefine/issues/1907
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGOPENREFINE-72721
