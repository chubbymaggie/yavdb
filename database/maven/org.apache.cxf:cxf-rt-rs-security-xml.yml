---
- id: snykio:maven:org.apache.cxf:cxf-rt-rs-security-xml:2014-10-25
  title: Denial of Service (DoS)
  description: |+
    [`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    The SamlHeaderInHandler in Apache CXF before 2.6.11, 2.7.x before 2.7.8,
    and 3.0.x before 3.0.1 allows remote attackers to cause a denial of
    service (infinite loop) via a crafted SAML token in the authorization
    header of a request to a JAX-RS service.



    [1]: https://http://cxf.apache.org/
    \n[`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    The SamlHeaderInHandler in Apache CXF before 2.6.11, 2.7.x before 2.7.8,
    and 3.0.x before 3.0.1 allows remote attackers to cause a denial of
    service (infinite loop) via a crafted SAML token in the authorization
    header of a request to a JAX-RS service.



    [1]: https://http://cxf.apache.org/
    \n[`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    The SamlHeaderInHandler in Apache CXF before 2.6.11, 2.7.x before 2.7.8,
    and 3.0.x before 3.0.1 allows remote attackers to cause a denial of
    service (infinite loop) via a crafted SAML token in the authorization
    header of a request to a JAX-RS service.



    [1]: https://http://cxf.apache.org/
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.cxf:cxf-rt-rs-security-xml
  vulnerable_versions:
  - ">= 2.6 <= 2.6.10"
  - ">= 2.7 <= 2.7.7"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3584
  cwe:
  - CWE-399
  credit:
  - Dario Amiri
  references:
  - http://cxf.apache.org/security-advisories.data/CVE-2014-3584.txt.asc
  - https://bugzilla.redhat.com/CVE-2014-3584
  - https://issues.apache.org/jira/browse/CXF-5390
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHECXF-30014
- id: snykio:maven:org.apache.cxf:cxf-rt-rs-security-xml:2017-04-19
  title: Access Restriction Bypass
  description: |
    [`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    JAX-RS XML Security streaming clients in Apache CXF before 3.1.11 and
    3.0.13 do not validate that the service response was signed or
    encrypted, which allows remote attackers to spoof servers.



    [1]: https://http://cxf.apache.org/
    \n[`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    JAX-RS XML Security streaming clients in Apache CXF before 3.1.11 and
    3.0.13 do not validate that the service response was signed or
    encrypted, which allows remote attackers to spoof servers.



    [1]: https://http://cxf.apache.org/
    \n[`org.apache.cxf:cxf-rt-rs-security-xml`][1] is an open source services
    framework.

    JAX-RS XML Security streaming clients in Apache CXF before 3.1.11 and
    3.0.13 do not validate that the service response was signed or
    encrypted, which allows remote attackers to spoof servers.



    [1]: https://http://cxf.apache.org/
  affected_package: org.apache.cxf:cxf-rt-rs-security-xml
  vulnerable_versions:
  - "<= 3.0.13"
  - ">= 3.1 <= 3.1.10"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2017-5653
  cwe:
  - CWE-20
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5653
  - http://cxf.apache.org/security-advisories.data/CVE-2017-5653.txt.asc?version=1&modificationDate=1492515074710&api=v2
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHECXF-31430
- id: victims:maven:org.apache.cxf:cxf-rt-rs-security-xml:date
  title: Denial of Service (DoS) via invalid JAX-RS SAML tokens
  affected_package: org.apache.cxf:cxf-rt-rs-security-xml
  vulnerable_versions:
  - "<=2.6.10"
  - '2.6'
  - "<=2.7.7"
  - '2.7'
  patched_versions:
  - ">=2.6.11"
  - '2.6'
  - ">=2.7.8"
  - '2.7'
  - ">=3.0.0-milestone1"
  - '3'
  severity: high
  package_manager: maven
  cve:
  - 2014-3584
  credit:
  - Victims CVE Database
  references:
  - http://cxf.apache.org/security-advisories.data/CVE-2014-3584.txt.asc
  - https://bugzilla.redhat.com/CVE-2014-3584
  - https://issues.apache.org/jira/browse/CXF-5390
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/3584.yaml
