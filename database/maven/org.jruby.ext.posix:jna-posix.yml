---
- id: snykio:maven:org.jruby.ext.posix:jna-posix:CVE-2010-1330
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.jruby.ext.posix:jna-posix`][1] The regular expression engine in
    JRuby before 1.4.1, when $KCODE is set to \'u\', does not properly
    handle characters immediately after a UTF-8 character, which allows
    remote attackers to conduct cross-site scripting (XSS) attacks via a
    crafted string.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jna-posix%22
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: org.jruby.ext.posix:jna-posix
  vulnerable_versions:
  - ">= 0.7"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-1330
  cwe:
  - CWE-79
  disclosed_date: 2016-12-25
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Jörn Hartmann
  references:
  - http://www.jruby.org/2010/04/26/jruby-1-4-1-xss-vulnerability.html
  - https://bugs.gentoo.org/show_bug.cgi?id=317435
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJRUBYEXTPOSIX-30136
- id: victims:maven:org.jruby.ext.posix:jna-posix:2010-1330
  title: 'jruby: XSS in the regular expression engine when processing invalid UTF-8
    byte sequences'
  description: 'A cross-site scripting (XSS) flaw was found in the way the regular
    expression engine of the JRuby, Java implementation of the Ruby programming language,  processed
    certain invalid UTF-8 byte sequences. A remote attacker could use  this flaw to
    execute arbitrary HTML or web script via specially-crafted input  provided to
    an JRuby application.

'
  affected_package: org.jruby.ext.posix:jna-posix
  vulnerable_versions:
  - "==0.7"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2010-1330
  cvss_v2_score: 5.0
  credit:
  - Victims CVE Database
  references:
  - http://www.jruby.org/2010/04/26/jruby-1-4-1-xss-vulnerability.html
  - https://bugs.gentoo.org/show_bug.cgi?id=317435
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2010/1330.yaml
