---
- id: ossindex:maven:org.apache.activemq:activemq-client:355595
  title: '[CVE-2013-1879]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in scheduled.jsp in Apache
    ActiveMQ 5.8.0 and earlier allows remote attackers to inject arbitrary web script
    or HTML via vectors involving the "cron of a message."
  affected_package: org.apache.activemq:activemq-client
  vulnerable_versions:
  - ">=4.0.0 <=5.8.0"
  package_manager: maven
  cve:
  - CVE-2013-1879
  disclosed_date: 2013-07-20
  created_date: 2013-07-20
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2013-1029.html
  - http://secunia.com/advisories/54073
  - http://www.securityfocus.com/bid/61142
  - http://xforce.iss.net/xforce/xfdb/85586
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/85586
  - https://issues.apache.org/jira/browse/AMQ-4397
  source_url: https://ossindex.net/resource/package/7080707046/vulnerabilities
- id: ossindex:maven:org.apache.activemq:activemq-client:8397096545
  title: "[CVE-2015-5254]  Improper Input Validation"
  description: Apache ActiveMQ 5.x before 5.13.0 does not restrict the classes that
    can be serialized in the broker, which allows remote attackers to execute arbitrary
    code via a crafted serialized Java Message Service (JMS) ObjectMessage object.
  affected_package: org.apache.activemq:activemq-client
  vulnerable_versions:
  - ">=5.0.0 <=5.12.1"
  package_manager: maven
  cve:
  - CVE-2015-5254
  disclosed_date: 2016-01-08
  created_date: 2016-01-08
  last_modified_date: 2017-06-02
  credit:
  - OSSIndex
  references:
  - http://activemq.apache.org/security-advisories.data/CVE-2015-5254-announcement.txt
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174371.html
  - http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174537.html
  - http://rhn.redhat.com/errata/RHSA-2016-0489.html
  - http://rhn.redhat.com/errata/RHSA-2016-2035.html
  - http://rhn.redhat.com/errata/RHSA-2016-2036.html
  - http://www.debian.org/security/2016/dsa-3524
  - http://www.openwall.com/lists/oss-security/2015/12/08/6
  - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
  - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
  - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05385680
  - https://issues.apache.org/jira/browse/AMQ-6013
  source_url: https://ossindex.net/resource/package/7080707046/vulnerabilities
- id: snykio:maven:org.apache.activemq:activemq-client:30482
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.apache.activemq:activemq-client`][1] is an open source messaging
    and Integration Patterns server.

    Cross-site Scripting (XSS) vulnerability in scheduled.jsp in Apache
    ActiveMQ 5.8.0 and earlier allows remote attackers to inject arbitrary
    web script or HTML via vectors involving the \"cron of a message.\"



    [1]: http://activemq.apache.org/
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: org.apache.activemq:activemq-client
  vulnerable_versions:
  - ">= 4.0.0 <= 5.8.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2013-1879
  cwe:
  - CWE-79
  disclosed_date: 2014-06-08
  created_date: 2014-06-08
  last_modified_date: 2014-06-08
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1879
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEACTIVEMQ-30482
- id: snykio:maven:org.apache.activemq:activemq-client:30483
  title: XML External Entity (XXE) Injection
  description: |+
    [`org.apache.activemq:activemq-client`][1] is an open source messaging
    and Integration Patterns server.

    Affected versions of the package are vulnerable to XML External Entity
    (XXE) Injection.



    [1]: http://activemq.apache.org/
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.apache.activemq:activemq-client
  vulnerable_versions:
  - ">= 5 < 5.10.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-3600
  cwe:
  - CWE-611
  disclosed_date: 2015-10-19
  created_date: 2015-10-19
  last_modified_date: 2015-10-19
  credit:
  - Georgi Geshev
  references:
  - http://activemq.apache.org/security-advisories.data/CVE-2014-3600-announcement.txt?version=2&modificationDate=1423051306000&api=v2
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEACTIVEMQ-30483
- id: snykio:maven:org.apache.activemq:activemq-client:30484
  title: Arbitrary Code Execution
  description: |
    [\`org.apache.activemq:activemq-client][1] is an open source messaging
    and Integration Patterns server.

    Apache ActiveMQ 5.x before 5.13.0 does not restrict the classes that can
    be serialized in the broker, which allows remote attackers to execute
    arbitrary code via a crafted serialized Java Message Service (JMS)
    ObjectMessage object.



    [1]: http://activemq.apache.org/
  affected_package: org.apache.activemq:activemq-client
  vulnerable_versions:
  - ">= 5.00 <= 5.12.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-5254
  cwe:
  - CWE-20
  disclosed_date: 2015-12-09
  created_date: 2015-12-09
  last_modified_date: 2015-12-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5254
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHEACTIVEMQ-30484
