---
- id: ossindex:maven:org.apache.struts:struts2-rest-plugin:2016-07-04
  title: "[CVE-2016-4438]  Improper Input Validation"
  description: The REST plugin in Apache Struts 2 2.3.20 through 2.3.28.1 allows remote
    attackers to execute arbitrary code via a crafted expression.
  affected_package: org.apache.struts:struts2-rest-plugin
  vulnerable_versions:
  - ">=2.3.20 <=2.3.28.1"
  package_manager: maven
  cve:
  - CVE-2016-4438
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN07710476/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2016-000110
  - http://www.securityfocus.com/bid/91275
  - https://bugzilla.redhat.com/show_bug.cgi?id=1348238
  - https://struts.apache.org/docs/s2-037.html
  source_url: https://ossindex.net/resource/package/7015343271/vulnerabilities
- id: ossindex:maven:org.apache.struts:struts2-rest-plugin:2016-10-03
  title: "[CVE-2016-4436] Apache Struts 2 before 2.3.29 and 2.5.x before 2.5.1 allow
    attackers to have uns..."
  description: Apache Struts 2 before 2.3.29 and 2.5.x before 2.5.1 allow attackers
    to have unspecified impact via vectors related to improper action name clean up.
  affected_package: org.apache.struts:struts2-rest-plugin
  vulnerable_versions:
  - "> >=2.0.0 <=2.3.28.1"
  - "> >=2.5.0 <2.5.1"
  package_manager: maven
  cve:
  - CVE-2016-4436
  credit:
  - OSSIndex
  references:
  - http://www-01.ibm.com/support/docview.wss?uid=ssg1S1009282
  - http://www-01.ibm.com/support/docview.wss?uid=swg21987854
  - http://www.securityfocus.com/bid/91280
  - https://struts.apache.org/docs/s2-035.html
  source_url: https://ossindex.net/resource/package/7015343271/vulnerabilities
- id: snykio:maven:org.apache.struts:struts2-rest-plugin:2018-03-27
  title: Denial of Service (DoS)
  description: |+
    [org.apache.struts:struts2-rest-plugin][1] provides high level support
    for the implementation of RESTful resource based web applications
    Convention Plugin.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) attacks. An attacker may post a specially crafted XML request in
    order to perform a DoS attack when using the Struts REST plugin.



    [1]: http://struts.apache.org/plugins/rest/
    \n[org.apache.struts:struts2-rest-plugin][1] provides high level support
    for the implementation of RESTful resource based web applications
    Convention Plugin.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) attacks. An attacker may post a specially crafted XML request in
    order to perform a DoS attack when using the Struts REST plugin.



    [1]: http://struts.apache.org/plugins/rest/
    \n[org.apache.struts:struts2-rest-plugin][1] provides high level support
    for the implementation of RESTful resource based web applications
    Convention Plugin.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) attacks. An attacker may post a specially crafted XML request in
    order to perform a DoS attack when using the Struts REST plugin.



    [1]: http://struts.apache.org/plugins/rest/
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.apache.struts:struts2-rest-plugin
  vulnerable_versions:
  - ">= 2.1.1 < 2.5.16"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1327
  cwe:
  - CWE-400
  credit:
  - Yevgeniy Grushka
  - Alvaro Munoz
  references:
  - https://cwiki.apache.org/confluence/display/WW/S2-056
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTS-32141
- id: snykio:maven:org.apache.struts:struts2-rest-plugin:2016-09-19
  title: Improper Action Name Cleanup
  description: |
    [`org.apache.struts:struts2-rest-plugin`][1] Apache Struts 2 before
    2.3.29 and 2.5.x before 2.5.1 allow attackers to have unspecified impact
    via vectors related to improper action name clean up.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22struts2-rest-plugin%22
    \n[`org.apache.struts:struts2-rest-plugin`][1] Apache Struts 2 before
    2.3.29 and 2.5.x before 2.5.1 allow attackers to have unspecified impact
    via vectors related to improper action name clean up.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22struts2-rest-plugin%22
  affected_package: org.apache.struts:struts2-rest-plugin
  vulnerable_versions:
  - ">= 2.0.0 <= 2.3.28.1"
  - ">= 2.5 < 2.5.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-4436
  cwe:
  - CWE-459
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4436
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTS-30781
- id: snykio:maven:org.apache.struts:struts2-rest-plugin:2016-06-21
  title: Arbitrary Code Execution
  description: |
    [`org.apache.struts:struts2-rest-plugin`][1] The REST plugin in Apache
    Struts 2 2.3.20 through 2.3.28.1 allows remote attackers to execute
    arbitrary code via a crafted expression.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22struts2-rest-plugin%22
    \n[`org.apache.struts:struts2-rest-plugin`][1] The REST plugin in Apache
    Struts 2 2.3.20 through 2.3.28.1 allows remote attackers to execute
    arbitrary code via a crafted expression.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22struts2-rest-plugin%22
  affected_package: org.apache.struts:struts2-rest-plugin
  vulnerable_versions:
  - ">= 2.3.20 <= 2.3.28.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2016-4438
  cwe:
  - CWE-20
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4438
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTRUTS-30782
