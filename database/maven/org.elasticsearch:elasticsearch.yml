---
- id: ossindex:maven:org.elasticsearch:elasticsearch:CVE-2014-3120
  title: "[CVE-2014-3120]  Improper Access Control"
  description: 'The default configuration in Elasticsearch before 1.2 enables dynamic
    scripting, which allows remote attackers to execute arbitrary MVEL expressions
    and Java code via the source parameter to _search.  NOTE: this only violates the
    vendor''s intended security policy if the user does not run Elasticsearch in its
    own independent virtual machine.'
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.2.0"
  package_manager: maven
  cve:
  - CVE-2014-3120
  disclosed_date: 2014-07-28
  created_date: 2014-07-28
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://bouk.co/blog/elasticsearch-rce/
  - http://www.exploit-db.com/exploits/33370
  - http://www.osvdb.org/106949
  - http://www.rapid7.com/db/modules/exploit/multi/elasticsearch/script_mvel_rce
  - http://www.securityfocus.com/bid/67731
  - https://www.elastic.co/blog/logstash-1-4-3-released
  - https://www.elastic.co/community/security/
  - https://www.found.no/foundation/elasticsearch-security/#staying-safe-while-developing-with-elasticsearch
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:CVE-2014-6439
  title: '[CVE-2014-6439]  Improper Neutralization of Input During Web Page Generation
    ("Cross-site Scripting")'
  description: Cross-site scripting (XSS) vulnerability in the CORS functionality
    in Elasticsearch before 1.4.0.Beta1 allows remote attackers to inject arbitrary
    web script or HTML via unspecified vectors.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.4.0.Beta1"
  package_manager: maven
  cve:
  - CVE-2014-6439
  disclosed_date: 2014-10-10
  created_date: 2014-10-10
  last_modified_date: 2017-04-16
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/128556/Elasticsearch-1.3.x-CORS-Issue.html
  - http://www.elasticsearch.org/blog/elasticsearch-1-4-0-beta-released/
  - http://www.securityfocus.com/archive/1/archive/1/533602/100/0/threaded
  - http://www.securityfocus.com/bid/70233
  - https://www.elastic.co/community/security/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:CVE-2015-1427
  title: "[CVE-2015-1427]  Improper Access Control"
  description: The Groovy scripting engine in Elasticsearch before 1.3.8 and 1.4.x
    before 1.4.3 allows remote attackers to bypass the sandbox protection mechanism
    and execute arbitrary shell commands via a crafted script.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<=1.3.8"
  - ">=1.4.0 <1.4.3"
  package_manager: maven
  cve:
  - CVE-2015-1427
  disclosed_date: 2015-02-17
  created_date: 2015-02-17
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/130368/Elasticsearch-1.3.7-1.4.2-Sandbox-Escape-Command-Execution.html
  - http://packetstormsecurity.com/files/130784/ElasticSearch-Unauthenticated-Remote-Code-Execution.html
  - http://www.elasticsearch.com/blog/elasticsearch-1-4-3-1-3-8-released/
  - http://www.securityfocus.com/archive/1/archive/1/534689/100/0/threaded
  - http://www.securityfocus.com/bid/72585
  - http://xforce.iss.net/xforce/xfdb/100850
  - https://access.redhat.com/errata/RHSA-2017:0868
  - https://exchange.xforce.ibmcloud.com/vulnerabilities/100850
  - https://www.elastic.co/community/security/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:CVE-2015-3337
  title: '[CVE-2015-3337]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Elasticsearch before 1.4.5 and
    1.5.x before 1.5.2, when a site plugin is enabled, allows remote attackers to
    read arbitrary files via unspecified vectors.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.4.5"
  - ">=1.5.0 <1.5.2"
  package_manager: maven
  cve:
  - CVE-2015-3337
  disclosed_date: 2015-05-01
  created_date: 2015-05-01
  last_modified_date: 2017-04-18
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/131646/Elasticsearch-Directory-Traversal.html
  - http://www.debian.org/security/2015/dsa-3241
  - http://www.securityfocus.com/archive/1/535385
  - http://www.securityfocus.com/bid/74353
  - https://www.elastic.co/community/security
  - https://www.exploit-db.com/exploits/37054/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: ossindex:maven:org.elasticsearch:elasticsearch:CVE-2015-5531
  title: '[CVE-2015-5531]  Improper Limitation of a Pathname to a Restricted Directory
    ("Path Traversal")'
  description: Directory traversal vulnerability in Elasticsearch before 1.6.1 allows
    remote attackers to read arbitrary files via unspecified vectors related to snapshot
    API calls.
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<1.6.1"
  package_manager: maven
  cve:
  - CVE-2015-5531
  disclosed_date: 2015-08-17
  created_date: 2015-08-17
  last_modified_date: 2017-08-03
  credit:
  - OSSIndex
  references:
  - http://packetstormsecurity.com/files/132721/Elasticsearch-Directory-Traversal.html
  - http://packetstormsecurity.com/files/133797/ElasticSearch-Path-Traversal-Arbitrary-File-Download.html
  - http://packetstormsecurity.com/files/133964/ElasticSearch-Snapshot-API-Directory-Traversal.html
  - http://www.securityfocus.com/archive/1/archive/1/536017/100/0/threaded
  - http://www.securityfocus.com/bid/75935
  - https://www.elastic.co/community/security/
  - https://www.exploit-db.com/exploits/38383/
  source_url: https://ossindex.net/resource/package/7076759992/vulnerabilities
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2014-6439
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.elasticsearch:elasticsearch`][1] Cross-site Scripting (XSS)
    vulnerability in the CORS functionality in Elasticsearch before
    1.4.0.Beta1 allows remote attackers to inject arbitrary web script or
    HTML via unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<= 1.3.4"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-6439
  cwe:
  - CWE-79
  disclosed_date: 2016-12-25
  created_date: 2016-12-25
  last_modified_date: 2016-12-25
  credit:
  - Unknown
  references:
  - http://www.elasticsearch.org/community/security/
  - https://bugzilla.redhat.com/CVE-2014-6439
  - https://github.com/elasticsearch/elasticsearch/issues/7151
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-30092
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2015-1427
  title: Improper Access Control
  description: |
    [`org.elasticsearch:elasticsearch`][1] The Groovy scripting engine in
    Elasticsearch before 1.3.8 and 1.4.x before 1.4.3 allows remote
    attackers to bypass the sandbox protection mechanism and execute
    arbitrary shell commands via a crafted script.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - ">= 0.6.0 < 1.3.8"
  - ">= 1.4 < 1.4.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2015-1427
  cwe:
  - CWE-284
  disclosed_date: 2015-02-18
  created_date: 2015-02-18
  last_modified_date: 2015-02-18
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-1427
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31127
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2015-3337
  title: Directory Traversal
  description: |
    [`org.elasticsearch:elasticsearch`][1] Directory traversal vulnerability
    in Elasticsearch before 1.4.5 and 1.5.x before 1.5.2, when a site plugin
    is enabled, allows remote attackers to read arbitrary files via
    unspecified vectors.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.4.5"
  - ">= 1.5 < 1.5.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-3337
  cwe:
  - CWE-22
  disclosed_date: 2016-06-09
  created_date: 2016-06-09
  last_modified_date: 2016-06-09
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3337
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31128
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2015-4165
  title: Arbitrary code execution
  description: |
    [`org.elasticsearch:elasticsearch`][1] Affected versions of the package
    are vulnerable to Arbitrary Code Execution attacks that use
    Elasticsearch to modify files read and executed by other applications.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<= 1.5.2"
  severity: low
  package_manager: maven
  cve:
  - CVE-2015-4165
  cwe:
  - CWE-95
  disclosed_date: 2015-06-10
  created_date: 2015-06-10
  last_modified_date: 2015-06-10
  credit:
  - Unknown
  references:
  - http://seclists.org/bugtraq/2015/Jun/53
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31129
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2015-5377
  title: Arbitrary Code Execution
  description: |
    [`org.elasticsearch:elasticsearch`][1] Affected versions of the package
    are vulnerable to Remote Code Execution. Elasticsearch versions prior to
    1.6.1 are vulnerable to an engineered attack on its transport protocol
    that enables remote code execution. This issue is related to the Groovy
    announcement in [CVE-2015-3253][2].



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    [2]: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31130
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<= 1.6.0"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-5377
  cwe:
  - CWE-94
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2015-07-16
  credit:
  - Unknown
  references:
  - http://seclists.org/bugtraq/2015/Jul/82
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31130
- id: snykio:maven:org.elasticsearch:elasticsearch:CVE-2015-5531
  title: Directory Traversal
  description: |
    [`org.elasticsearch:elasticsearch`][1] Directory traversal vulnerability
    in Elasticsearch before 1.6.1 allows remote attackers to read arbitrary
    files via unspecified vectors related to snapshot API calls.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22elasticsearch%22
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "< 1.6.1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2015-5531
  cwe:
  - CWE-22
  disclosed_date: 2015-07-16
  created_date: 2015-07-16
  last_modified_date: 2015-07-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5531
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGELASTICSEARCH-31131
- id: victims:maven:org.elasticsearch:elasticsearch:2014-6439
  title: 'Elasticsearch: CSRF via insecure CORS default configuration'
  affected_package: org.elasticsearch:elasticsearch
  vulnerable_versions:
  - "<=1.3.4"
  patched_versions:
  - ">=1.4.0.Beta1"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-6439
  cvss_v2_score: 4.3
  credit:
  - Victims CVE Database
  references:
  - http://www.elasticsearch.org/community/security/
  - https://bugzilla.redhat.com/CVE-2014-6439
  - https://github.com/elasticsearch/elasticsearch/issues/7151
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/6439.yaml
