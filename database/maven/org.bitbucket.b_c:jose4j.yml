---
- id: snykio:maven:org.bitbucket.b_c:jose4j:2017-03-13
  title: Elliptic Curve Key Disclosure
  description: |
    [`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
    \n[`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
    \n[`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
    \n[`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
    \n[`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
    \n[`org.bitbucket.b_c:jose4j`][1] is a robust and easy to use open source
    implementation of JSON Web Token (JWT) and the JOSE specification suite
    (JWS, JWE, and JWK).

    Affected versions of the package are vulnerable to Elliptic Curve Key
    Disclosure.

    A JSON Web Token (JWT) defines a container that transports data between
    two parties. When a JWT is signed with a private key by one of the
    parties, it\'s known as a JSON Web Signature (JWS).

    The \"JWK\" (JSON Web Key) is a JSON based open standard used for
    creating access tokens. JWK\'s `Header Parameter` allows it to include
    the public key that corresponds to the key used to sign the JWS. If the
    Header Parameter includes this public key, an attacker could then use it
    to generate a private key / public key pair, send the public key
    together with the signature and the signature will be valid.

    This vulnerability is related to [npm:node-jose:20170313][2] and
    [SNYK-JAVA-COMNIMBUSDS-30205][3]



    [1]: https://bitbucket.org/b_c/jose4j/overview
    [2]: https://snyk.io/vuln/npm:node-jose:20170313
    [3]: https://snyk.io/vuln/SNYK-JAVA-COMNIMBUSDS-30205
  affected_package: org.bitbucket.b_c:jose4j
  vulnerable_versions:
  - "< 0.5.5"
  severity: high
  package_manager: maven
  cwe:
  - CWE-200
  credit:
  - Antonio Sanso
  - Quan Nguyan
  references:
  - http://blog.intothesymmetry.com/2017/03/critical-vulnerability-in-json-web.html
  - https://www.cs.bris.ac.uk/Research/CryptographySecurity/RWC/2017/nguyen.quan.pdf
  - https://gist.github.com/asanso/350e3ce993e44d0509c6023aa77fc6af
  - https://bitbucket.org/b_c/jose4j/commits/0517896170af8d5c057407c70a7b08dae454829e
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGBITBUCKETBC-30206
