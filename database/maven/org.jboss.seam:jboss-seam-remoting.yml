---
- id: snykio:maven:org.jboss.seam:jboss-seam-remoting:32042
  title: Cross-site Scripting (XSS)
  description: |+
    [`org.jboss.seam:jboss-seam-remoting`][1] was a web application
    framework developed by JBoss, a division of Red Hat

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks.

    JBoss Seam response envelopes include unsanitized parameter and id names
    provided in the request. This allows a request to inject arbitrary XML
    into the response. A remote attacker could use this flaw to perform
    reflected cross-site scripting attacks, provided the JBoss Seam remoting
    application does not apply any cross-site request forgery (CSRF)
    protection.



    [1]: http://seamframework.org/
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: org.jboss.seam:jboss-seam-remoting
  vulnerable_versions:
  - ">= 2 < 2.3.1.Final"
  severity: low
  package_manager: maven
  cve:
  - CVE-2014-0149
  cwe:
  - CWE-79
  disclosed_date: 2014-03-20
  created_date: 2018-01-22
  last_modified_date: 2018-01-22
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=1078646
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJBOSSSEAM-32042
- id: victims:maven:org.jboss.seam:jboss-seam-remoting:2014-0149
  title: 'JBoss Seam 2: XSS via improper XML sanitization'
  description: 'JBoss Seam response envelopes include unsanitized parameter and id
    names  provided in the request. This allows a request to inject arbitrary XML
    into  the response.  A remote attacker could use this flaw to perform reflected  cross-site
    scripting attacks, provided the JBoss Seam remoting application  does not apply
    any cross-site request forgery (CSRF) protection.

'
  affected_package: org.jboss.seam:jboss-seam-remoting
  vulnerable_versions:
  - '2'
  - 2.3.3.Final-redhat
  - "<=2.3.1.Final"
  - "<=2.3.3.Final-redhat-1"
  patched_versions:
  - '2'
  - 2.3.3.Final-redhat
  - ">=2.3.2.Final"
  - ">=2.3.3.Final-redhat-2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0149
  cvss_v2_score: 4.3
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-0149
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/0149.yaml
