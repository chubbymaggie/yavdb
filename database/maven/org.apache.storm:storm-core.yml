---
- id: snykio:maven:org.apache.storm:storm-core:2018-05-04
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of the package are vulnerable to Arbitrary File Write
    via Archive Extraction (AKA \"Zip Slip\").

    It can be exploited using a specially crafted zip archive, that holds
    path traversal filenames. When exploited, a filename in a malicious
    archive is concatenated to the target extraction directory, which
    results in the final path ending up outside of the target folder. For
    instance, a zip may hold a file with a `../../file.exe` location and
    thus break out of the target folder. If an executable or a configuration
    file is overwritten with a file containing malicious code, the problem
    can turn into an arbitrary code execution issue quite easily.

    The following is an example of a zip archive with one benign file and
    one malicious file. Extracting the malicous file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        ++2018-04-15 22:04:29 .....           19           19  good.txt
        ++2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.1.3"
  - ">= 1.2.0 < 1.2.2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-8008
  cwe:
  - CWE-29
  credit:
  - Snyk Security research Team
  references:
  - https://lists.apache.org/thread.html/613b2fca8bcd0a3b12c0b763ea8f7cf62e422e9f79fce6cfa5b08a58@%3Cdev.storm.apache.org%3E
  - https://nvd.nist.gov/vuln/detail/CVE-2018-8008
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32346
- id: snykio:maven:org.apache.storm:storm-core:2018-06-04
  title: Arbitrary Code Execution
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. An attacker with access to a secure storm cluster in some
    cases could execute arbitrary code as a different user.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. An attacker with access to a secure storm cluster in some
    cases could execute arbitrary code as a different user.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. An attacker with access to a secure storm cluster in some
    cases could execute arbitrary code as a different user.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.2.2"
  - ">= 1.1.0 < 1.1.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-1331
  cwe:
  - CWE-94
  credit:
  - Unknown
  references:
  - http://storm.apache.org/2018/06/04/storm122-released.html
  - http://storm.apache.org/2018/06/04/storm113-released.html
  - https://www.securitytracker.com/id/1041273
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32410
- id: snykio:maven:org.apache.storm:storm-core:2018-06-05
  title: User Impersonation
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to User Impersonation
    when communicating with some Storm Daemons.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to User Impersonation
    when communicating with some Storm Daemons.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \n[org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to User Impersonation
    when communicating with some Storm Daemons.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.1.3"
  - ">= 1.2.0 < 1.2.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1332
  cwe:
  - CWE-290
  credit:
  - Unknown
  references:
  - https://lists.apache.org/thread.html/50f1d6a7af27f49d2e498a9ab2975685302cd8ca47000b7c38f339a4@%3Cdev.storm.apache.org%3E
  - https://nvd.nist.gov/vuln/detail/CVE-2018-1332
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32348
