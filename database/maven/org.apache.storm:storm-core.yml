---
- id: snykio:maven:org.apache.storm:storm-core:32346
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[org.apache.storm:storm-core][1] is a distributed realtime computation\nsystem.\n\nAffected
    versions of this package are vulnerable to Arbitrary File Write\nvia Archive Extraction
    (Zip Slip).\n\n\n\n[1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core\n\\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n"
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.1.3"
  - ">= 1.2.0 < 1.2.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-8008
  cwe:
  - CWE-29
  disclosed_date: 2018-05-04
  created_date: 2018-06-06
  last_modified_date: 2018-06-06
  credit:
  - Snyk Security research Team
  references:
  - https://github.com/apache/storm/commit/1117a37b01a1058897a34e11ff5156e465efb692
  - https://lists.apache.org/thread.html/613b2fca8bcd0a3b12c0b763ea8f7cf62e422e9f79fce6cfa5b08a58@%3Cdev.storm.apache.org%3E
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32346
- id: snykio:maven:org.apache.storm:storm-core:32348
  title: User Impersonation
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to User Impersonation
    when communicating with some Storm Daemons.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.1.3"
  - ">= 1.2.0 < 1.2.2"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2018-1332
  cwe:
  - CWE-290
  disclosed_date: 2018-06-05
  created_date: 2018-06-06
  last_modified_date: 2018-06-06
  credit:
  - Unknown
  references:
  - https://lists.apache.org/thread.html/50f1d6a7af27f49d2e498a9ab2975685302cd8ca47000b7c38f339a4@%3Cdev.storm.apache.org%3E
  - https://nvd.nist.gov/vuln/detail/CVE-2018-1332
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32348
- id: snykio:maven:org.apache.storm:storm-core:32410
  title: Arbitrary Code Execution
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. An attacker with access to a secure storm cluster in some
    cases could execute arbitrary code as a different user.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - "< 1.2.2"
  - ">= 1.1.0 < 1.1.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-1331
  cwe:
  - CWE-94
  disclosed_date: 2018-06-04
  created_date: 2018-07-19
  last_modified_date: 2018-07-19
  credit:
  - Unknown
  references:
  - http://storm.apache.org/2018/06/04/storm113-released.html
  - http://storm.apache.org/2018/06/04/storm122-released.html
  - https://www.securitytracker.com/id/1041273
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32410
- id: snykio:maven:org.apache.storm:storm-core:449919
  title: Directory Traversal
  description: |
    [org.apache.storm:storm-core][1] is a distributed realtime computation
    system.

    Affected versions of this package are vulnerable to Directory Traversal.
    It is possible to read arbitrary files via a .. (dot dot) in the `file`
    parameter to log within the logviewer class.



    [1]: http://mvnrepository.com/artifact/org.apache.storm/storm-core
    \nA Directory Traversal attack (also known as path traversal) aims to
    access files and directories that are stored outside the intended
    folder. By manipulating files with \"dot-dot-slash (../)\" sequences and
    its variations, or by using absolute file paths, it may be possible to
    access arbitrary files and directories stored on file system, including
    application source code, configuration, and other critical system files.

    Directory Traversal vulnerabilities can be generally divided into two
    types:

    * **Information Disclosure**\: Allows the attacker to gain information
      about the folder structure or read the contents of sensitive files on
      the system.

    `st` is a module for serving static files on web pages, and contains a
    [vulnerability of this type][1]. In our example, we will serve files
    from the `public` route.

    If an attacker requests the following URL from our server, it will in
    turn leak the sensitive private key of the root user.

        curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

    **Note** `%2e` is the URL encoded version of `.` (dot).

    * **Writing arbitrary files**\: Allows the attacker to create or replace
      existing files. This type of vulnerability is also known as
      `Zip-Slip`.

    One way to achieve this is by using a malicious `zip` archive that holds
    path traversal filenames. When each filename in the zip archive gets
    concatenated to the target extraction folder, without validation, the
    final path ends up outside of the target folder. If an executable or a
    configuration file is overwritten with a file containing malicious code,
    the problem can turn into an arbitrary code execution issue quite
    easily.

    The following is an example of a `zip` archive with one benign file and
    one malicious file. Extracting the malicious file will result in
    traversing out of the target folder, ending up in `/root/.ssh/`
    overwriting the `authorized_keys` file:

        2018-04-15 22:04:29 .....           19           19  good.txt
        2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys



    [1]: https://snyk.io/vuln/npm:st:20140206
  affected_package: org.apache.storm:storm-core
  vulnerable_versions:
  - ">= 0.9.1-incubating < 0.9.2-incubating"
  severity: high
  package_manager: maven
  cve:
  - CVE-2014-0115
  cwe:
  - CWE-22
  disclosed_date: 2014-04-25
  created_date: 2019-06-14
  last_modified_date: 2019-06-14
  credit:
  - P. Taylor Goetz
  references:
  - https://github.com/apache/storm/pull/91
  - https://github.com/apache/storm/pull/91/commits/39acc27bfb6062aba2d3c748a26b318c30b89cb4
  - https://issues.apache.org/jira/browse/STORM-269
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-449919
