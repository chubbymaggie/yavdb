---
- id: snykio:maven:org.jvnet.hudson.plugins:warnings:173671
  title: Cross-site Request Forgery (CSRF)
  description: |
    [org.jvnet.hudson.plugins:warnings][1] is a Jenkins warnings plugin.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). An attacker could execute arbitrary code via a form
    validation HTTP endpoint.



    [1]: https://github.com/jenkinsci/warnings-plugin
  affected_package: org.jvnet.hudson.plugins:warnings
  vulnerable_versions:
  - "< 5.0.1"
  severity: high
  package_manager: maven
  cve:
  - CVE-2019-1003007
  cwe:
  - CWE-352
  disclosed_date: 2019-01-28
  created_date: 2019-02-06
  last_modified_date: 2019-02-06
  credit:
  - Unknown
  references:
  - https://github.com/jenkinsci/warnings-plugin/commit/08c00150b296998416d5320ccd9e8a590dd3a107
  - https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1295%20(1
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJVNETHUDSONPLUGINS-173671
- id: snykio:maven:org.jvnet.hudson.plugins:warnings:32166
  title: XML External Entity (XXE) Injection
  description: |+
    [org.jvnet.hudson.plugins:warnings][1] collects the compiler warnings of
    the project modules and visualizes the results.

    Affected versions of this package are vulnerable to XML External Entity
    (XXE) Injection in files it parses as part of the build process. It
    allows attackers with user permissions in Jenkins to extract secrets
    from the Jenkins master, perform server-side request forgery, or
    denial-of-service attacks.



    [1]: https://github.com/jenkinsci/warnings-plugin
    \nXXE Injection is a type of attack against an application that parses XML
    input. XML is a markup language that defines a set of rules for encoding
    documents in a format that is both human-readable and machine-readable.
    By default, many XML processors allow specification of an external
    entity, a URI that is dereferenced and evaluated during XML processing.
    When an XML document is being parsed, the parser can make a request and
    include the content at the specified URI inside of the XML document.

    Attacks can include disclosing local files, which may contain sensitive
    data such as passwords or private user data, using file: schemes or
    relative paths in the system identifier.

    For example, below is a sample XML document, containing an XML element-
    username.

        <?xml version="1.0" encoding="ISO-8859-1"?>
           <username>John</username>
        </xml>
    {: .language-xml}

    An external XML entity - `xxe`, is defined using a system identifier and
    present within a DOCTYPE header. These entities can access local or
    remote content. For example the below code contains an external XML
    entity that would fetch the content of `/etc/passwd` and display it to
    the user rendered by `username`.

        <?xml version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE foo [
           <!ENTITY xxe SYSTEM "file:///etc/passwd" >]>
           <username>&xxe;</username>
        </xml>
    {: .language-xml}

    Other XXE Injection attacks can access local resources that may not stop
    returning data, possibly impacting application availability and leading
    to Denial of Service.

  affected_package: org.jvnet.hudson.plugins:warnings
  vulnerable_versions:
  - "< 4.65"
  severity: high
  package_manager: maven
  cve:
  - CVE-2018-1000012
  cwe:
  - CWE-611
  disclosed_date: 2018-01-23
  created_date: 2018-04-08
  last_modified_date: 2018-04-08
  credit:
  - Suresh Narvaneni
  references:
  - https://jenkins.io/security/advisory/2018-01-22/
  - https://nvd.nist.gov/vuln/detail/CVE-2018-1000012
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGJVNETHUDSONPLUGINS-32166
