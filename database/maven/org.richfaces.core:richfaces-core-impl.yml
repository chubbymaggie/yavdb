---
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:2013-07-23
  title: "[CVE-2013-2165]  Permissions, Privileges, and Access Controls"
  description: ResourceBuilderImpl.java in the RichFaces 3.x through 5.x implementation
    in Red Hat JBoss Web Framework Kit before 2.3.0, Red Hat JBoss Web Platform through
    5.2.0, Red Hat JBoss Enterprise Application Platform through 4.3.0 CP10 and 5.x
    through 5.2.0, Red Hat JBoss BRMS through 5.3.1, Red Hat JBoss SOA Platform through
    4.3.0 CP05 and 5.x through 5.3.1, Red Hat JBoss Portal through 4.3 CP07 and 5.x
    through 5.2.2, and Red Hat JBoss Operations Network through 2.4.2 and 3.x through
    3.1.2 does not restrict the classes for which deserialization methods can be called,
    which allows remote attackers to execute arbitrary code via crafted serialized
    data.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 3.1.0
  - 3.1.1
  - 3.1.2
  - 3.1.3
  - 3.1.4
  - 3.1.5
  - 3.1.6
  - 3.2.0
  - 3.2.1
  - 3.2.2
  - 3.3.0
  - 3.3.1
  - 3.3.2
  - 3.3.3
  - 4.0.0
  - 4.1.0
  - 4.2.0
  - 4.2.1
  - 4.2.2
  - 4.2.3
  - 4.3.0
  - 4.3.1
  - 4.5.0
  - 5.0.0
  package_manager: maven
  cve:
  - CVE-2013-2165
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN38787103/index.html
  - http://jvndb.jvn.jp/jvndb/JVNDB-2013-000072
  - http://rhn.redhat.com/errata/RHSA-2013-1041.html
  - http://rhn.redhat.com/errata/RHSA-2013-1042.html
  - http://rhn.redhat.com/errata/RHSA-2013-1043.html
  - http://rhn.redhat.com/errata/RHSA-2013-1044.html
  - http://rhn.redhat.com/errata/RHSA-2013-1045.html
  - https://access.redhat.com/security/cve/CVE-2013-2165
  - https://bugzilla.redhat.com/show_bug.cgi?id=973570
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:2014-03-31
  title: "[CVE-2014-0086]  Improper Input Validation"
  description: The doFilter function in webapp/PushHandlerFilter.java in JBoss RichFaces
    4.3.4, 4.3.5, and 5.x allows remote attackers to cause a denial of service (memory
    consumption and out-of-memory error) via a large number of malformed atmosphere
    push requests.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 4.3.4
  - 4.3.5
  - 5.0.0
  package_manager: maven
  cve:
  - CVE-2014-0086
  credit:
  - OSSIndex
  references:
  - http://rhn.redhat.com/errata/RHSA-2014-0335.html
  - http://secunia.com/advisories/57053
  - https://bugzilla.redhat.com/show_bug.cgi?id=1067268
  - https://github.com/pslegr/core-1/commit/8131f15003f5bec73d475d2b724472e4b87d0757
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: ossindex:maven:org.richfaces.core:richfaces-core-impl:2015-03-26
  title: '[CVE-2015-0279]  Improper Control of Generation of Code ("Code Injection")'
  description: JBoss RichFaces before 4.5.4 allows remote attackers to inject expression
    language (EL) expressions and execute arbitrary Java code via the do parameter.
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - 4.5.3
  package_manager: maven
  cve:
  - CVE-2015-0279
  credit:
  - OSSIndex
  references:
  - http://jvn.jp/en/jp/JVN56297719/index.html
  - http://jvndb.jvn.jp/en/contents/2015/JVNDB-2015-001959.html
  - http://rhn.redhat.com/errata/RHSA-2015-0719.html
  - https://bugzilla.redhat.com/show_bug.cgi?id=1192140
  source_url: https://ossindex.net/resource/package/7015488605/vulnerabilities
- id: snykio:maven:org.richfaces.core:richfaces-core-impl:2016-12-25
  title: Denial of Service (DoS)
  description: |+
    [`org.richfaces.core:richfaces-core-impl`][1] The doFilter function in
    webapp/PushHandlerFilter.java in JBoss RichFaces 4.3.4, 4.3.5, and 5.x
    allows remote attackers to cause a denial of service (memory consumption
    and out-of-memory error) via a large number of malformed atmosphere push
    requests.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22richfaces-core-impl%22
    \n[`org.richfaces.core:richfaces-core-impl`][1] The doFilter function in
    webapp/PushHandlerFilter.java in JBoss RichFaces 4.3.4, 4.3.5, and 5.x
    allows remote attackers to cause a denial of service (memory consumption
    and out-of-memory error) via a large number of malformed atmosphere push
    requests.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22richfaces-core-impl%22
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - ">= 4 <= 4.3.5.Final"
  - ">= 5-alpha <= 5.0.0.Alpha3"
  severity: medium
  package_manager: maven
  cve:
  - CVE-2014-0086
  cwe:
  - CWE-20
  credit:
  - Unknown
  references:
  - https://bugzilla.redhat.com/CVE-2014-0086
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGRICHFACESCORE-30151
- id: snykio:maven:org.richfaces.core:richfaces-core-impl:2016-12-25
  title: Arbitrary Code Execution
  description: |
    [`org.richfaces.core:richfaces-core-impl`][1] ResourceBuilderImpl.java
    in the RichFaces 3.x through 5.x implementation in Red Hat JBoss Web
    Framework Kit before 2.3.0, Red Hat JBoss Web Platform through 5.2.0,
    Red Hat JBoss Enterprise Application Platform through 4.3.0 CP10 and 5.x
    through 5.2.0, Red Hat JBoss BRMS through 5.3.1, Red Hat JBoss SOA
    Platform through 4.3.0 CP05 and 5.x through 5.3.1, Red Hat JBoss Portal
    through 4.3 CP07 and 5.x through 5.2.2, and Red Hat JBoss Operations
    Network through 2.4.2 and 3.x through 3.1.2 does not restrict the
    classes for which deserialization methods can be called, which allows
    remote attackers to execute arbitrary code via crafted serialized data.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22richfaces-core-impl%22
    \n[`org.richfaces.core:richfaces-core-impl`][1] ResourceBuilderImpl.java
    in the RichFaces 3.x through 5.x implementation in Red Hat JBoss Web
    Framework Kit before 2.3.0, Red Hat JBoss Web Platform through 5.2.0,
    Red Hat JBoss Enterprise Application Platform through 4.3.0 CP10 and 5.x
    through 5.2.0, Red Hat JBoss BRMS through 5.3.1, Red Hat JBoss SOA
    Platform through 4.3.0 CP05 and 5.x through 5.3.1, Red Hat JBoss Portal
    through 4.3 CP07 and 5.x through 5.2.2, and Red Hat JBoss Operations
    Network through 2.4.2 and 3.x through 3.1.2 does not restrict the
    classes for which deserialization methods can be called, which allows
    remote attackers to execute arbitrary code via crafted serialized data.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22richfaces-core-impl%22
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - ">= 3 < 3.3.3"
  - ">= 4 < 4.3.3"
  severity: high
  package_manager: maven
  cve:
  - CVE-2013-2165
  cwe:
  - CWE-264
  credit:
  - Unknown
  references:
  - https://access.redhat.com/security/cve/cve-2013-2165
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGRICHFACESCORE-30150
- id: victims:maven:org.richfaces.core:richfaces-core-impl:date
  title: 'JBoss RichFaces: remote denial of service via memory exhaustion'
  description: 'It was found that certain malformed requests caused RichFaces to leak  memory.
    A remote, unauthenticated attacker could use this flaw to send a  large number
    of malformed requests to a RichFaces application that uses the  Atmosphere framework,
    leading to a denial of service  (excessive memory consumption) on the application
    server.

'
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - "<=4.3.5.Final"
  - '4'
  - "<=5.0.0.Alpha3"
  - '5'
  patched_versions:
  - ">=4.3.6.Final"
  - '4'
  - ">=5.0.0.Alpha4"
  severity: medium
  package_manager: maven
  cve:
  - 2014-0086
  credit:
  - Victims CVE Database
  references:
  - https://bugzilla.redhat.com/CVE-2014-0086
  - https://issues.jboss.org/browse/RF-13250
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2014/0086.yaml
- id: victims:maven:org.richfaces.core:richfaces-core-impl:date
  title: 'JBoss RichFaces: Remote code execution due to insecure deserialization'
  description: 'A flaw was found in the way JBoss RichFaces handled deserialization.
    A  remote attacker could use this flaw to trigger the execution of the  deserialization
    methods in any serializable class deployed on the server.  This could lead to
    a variety of security impacts depending on the  deserialization logic of these
    classes.

'
  affected_package: org.richfaces.core:richfaces-core-impl
  vulnerable_versions:
  - "<=4.3.2.Final"
  - '4'
  patched_versions:
  - ">=4.3.3.Final"
  - '4'
  severity: high
  package_manager: maven
  cve:
  - 2013-2165
  credit:
  - Victims CVE Database
  source_url: https://github.com/victims/victims-cve-db/blob/master/database/java/2013/2165.yaml
