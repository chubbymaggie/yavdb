---
- id: snykio:maven:org.restlet.lib:org.simpleframework.simple-xml:31530
  title: XML External Entity (XXE) Injection
  description: "Affected versions of `org.restlet.lib:org.simpleframework.simple-xml`\nare
    vulnerable to XML External Entity (XXE) Injection, which was\noriginally found
    in [Simpleframeworks simple-xml][1] and forked by\nrestlet.\n\n> The XML External
    Entity (XXE) vulnerabilities abuse the XML\n> specification to force an XML parser
    to either fetch sensitive data\n> from the system, or carry out denial of services
    (DoS) or server-side\n> request forgery (SSRF) attacks. The main problem is that
    the XML\n> standard allows an XML document to define entities, which are like\n>
    variables that can refer to resources outside of the XML document.\n> Let\\'s
    consider the following XML document:\n> \n>     <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n>
    \     <!DOCTYPE foo [\n>       <!ELEMENT foo ANY >\n>       <!ENTITY abc SYSTEM
    \"file:///etc/passwd\" >]>\n>     <foo>&abc;</foo>\n> {: .language-xml}\n\n> This
    document defines an external entity named abc, that refers to the\n> content of
    the file `/etc/passwd`. When the XML document is parsed,\n> the entity `&abc;`
    will be replaced by the content of `/etc/passwd`.\n> Now if an application is
    parsing XML data from an untrusted source,\n> then by defining an external entity
    that points to a sensitive file,\n> the attacker will be able to force the application
    to include\n> sensitive data in the parsed XML document. If the attacker can then\n>
    retrieve the content of the parsed document, they will be able to view\n> the
    content of /etc/passwd.\n> \n> * LGTM Blog\n\n\n\n[1]: https://snyk.io/vuln/SNYK-JAVA-ORGSIMPLEFRAMEWORK-31528\n\\nXXE
    Injection is a type of attack against an application that parses XML\ninput. XML
    is a markup language that defines a set of rules for encoding\ndocuments in a
    format that is both human-readable and machine-readable.\nBy default, many XML
    processors allow specification of an external\nentity, a URI that is dereferenced
    and evaluated during XML processing.\nWhen an XML document is being parsed, the
    parser can make a request and\ninclude the content at the specified URI inside
    of the XML document.\n\nAttacks can include disclosing local files, which may
    contain sensitive\ndata such as passwords or private user data, using file: schemes
    or\nrelative paths in the system identifier.\n\nFor example, below is a sample
    XML document, containing an XML element-\nusername.\n\n    <?xml version=\"1.0\"
    encoding=\"ISO-8859-1\"?>\n       <username>John</username>\n    </xml>\n{: .language-xml}\n\nAn
    external XML entity - `xxe`, is defined using a system identifier and\npresent
    within a DOCTYPE header. These entities can access local or\nremote content. For
    example the below code contains an external XML\nentity that would fetch the content
    of `/etc/passwd` and display it to\nthe user rendered by `username`.\n\n    <?xml
    version=\"1.0\" encoding=\"ISO-8859-1\"?>\n    <!DOCTYPE foo [\n       <!ENTITY
    xxe SYSTEM \"file:///etc/passwd\" >]>\n       <username>&xxe;</username>\n    </xml>\n{:
    .language-xml}\n\nOther XXE Injection attacks can access local resources that
    may not stop\nreturning data, possibly impacting application availability and
    leading\nto Denial of Service.\n\n"
  affected_package: org.restlet.lib:org.simpleframework.simple-xml
  vulnerable_versions:
  - "< 2.7.3"
  severity: high
  package_manager: maven
  cwe:
  - CWE-611
  disclosed_date: 2017-09-29
  created_date: 2017-10-11
  last_modified_date: 2017-10-11
  credit:
  - LGTM Security Team
  - Man Yue Mo
  references:
  - https://github.com/ngallagher/simplexml/issues/18
  - https://github.com/restlet/restlet-framework-java/wiki/XEE-security-enhancements#vulnerability-cve-2017-14868
  - https://lgtm.com/blog/restlet_CVE-2017-14868
  source_url: https://snyk.io/vuln/SNYK-JAVA-ORGRESTLETLIB-31530
