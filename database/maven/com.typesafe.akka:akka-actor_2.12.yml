---
- id: snykio:maven:com.typesafe.akka:akka-actor_2.12:2017-02-09
  title: Arbitrary Code Execution
  description: |
    [`com.typesafe.akka:akka-actor_2.12`][1] is message-driven application
    builder on the JVM.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. An attacker that can connect to an `ActorSystem` exposed via
    Akka Remote over TCP can gain remote code execution capabilities in the
    context of the JVM process that runs the ActorSystem if:

    * JavaSerializer is enabled (default in Akka 2.4.x)
      * and TLS is disabled or TLS is enabled with
        akka.remote.netty.ssl.security.require-mutual-authentication = false
        (which is still the default in Akka 2.4.x)
      * or if TLS is enabled with mutual authentication and the
        authentication keys of a host that is allowed to connect have been
        compromised, an attacker gained access to a valid certificate (e.g.
        by compromising a node with certificates issued by the same internal
        PKI tree to get access of the certificate)

    * regardless of whether untrusted mode is enabled or not

    Java deserialization is [known to be vulnerable][2] to attacks when
    attacker can provide arbitrary types.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22akka-actor_2.12%22
    [2]: http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
    \n[`com.typesafe.akka:akka-actor_2.12`][1] is message-driven application
    builder on the JVM.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. An attacker that can connect to an `ActorSystem` exposed via
    Akka Remote over TCP can gain remote code execution capabilities in the
    context of the JVM process that runs the ActorSystem if:

    * JavaSerializer is enabled (default in Akka 2.4.x)
      * and TLS is disabled or TLS is enabled with
        akka.remote.netty.ssl.security.require-mutual-authentication = false
        (which is still the default in Akka 2.4.x)
      * or if TLS is enabled with mutual authentication and the
        authentication keys of a host that is allowed to connect have been
        compromised, an attacker gained access to a valid certificate (e.g.
        by compromising a node with certificates issued by the same internal
        PKI tree to get access of the certificate)

    * regardless of whether untrusted mode is enabled or not

    Java deserialization is [known to be vulnerable][2] to attacks when
    attacker can provide arbitrary types.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22akka-actor_2.12%22
    [2]: http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
    \n[`com.typesafe.akka:akka-actor_2.12`][1] is message-driven application
    builder on the JVM.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. An attacker that can connect to an `ActorSystem` exposed via
    Akka Remote over TCP can gain remote code execution capabilities in the
    context of the JVM process that runs the ActorSystem if:

    * JavaSerializer is enabled (default in Akka 2.4.x)
      * and TLS is disabled or TLS is enabled with
        akka.remote.netty.ssl.security.require-mutual-authentication = false
        (which is still the default in Akka 2.4.x)
      * or if TLS is enabled with mutual authentication and the
        authentication keys of a host that is allowed to connect have been
        compromised, an attacker gained access to a valid certificate (e.g.
        by compromising a node with certificates issued by the same internal
        PKI tree to get access of the certificate)

    * regardless of whether untrusted mode is enabled or not

    Java deserialization is [known to be vulnerable][2] to attacks when
    attacker can provide arbitrary types.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22akka-actor_2.12%22
    [2]: http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
    \n[`com.typesafe.akka:akka-actor_2.12`][1] is message-driven application
    builder on the JVM.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. An attacker that can connect to an `ActorSystem` exposed via
    Akka Remote over TCP can gain remote code execution capabilities in the
    context of the JVM process that runs the ActorSystem if:

    * JavaSerializer is enabled (default in Akka 2.4.x)
      * and TLS is disabled or TLS is enabled with
        akka.remote.netty.ssl.security.require-mutual-authentication = false
        (which is still the default in Akka 2.4.x)
      * or if TLS is enabled with mutual authentication and the
        authentication keys of a host that is allowed to connect have been
        compromised, an attacker gained access to a valid certificate (e.g.
        by compromising a node with certificates issued by the same internal
        PKI tree to get access of the certificate)

    * regardless of whether untrusted mode is enabled or not

    Java deserialization is [known to be vulnerable][2] to attacks when
    attacker can provide arbitrary types.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22akka-actor_2.12%22
    [2]: http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
    \n[`com.typesafe.akka:akka-actor_2.12`][1] is message-driven application
    builder on the JVM.

    Affected versions of the package are vulnerable to Arbitrary Code
    Execution. An attacker that can connect to an `ActorSystem` exposed via
    Akka Remote over TCP can gain remote code execution capabilities in the
    context of the JVM process that runs the ActorSystem if:

    * JavaSerializer is enabled (default in Akka 2.4.x)
      * and TLS is disabled or TLS is enabled with
        akka.remote.netty.ssl.security.require-mutual-authentication = false
        (which is still the default in Akka 2.4.x)
      * or if TLS is enabled with mutual authentication and the
        authentication keys of a host that is allowed to connect have been
        compromised, an attacker gained access to a valid certificate (e.g.
        by compromising a node with certificates issued by the same internal
        PKI tree to get access of the certificate)

    * regardless of whether untrusted mode is enabled or not

    Java deserialization is [known to be vulnerable][2] to attacks when
    attacker can provide arbitrary types.



    [1]: http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22akka-actor_2.12%22
    [2]: http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
  affected_package: com.typesafe.akka:akka-actor_2.12
  vulnerable_versions:
  - "< 2.4.17"
  - ">= 2.5-alpha < 2.5-M2"
  severity: high
  package_manager: maven
  cve:
  - CVE-2017-1000034
  cwe:
  - CWE-94
  credit:
  - Alvaro Munoz
  - Adrian Bravo
  references:
  - https://github.com/akka/akka/blob/bfdde013e1174914cdb4aa27d33f8797a58973dd/akka-docs/src/main/paradox/scala/security/2017-02-10-java-serialization.md
  - http://doc.akka.io/docs/akka/2.4/security/2017-02-10-java-serialization.html
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000034
  source_url: https://snyk.io/vuln/SNYK-JAVA-COMTYPESAFEAKKA-31453
