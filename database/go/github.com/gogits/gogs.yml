---
- id: snykio:go:github.com/gogits/gogs:CVE-2014-8681
  title: SQL Injection
  description: |
    Affected version of [`github.com/gogits/gogs`][1] are vulnerable to SQL
    Injection. SQL injection vulnerability in the GetIssues function in
    models/issue.go in Gogs (aka Go Git Service) 0.3.1-9 through 0.5.6.x
    before 0.5.6.1025 Beta allows remote attackers to execute arbitrary SQL
    commands via the label parameter to user/repos/issues.



    [1]: https://github.com/gogits/gogs
  affected_package: github.com/gogits/gogs
  vulnerable_versions:
  - 0.5.8
  severity: high
  package_manager: go
  cve:
  - CVE-2014-8681
  cwe:
  - CWE-89
  disclosed_date: 2014-10-25
  created_date: 2014-10-25
  last_modified_date: 2014-10-25
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-8681
  - https://github.com/gogits/gogs/commit/83283bca4cb4e0f4ec48a28af680f0d88db3d2c8
  - https://github.com/gogits/gogs/releases/tag/v0.5.8
  - http://packetstormsecurity.com/files/129116/Gogs-Label-Search-Blind-SQL-Injection.html
  - http://seclists.org/fulldisclosure/2014/Nov/31
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGITSGOGS-50005
- id: snykio:go:github.com/gogits/gogs:CVE-2014-8682
  title: SQL Injection
  description: |
    Affected version of [`github.com/gogits/gogs`][1] are vulnerable to SQL
    Injection. Multiple SQL injection vulnerabilities in Gogs (aka Go Git
    Service) 0.3.1-9 through 0.5.x before 0.5.6.1105 Beta allow remote
    attackers to execute arbitrary SQL commands via the q parameter to (1)
    api/v1/repos/search, which is not properly handled in models/repo.go, or
    (2) api/v1/users/search, which is not properly handled in
    models/user.go.



    [1]: https://github.com/gogits/gogs
  affected_package: github.com/gogits/gogs
  vulnerable_versions:
  - "<0.5.8"
  severity: high
  package_manager: go
  cve:
  - CVE-2014-8682
  cwe:
  - CWE-89
  disclosed_date: 2014-11-05
  created_date: 2014-11-05
  last_modified_date: 2014-11-05
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-8682
  - https://github.com/gogits/gogs/commit/0c5ba4573aecc9eaed669e9431a70a5d9f184b8d
  - https://github.com/gogits/gogs/releases/tag/v0.5.8
  - http://packetstormsecurity.com/files/129116/Gogs-Label-Search-Blind-SQL-Injection.html
  - http://seclists.org/fulldisclosure/2014/Nov/31
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGITSGOGS-50009
- id: snykio:go:github.com/gogits/gogs:CVE-2014-8683
  title: Cross-site Scripting (XSS)
  description: |+
    Affected version of [`github.com/gogits/gogs`][1] are vulnerable to
    Cross-site Scripting (XSS) attacks. Cross-site Scripting (XSS)
    vulnerability in models/issue.go in Gogs (aka Go Git Service) 0.3.1-9
    through 0.5.x before 0.5.8 allows remote attackers to inject arbitrary
    web script or HTML via the text parameter to api/v1/markdown.



    [1]: https://github.com/gogits/gogs
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: github.com/gogits/gogs
  vulnerable_versions:
  - "<0.5.8"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-8683
  cwe:
  - CWE-79
  disclosed_date: 2014-11-14
  created_date: 2014-11-14
  last_modified_date: 2014-11-14
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-8683
  - https://github.com/gogits/gogs/commit/3abc41cccab2486012b46305827433ad6f5deade
  - https://github.com/gogits/gogs/releases/tag/v0.5.8
  - http://packetstormsecurity.com/files/129118/Gogs-Markdown-Renderer-Cross-Site-Scripting.html
  - http://seclists.org/fulldisclosure/2014/Nov/31
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGITSGOGS-50030
