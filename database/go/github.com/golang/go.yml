---
- id: snykio:go:github.com/golang/go:50011
  title: Man-in-the-Middle (MitM)
  description: |
    Affected version of [`github.com/golang/go`][1] are vulnerable to
    Man-in-the-Middle (MitM) attacks. crpyto/tls in Go 1.1 before 1.3.2,
    when SessionTicketsDisabled is enabled, allows man-in-the-middle
    attackers to spoof clients via unspecified vectors.



    [1]: https://github.com/golang/go
  affected_package: github.com/golang/go
  vulnerable_versions:
  - ">=1.1 <1.3.1"
  severity: medium
  package_manager: go
  cve:
  - CVE-2014-7189
  cwe:
  - CWE-264
  disclosed_date: 2012-09-25
  created_date: 2012-09-25
  last_modified_date: 2012-09-25
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2014/09/26/28
  - https://github.com/golang/go/commit/247820ff6bfba6e1b7891f4bfc25511d68761d5d
  - https://groups.google.com/forum/#%21msg/golang-nuts/eeOHNw_shwU/OHALUmroA5kJ
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-7189
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50011
- id: snykio:go:github.com/golang/go:50014
  title: Information Exposure
  description: |
    Affected version of [`github.com/golang/go`][1] are vulnerable to
    Information Exposure. The Int.Exp Montgomery code in the math/big
    library in Go 1.5.x before 1.5.3 mishandles carry propagation and
    produces incorrect output, which makes it easier for attackers to obtain
    private RSA keys via unspecified vectors.



    [1]: https://github.com/golang/go
  affected_package: github.com/golang/go
  vulnerable_versions:
  - ">=1.5 <1.5.3"
  severity: high
  package_manager: go
  cve:
  - CVE-2015-8618
  cwe:
  - CWE-200
  disclosed_date: 2015-12-07
  created_date: 2015-12-07
  last_modified_date: 2015-12-07
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2015/12/21/6
  - http://www.openwall.com/lists/oss-security/2015/12/22/9
  - http://www.openwall.com/lists/oss-security/2016/01/13/7
  - https://github.com/golang/go/commit/0027ed1872cdec08defe3b097c7123eaaf149e30
  - https://github.com/golang/go/issues/13515
  - https://groups.google.com/forum/#%21topic/golang-announce/MEATuOi_ei4
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-8618
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50014
- id: snykio:go:github.com/golang/go:50022
  title: DLL Preloading
  description: |
    Affected version of [`github.com/golang/go`][1] are vulnerable to DLL
    Preloading attacks. On Windows, Go loads system DLLs by name with
    LoadLibrary, making it vulnerable to DLL preloading attacks. Notably, if
    a user launched a Go executable from their Downloads folder and
    malicious DLLs were in their Downloads folder.



    [1]: https://github.com/golang/go
  affected_package: github.com/golang/go
  vulnerable_versions:
  - "<1.5.4"
  - ">=1.6 <1.6.1"
  severity: high
  package_manager: go
  cve:
  - CVE-2016-3958
  cwe:
  - CWE-264
  disclosed_date: 2016-03-25
  created_date: 2016-03-25
  last_modified_date: 2016-03-25
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2016/04/05/2
  - https://github.com/golang/go/compare/4afe4c803ec378d7a0d7fbc38d961df541d72134...16c42047effe28edd5a827bec4b198ffc83f5ec8
  - https://github.com/golang/go/issues/14959
  - https://groups.google.com/forum/#%21topic/golang-announce/9eqIHqaWvck
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3958
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50022
- id: snykio:go:github.com/golang/go:50023
  title: Denial of Service (DoS)
  description: |+
    Affected version of [`github.com/golang/go`][1] are vulnerable to Denial
    Of Service (DoS). The Verify function in crypto/dsa/dsa.go in Go before
    1.5.4 and 1.6.x before 1.6.1 does not properly check parameters passed
    to the big integer library, which might allow remote attackers to cause
    a denial of service (infinite loop) via a crafted public key to a
    program that uses HTTPS client certificates or SSH server libraries.



    [1]: https://github.com/golang/go
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: github.com/golang/go
  vulnerable_versions:
  - "<1.5.4"
  - ">=1.6 <1.6.1"
  severity: medium
  package_manager: go
  cve:
  - CVE-2016-3959
  cwe:
  - CWE-20
  disclosed_date: 2016-04-06
  created_date: 2016-04-06
  last_modified_date: 2016-04-06
  credit:
  - Unknown
  references:
  - http://www.openwall.com/lists/oss-security/2016/04/05/2
  - https://github.com/golang/go/commit/2cfbb875208f4acecfb0b72de5aebe37e8d03a35
  - https://groups.google.com/forum/#%21topic/golang-announce/9eqIHqaWvck
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3959
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50023
- id: snykio:go:github.com/golang/go:50028
  title: HTTP Request Redirection
  description: |
    Affected version of [`github.com/golang/go`][1] are vulnerable to HTTP
    Request Redirection. The net/http package in Go through 1.6 does not
    attempt to address RFC 3875 section 4.1.18 namespace conflicts and
    therefore does not protect CGI applications from the presence of
    untrusted client data in the HTTP\_PROXY environment variable, which
    might allow remote attackers to redirect a CGI application\'s outbound
    HTTP traffic to an arbitrary proxy server via a crafted Proxy header in
    an HTTP request, aka an \"httpoxy\" issue.



    [1]: https://github.com/golang/go
  affected_package: github.com/golang/go
  vulnerable_versions:
  - "<1.6.3"
  severity: high
  package_manager: go
  cve:
  - CVE-2016-5386
  cwe:
  - CWE-284
  disclosed_date: 2016-07-18
  created_date: 2016-07-18
  last_modified_date: 2016-07-18
  credit:
  - Scott Geary
  references:
  - http://rhn.redhat.com/errata/RHSA-2016-1538.html
  - https://github.com/golang/go/commit/b97df54c31d6c4cc2a28a3c83725366d52329223
  - https://httpoxy.org/
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5386
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50028
- id: snykio:go:github.com/golang/go:50029
  title: Elliptic Curve Key Disclosure
  description: |
    Affected version of [`github.com/golang/go`][1] are vulnerable to
    Elliptic Curve Key Disclosure. A bug in the standard library ScalarMult
    implementation of curve P-256 for amd64 architectures in Go before 1.7.6
    and 1.8.x before 1.8.2 causes incorrect results to be generated for
    specific input points. An adaptive attack can be mounted to
    progressively extract the scalar input to ScalarMult by submitting
    crafted points and observing failures to the derive correct output. This
    leads to a full key recovery attack against static ECDH, as used in
    popular JWT libraries.



    [1]: https://github.com/golang/go
  affected_package: github.com/golang/go
  vulnerable_versions:
  - "<1.7.5"
  - ">=1.8 <1.8.2"
  severity: medium
  package_manager: go
  cve:
  - CVE-2017-8932
  cwe:
  - CWE-200
  disclosed_date: 2017-04-20
  created_date: 2017-04-20
  last_modified_date: 2017-04-20
  credit:
  - Unknown
  references:
  - https://github.com/golang/go/commit/9294fa2749ffee7edbbb817a0ef9fe633136fa9c
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-8932
  source_url: https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGGO-50029
