---
- id: snykio:nuget:keystone:CVE-2017-15878
  title: Cross-site Scripting (XSS)
  description: |
    [`keystone`][1] is an web Application Framework and Admin GUI / Content
    Management System built on Express.js and Mongoose.

    Affected versions of the package are vulnerable to Cross-site Scripting
    (XSS). A cross-site scripting (XSS) vulnerability exists in
    fields/types/markdown/MarkdownType.js in KeystoneJS before 4.0.0-beta.7
    via the Contact Us feature.



    [1]: https://www.npmjs.com/package/keystone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

    You can read more about `Cross-site Scripting (XSS)` on our [blog][1].



    [1]: https://snyk.io/blog/marked-xss-vulnerability/
  affected_package: keystone
  vulnerable_versions:
  - "< 4.0.0-beta.7"
  severity: high
  package_manager: nuget
  cve:
  - CVE-2017-15878
  cwe:
  - CWE-74
  disclosed_date: 2017-10-31
  created_date: 2017-10-31
  last_modified_date: 2017-10-31
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-15878
  - https://github.com/keystonejs/keystone/pull/4478
  - https://github.com/keystonejs/keystone/issues/4437
  - https://github.com/keystonejs/keystone/commit/f08baa4fb4084b7ec9f356d313dcfd6d7d7d0f8b
  source_url: https://snyk.io/vuln/SNYK-DOTNET-KEYSTONE-60179
- id: snykio:nuget:keystone:CVE-2017-15879
  title: CSV Injection
  description: |
    [`keystone`][1] is Web Application Framework and Admin GUI / Content
    Management System built on Express.js and Mongoose. Affected versions of
    the package are vulnerable to CSV Injection.



    [1]: https://www.npmjs.com/package/keystone
  affected_package: keystone
  vulnerable_versions:
  - "< 4.0.0-beta.7"
  severity: medium
  package_manager: nuget
  cve:
  - CVE-2017-15879
  cwe:
  - CWE-79
  disclosed_date: 2017-10-31
  created_date: 2017-10-31
  last_modified_date: 2017-10-31
  credit:
  - Sandeep Kamble
  references:
  - https://github.com/keystonejs/keystone/pull/4478
  - https://github.com/keystonejs/keystone/issues/4437
  - https://github.com/keystonejs/keystone/commit/1b791d55839ebf434e104cc9936ccb8c29019231
  source_url: https://snyk.io/vuln/SNYK-DOTNET-KEYSTONE-60178
