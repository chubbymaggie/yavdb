---
- id: rubyadvisory:rubygems:twitter-bootstrap-rails:OSVDB-109206
  title: Reflective XSS Vulnerability in twitter-bootstrap-rails
  description: "The twitter-bootstrap-rails Gem for Rails contains a flaw that enables
    a \nreflected cross-site scripting (XSS) attack. This flaw exists because the\nbootstrap_flash
    helper method does not validate input when handling flash \nmessages before returning
    it to users. This may allow a context-dependent\nattacker to create a specially
    crafted request that would execute arbitrary\nscript code in a user's browser
    session within the trust relationship between\ntheir browser and the server.\n"
  affected_package: twitter-bootstrap-rails
  patched_versions:
  - ">= 3.2.0"
  package_manager: rubygems
  cve:
  - CVE-2014-4920
  osvdb: 109206
  disclosed_date: 2014-03-25
  created_date: 2014-03-25
  last_modified_date: 2014-03-25
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://nvisium.com/blog/2014/03/28/reflected-xss-vulnerability-in-twitter
- id: snykio:rubygems:twitter-bootstrap-rails:20153
  title: Cross-site Scripting (XSS)
  description: |+
    [`twitter-bootstrap-rails`][1] is a gem that integrates Bootstrap CSS
    toolkit for Rails.

    Affected versions of this gem contain a Cross-site Scripting (XSS)
    vulnerability. This is due to a `bootstrap_flash` helper method that
    does not validate input before returning it to users. This may allow an
    attacker to inject and execute scripts in a user\'s browser.



    [1]: https://rubygems.org/gems/twitter-bootstrap-rails
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: twitter-bootstrap-rails
  vulnerable_versions:
  - "< 3.2.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2014-4920
  cwe:
  - CWE-79
  disclosed_date: 2014-03-24
  created_date: 2014-03-24
  last_modified_date: 2014-03-24
  credit:
  - John Poulin
  - Mike McCabe
  references:
  - https://github.com/seyhunak/twitter-bootstrap-rails/commit/663760e67b80ee25adc293bf5f03debae28b5af9
  - https://nvisium.com/blog/2014/03/28/reflected-xss-vulnerability-in-twitter/
  source_url: https://snyk.io/vuln/SNYK-RUBY-TWITTERBOOTSTRAPRAILS-20153
