---
- id: rubyadvisory:rubygems:features:CVE-2013-4318
  title: Features Gem for Ruby /tmp/out.html Local XSS
  description: Features Gem for Ruby contains a flaw that allows a local cross-site
    scripting (XSS) attack. This flaw exists because the application does not validate
    certain input upon submission to /tmp/out.html. This may allow an attacker to
    create a specially crafted request that would execute arbitrary script code in
    a user's browser within the trust relationship between their browser and the server.
  affected_package: features
  vulnerable_versions:
  - "*"
  package_manager: rubygems
  cve: CVE-2013-4318
  osvdb: 96975
  disclosed_date: 2013-09-01
  created_date: 2013-09-01
  last_modified_date: 2013-09-01
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/96975
- id: snykio:rubygems:features:CVE-2013-4318
  title: Cross-site Scripting (XSS)
  description: |+
    [`Features`][1] is a plaintext user-stories parser supporting native
    programming languages.

    Affected versions of this gem are vulnerable to a local cross-site
    scripting (XSS) attack due to no validation on certain inputs upon
    submission to `/tmp/out.html`. This may allow an attacker to create a
    specially crafted request that would execute arbitrary script code in a
    user\'s browser within the trust relationship between their browser and
    the server.



    [1]: https://rubygems.org/gems/features
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: features
  vulnerable_versions:
  - "*"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4318
  cwe:
  - CWE-79
  disclosed_date: 2013-08-31
  created_date: 2013-08-31
  last_modified_date: 2013-08-31
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/CVE-2013-4318
  source_url: https://snyk.io/vuln/SNYK-RUBY-FEATURES-20107
