---
- id: rubyadvisory:rubygems:i18n:CVE-2013-4492
  title: i18n missing translation error message XSS
  description: |
    The HTML exception message raised by I18n::MissingTranslation fails
    to escape the keys.
  affected_package: i18n
  patched_versions:
  - ">= 0.6.6"
  - "~> 0.5.1"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4492
  osvdb: 100528
  cvss_v2_score: 4.3
  disclosed_date: 2013-12-03
  created_date: 2013-12-03
  last_modified_date: 2013-12-03
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://groups.google.com/forum/#!topic/ruby-security-ann/pLrh6DUw998
- id: snykio:rubygems:i18n:CVE-2013-4492
  title: Cross-site Scripting (XSS)
  description: |+
    [`i18n`][1] is a Ruby gem that provides internationalization support.

    Affected versions of this gem contain a vulnerability in `exceptions.rb`
    which allows remote attackers to inject scripts via the
    `I18n::MissingTranslation` call, which can contain user input which
    fails to escape the keys.



    [1]: https://rubygems.org/gems/i18n
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: i18n
  vulnerable_versions:
  - "< 0.5.1"
  - "< 0.6.6  >= 0.6"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-4492
  cwe:
  - CWE-79
  disclosed_date: 2013-12-02
  created_date: 2013-12-02
  last_modified_date: 2013-12-02
  credit:
  - Peter McLarnan
  references:
  - http://lists.opensuse.org/opensuse-updates/2013-12/msg00093.html
  - http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/
  - http://www.debian.org/security/2013/dsa-2830
  - https://groups.google.com/forum/#!topic/ruby-security-ann/pLrh6DUw998
  source_url: https://snyk.io/vuln/SNYK-RUBY-I18N-20124
- id: snykio:rubygems:i18n:CVE-2014-10077
  title: Denial of Service (DoS)
  description: |+
    [i18n][1] is a Ruby Internationalization and localization solution.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS) attacks via the `Hash#slice()` Function. An attaker may cause the
    program to crash by calling a hash when `:some_key` is in `keep_keys`
    but not in the hash.



    [1]: https://rubygems.org/gems/i18n
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: i18n
  vulnerable_versions:
  - "< 0.8.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2014-10077
  cwe:
  - CWE-400
  disclosed_date: 2018-11-06
  created_date: 2018-11-12
  last_modified_date: 2018-11-12
  credit:
  - Unknown
  references:
  - https://github.com/svenfuchs/i18n/commit/9c8b24031abe12d9024e69eccda76ea8061976ba
  - https://github.com/svenfuchs/i18n/pull/289
  source_url: https://snyk.io/vuln/SNYK-RUBY-I18N-72582
