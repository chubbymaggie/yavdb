---
- id: rubyadvisory:rubygems:minitar:CVE-2016-10173
  title: Minitar Directory Traversal Vulnerability
  description: |
    Minitar allows attackers to overwrite arbitrary files during archive
    extraction via a .. (dot dot) in an extracted filename. Analogous
    vulnerabilities for unzip and tar:
    https://www.cvedetails.com/cve/CVE-2001-1268/ and
    http://www.cvedetails.com/cve/CVE-2001-1267/

    Credit: ecneladis
  affected_package: minitar
  patched_versions:
  - ">= 0.6.0"
  package_manager: rubygems
  cve:
  - CVE-2016-10173
  disclosed_date: 2016-08-22
  created_date: 2016-08-22
  last_modified_date: 2016-08-22
  credit:
  - Rubysec
  references:
  - https://github.com/halostatue/minitar/commit/e25205ecbb6277ae8a3df1e6a306d7ed4458b6e4
  - https://github.com/halostatue/minitar/issues/16
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/halostatue/minitar/issues/16
- id: snykio:rubygems:minitar:20335
  title: Arbitrary File Write via Archive Extraction (Zip Slip)
  description: "[`minitar`][1] is a pure-Ruby library that provides the ability to
    deal\nwith POSIX tar(1) archive files.\n\nAffected versions of the package are
    vulnerable to Arbitrary File Write\nvia Archive Extraction (AKA \\\"Zip Slip\\\").\n\nIt
    is exploited using a specially crafted zip archive, that holds path\ntraversal
    filenames. When exploited, a filename in a malicious archive\nis concatenated
    to the target extraction directory, which results in the\nfinal path ending up
    outside of the target folder. For instance, a zip\nmay hold a file with a \\\"../../file.exe\\\"
    location and thus break out of\nthe target folder. If an executable or a configuration
    file is\noverwritten with a file containing malicious code, the problem can turn\ninto
    an arbitrary code execution issue quite easily.\n\nThe following is an example
    of a zip archive with one benign file and\none malicious file. Extracting the
    malicous file will result in\ntraversing out of the target folder, ending up in
    `/root/.ssh/`\noverwriting the `authorized_keys` file:\n\n    \n    +2018-04-15
    22:04:29 ..... 19 19 good.txt\n    \n    +2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\nRelated
    to [`rubyzip`][2] and [`archive-tar-minitar`][3].\n\n\n\n[1]: https://rubygems.org/gems/minitar\n[2]:
    https://snyk.io/vuln/SNYK-RUBY-RUBYZIP-20336\n[3]: https://snyk.io/vuln/SNYK-RUBY-ARCHIVETARMINITAR-20337\n"
  affected_package: minitar
  vulnerable_versions:
  - "<0.6"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2016-10173
  cwe:
  - CWE-29
  disclosed_date: 2016-08-21
  created_date: 2017-03-06
  last_modified_date: 2017-03-06
  credit:
  - ecneladis
  references:
  - https://github.com/halostatue/minitar/commit/c31ad52ab502859392cf218eb1f947ac78d2a3fd
  - https://github.com/halostatue/minitar/issues/16
  - https://github.com/snyk/zip-slip-vulnerability
  - https://snyk.io/research/zip-slip-vulnerability
  source_url: https://snyk.io/vuln/SNYK-RUBY-MINITAR-20335
