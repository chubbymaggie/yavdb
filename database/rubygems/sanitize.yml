---
- id: rubyadvisory:rubygems:sanitize:CVE-2018-3740
  title: HTML injection/XSS in Sanitize
  description: |
    When Sanitize gem is used in combination with libxml2 >= 2.9.2,
    a specially crafted HTML fragment can cause libxml2 to generate
    improperly escaped output, allowing non-whitelisted attributes to be
    used on whitelisted elements.

    This can allow HTML and JavaScript injection, which could result in XSS
    if Sanitize's output is served to browsers.
  affected_package: sanitize
  unaffected_versions:
  - "< 1.1.0"
  patched_versions:
  - ">= 4.6.3"
  - "~> 2.1.1"
  package_manager: rubygems
  cve: CVE-2018-3740
  disclosed_date: 2018-03-19
  created_date: 2018-03-19
  last_modified_date: 2018-03-19
  credit:
  - Rubysec
  references:
  - https://github.com/rgrove/sanitize/commit/01629a162e448a83d901456d0ba8b65f3b03d46e
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/rgrove/sanitize/issues/176
- id: snykio:rubygems:sanitize:CVE-2018-3740
  title: HTML Injection
  description: |
    [sanitize][1] is a whitelist-based HTML and CSS sanitizer.

    When used in combination with libxml2 versions &gt;= 2.9.2, a specially
    crafted HTML fragment can cause libxml2 to generate improperly escaped
    output, allowing non-whitelisted attributes to be used on whitelisted
    elements. This can allow HTML and JavaScript injection, which could
    result in XSS if Sanitize\'s output is served to browsers.



    [1]: https://rubygems.org/gems/sanitize
  affected_package: sanitize
  vulnerable_versions:
  - "<4.6.3"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2018-3740
  cwe:
  - CWE-74
  disclosed_date: 2018-03-19
  created_date: 2018-03-21
  last_modified_date: 2018-03-21
  credit:
  - Shopify Application Security Team
  references:
  - https://github.com/rgrove/sanitize/issues/176
  source_url: https://snyk.io/vuln/SNYK-RUBY-SANITIZE-22024
