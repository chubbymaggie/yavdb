---
- id: rubyadvisory:rubygems:spree:CVE-
  title: |
    Spree RABL templates rendering allows Arbitrary Code Execution and File
    Disclosure
  description: |
    Spree contains a flaw where the rendering of arbitrary RABL templates allows
    for execution arbitrary files on the host system, as well as disclosing the
    existence of files on the system.
  affected_package: spree
  patched_versions:
  - "~> 2.2.12"
  - "~> 2.3.11"
  - "~> 2.4.8"
  - ">= 3.0.2"
  package_manager: rubygems
  cve:
  - CVE-
  osvdb: 125701
  disclosed_date: 2015-07-20
  created_date: 2015-07-20
  last_modified_date: 2015-07-20
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-updates-2015-7-20
- id: rubyadvisory:rubygems:spree:CVE-2008-7310
  title: 'Spree Hash Restriction Weakness URL Parsing Order State Value Manipulation

'
  description: |
    Spree contains a hash restriction weakness that occurs when parsing a
    modified URL. This may allow an attacker to manipulate order state values.
  affected_package: spree
  patched_versions:
  - ">= 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7310
  osvdb: 81505
  cvss_v2_score: 5.0
  disclosed_date: 2008-09-22
  created_date: 2008-09-22
  last_modified_date: 2008-09-22
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-vulnerability-mass-assignment
- id: rubyadvisory:rubygems:spree:CVE-2008-7311
  title: |
    Spree Hardcoded config.action_controller_session Hash Value Cryptographic
    Protection Weakness
  description: |
    Spree contains a hardcoded flaw related to the
    config.action_controller_session hash value. This may allow an attacker to
    more easily bypass cryptographic protection.
  affected_package: spree
  patched_versions:
  - ">= 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7311
  osvdb: 81506
  cvss_v2_score: 5.0
  disclosed_date: 2008-08-12
  created_date: 2008-08-12
  last_modified_date: 2008-08-12
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/security-vulernability-session-cookie-store
- id: rubyadvisory:rubygems:spree:CVE-2010-3978
  title: |
    Spree Multiple Script JSON Request Validation Weakness Remote Information
    Disclosure
  description: |
    Spree contains a flaw that may lead to an unauthorized information
    disclosure. The issue is triggered when the application exchanges data using
    the JSON service without validating requests, which will disclose sensitive
    user and order information to a context-dependent attacker when a logged-in
    user visits a crafted website.
  affected_package: spree
  patched_versions:
  - "~> 0.11.2"
  - ">= 0.30.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2010-3978
  osvdb: 69098
  cvss_v2_score: 5.0
  disclosed_date: 2010-11-02
  created_date: 2010-11-02
  last_modified_date: 2010-11-02
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/json-hijacking-vulnerability
- id: rubyadvisory:rubygems:spree:CVE-2013-1656
  title: |
    Spree promotions_controller.rb calculator_type Parameter Arbitrary Ruby
    Object Instantiation Command Execution
  description: |
    Spree contains a flaw that is triggered when handling input passed via the
    'calculator_type' parameter to promotions_controller.rb. This may allow a
    remote authenticated attacker to instantiate arbitrary Ruby objects and
    potentially execute arbitrary commands.
  affected_package: spree
  patched_versions:
  - ">= 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  osvdb: 91218
  cvss_v2_score: 4.3
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: rubyadvisory:rubygems:spree:CVE-2013-2506
  title: |
    Spree app/models/spree/user.rb Mass Role Assignment Remote Privilege
    Escalation
  description: |
    Spree contains a flaw that leads to unauthorized privileges being gained. The
    issue is triggered as certain input related to mass role assignment in
    app/models/spree/user.rb is not properly verified before being used to update
    a user. This may allow a remote attacker to assign arbitrary roles and gain
    elevated administrative privileges.
  affected_package: spree
  patched_versions:
  - "~> 1.1.6"
  - "~> 1.2.0"
  - ">= 1.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-2506
  osvdb: 90865
  cvss_v2_score: 4.0
  disclosed_date: 2013-02-21
  created_date: 2013-02-21
  last_modified_date: 2013-02-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
- id: snykio:rubygems:spree:20014
  title: Arbitrary File Disclosure
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Vulnerable versions of the gem allow an attacker to request a specially
    crafted URL and expose arbitrary files on the server.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.50.1"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2011-04-18
  created_date: 2011-04-18
  last_modified_date: 2011-04-18
  credit:
  - John Hartzler
  references:
  - http://rubysec.com/advisories/OSVDB-73751
  - https://spreecommerce.com/blog/security-fixes
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20014
- id: snykio:rubygems:spree:20019
  title: Arbitrary Command Execution
  description: |+
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.



    [1]: https://rubygems.org/gems/spree
    \nThe `ProductScope` class fails to properly sanitize user-supplied input
    via the `search[send][]` parameter resulting in arbitrary command
    execution. With a specially crafted request, a remote attacker can
    potentially cause arbitrary command execution.

  affected_package: spree
  vulnerable_versions:
  - "< 0.60.2"
  severity: high
  package_manager: rubygems
  cwe:
  - CWE-77
  disclosed_date: 2011-10-04
  created_date: 2011-10-04
  last_modified_date: 2011-10-04
  credit:
  - joernchen
  references:
  - http://rubysec.com/advisories/OSVDB-76011
  - https://spreecommerce.com/blog/remote-command-product-group
  - https://github.com/spree/spree/commit/440d7c87a2ded2736142f768f7a5c9f47e35890b
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20019
- id: snykio:rubygems:spree:20033
  title: Cross-site Scripting (XSS)
  description: |+
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree has a flaw in its analytics dashboard where keywords are not
    escaped, leading to potential XSS.



    [1]: https://rubygems.org/gems/spree
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: spree
  vulnerable_versions:
  - "< 1.1.2  >= 1.1"
  - "< 1.0.5  >= 0.71"
  - "< 0.70.6  >= 0.12"
  - "< 0.11.4"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-79
  disclosed_date: 2012-07-01
  created_date: 2012-07-01
  last_modified_date: 2012-07-01
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/OSVDB-125713
  - https://spreecommerce.com/blog/security-issue-all-versions
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20033
- id: snykio:rubygems:spree:20034
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.
    Product Scopes could allow for unauthenticated remote command execution.
    This was corrected by removing conditions\_any scope and use ARel query
    building instead.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 1.1.2  >= 1.1"
  - "< 1.0.5  >= 0.71"
  - "< 0.70.6  >= 0.12"
  - "< 0.11.4"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-77
  disclosed_date: 2012-07-01
  created_date: 2012-07-01
  last_modified_date: 2012-07-01
  credit:
  - joernchen
  references:
  - http://rubysec.com/advisories/OSVDB-125712
  - https://spreecommerce.com/blog/security-issue-all-versions
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20034
- id: snykio:rubygems:spree:20235
  title: Arbitrary Code Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw where the rendering of arbitrary RABL templates
    allows for execution arbitrary files on the host system, as well as
    disclosing the existence of files on the system.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 3.0.2  >= 2.5"
  - "< 2.4.8  >= 2.4"
  - "< 2.3.11  >= 2.3"
  - "< 2.2.12"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-07-19
  created_date: 2015-07-19
  last_modified_date: 2015-07-19
  credit:
  - John Hawthorn
  references:
  - http://rubysec.com/advisories/OSVDB-125701
  - https://spreecommerce.com/blog/security-updates-2015-7-20
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20235
- id: snykio:rubygems:spree:20237
  title: Arbitrary Code Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw where the rendering of arbitrary RABL templates
    allows for execution arbitrary files on the host system, as well as
    disclosing the existence of files on the system. This is a different
    issue than [OSVDB-125701][2].



    [1]: https://rubygems.org/gems/spree
    [2]: https://snyk.io/vuln/SNYK-RUBY-SPREE-20235
  affected_package: spree
  vulnerable_versions:
  - "< 3.0.3  >= 2.5"
  - "< 2.4.9  >= 2.4"
  - "< 2.3.12  >= 2.3"
  - "< 2.2.13"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-07-27
  created_date: 2015-07-27
  last_modified_date: 2015-07-27
  credit:
  - John Hawthorn
  references:
  - http://rubysec.com/advisories/OSVDB-125699
  - https://spreecommerce.com/blog/security-updates-2015-7-28
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20237
- id: snykio:rubygems:spree:20360
  title: Cross Site Request Forgery
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw in the API as HTTP requests do not require
    multiple steps, explicit confirmation, or a unique token when performing
    certain sensitive actions. By tricking a user into following a specially
    crafted link, a context-dependent attacker can perform a Cross-site
    Request Forgery (CSRF / XSRF) attack causing the victim to disclose
    potentially sensitive information to attackers.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 3.0.0.rc4  >= 2.5"
  - "< 2.4.5  >= 2.4"
  - "< 2.3.8  >= 2.3"
  - "< 2.2.10"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-200
  disclosed_date: 2015-03-04
  created_date: 2015-03-04
  last_modified_date: 2015-03-04
  credit:
  - Egor Homakov
  references:
  - http://rubysec.com/advisories/OSVDB-119205
  - https://spreecommerce.com/blog/security-updates-2015-3-3
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20360
- id: snykio:rubygems:spree:CVE-2008-7310
  title: Improperly Controlled Model Modification
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a hash restriction weakness that occurs when parsing a
    modified URL. This may allow an attacker to manipulate order state
    values. The `Order` model was not using `attr_accessible` to protect its
    attributes from a potential mass assignment exploit.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7310
  cwe:
  - CWE-915
  disclosed_date: 2008-09-21
  created_date: 2008-09-21
  last_modified_date: 2008-09-21
  credit:
  - Eric Chapweske
  references:
  - http://rubysec.com/advisories/CVE-2008-7310
  - https://spreecommerce.com/blog/security-vulnerability-mass-assignment
  - http://lesseverything.com/blog/use-attr_protected-or-we-will-hack-you/
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20005
- id: snykio:rubygems:spree:CVE-2008-7311
  title: Cryptographic Protection Bypass
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.
    Spree contains a hardcoded flaw related to the
    `config.action_controller_session` hash value. This may allow an
    attacker to more easily bypass cryptographic protection.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.3.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2008-7311
  cwe:
  - CWE-284
  disclosed_date: 2008-08-11
  created_date: 2008-08-11
  last_modified_date: 2008-08-11
  credit:
  - Unknown
  references:
  - http://rubysec.com/advisories/CVE-2008-7311
  - https://spreecommerce.com/blog/security-vulernability-session-cookie-store
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20003
- id: snykio:rubygems:spree:CVE-2010-3978
  title: Information Disclosure
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that may lead to an unauthorized information
    disclosure. The issue is triggered when the application exchanges data
    using the JSON service without validating requests, which will disclose
    sensitive user and order information to a context-dependent attacker
    when a logged-in user visits a crafted website.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 0.30.0  >= 0.12"
  - "< 0.11.2"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2010-3978
  cwe:
  - CWE-200
  disclosed_date: 2010-11-01
  created_date: 2010-11-01
  last_modified_date: 2010-11-01
  credit:
  - Gabriel Quadros
  references:
  - http://rubysec.com/advisories/CVE-2010-3978
  - https://spreecommerce.com/blog/json-hijacking-vulnerability
  - https://groups.google.com/forum/#!search/CVE-2010-3978/mailing.unix.bugtraq/jG-mO9_x-78/utUoVe-Ujj8J
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20011
- id: snykio:rubygems:spree:CVE-2013-1656
  title: Arbitrary Command Execution
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that is triggered when handling input passed via
    the `promotion_action` parameter to `promotion_actions_controller.rb`.
    This may allow a remote authenticated attacker to instantiate arbitrary
    Ruby objects and potentially execute arbitrary commands.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 2.0.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-1656
  cwe:
  - CWE-77
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/CVE-2013-1656
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20075
- id: snykio:rubygems:spree:CVE-2013-2506
  title: Privilege Escalation
  description: |
    [`Spree`][1] is an open source e-commerce framework for Ruby on Rails.

    Spree contains a flaw that leads to unauthorized privileges being
    gained. The issue is triggered as certain input related to mass role
    assignment in `app/models/spree/user.rb` is not properly verified before
    being used to update a user. This may allow a remote attacker to assign
    arbitrary roles and gain elevated administrative privileges.



    [1]: https://rubygems.org/gems/spree
  affected_package: spree
  vulnerable_versions:
  - "< 1.1.6"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2013-2506
  cwe:
  - CWE-265
  disclosed_date: 2013-02-20
  created_date: 2013-02-20
  last_modified_date: 2013-02-20
  credit:
  - Laurens Nienhaus
  references:
  - http://rubysec.com/advisories/CVE-2013-2506
  - https://spreecommerce.com/blog/multiple-security-vulnerabilities-fixed
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREE-20069
