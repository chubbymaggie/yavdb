---
- id: snykio:rubygems:spree_backend:20475
  title: Json Hijacking
  description: |
    [`spree_backend`][1] is Required dependency for Spree.

    Affected versions of the package are vulnerable to Json Hijacking, due
    to returning a top level array, making the JSON interpreted as valid
    javascript.



    [1]: https://rubygems.org/gems/spree_backend
  affected_package: spree_backend
  vulnerable_versions:
  - "<3.0.7  >=2.2.0"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-642
  disclosed_date: 2016-03-22
  created_date: 2018-01-10
  last_modified_date: 2018-01-10
  credit:
  - John Hawthorn
  references:
  - https://github.com/spree/spree/pull/7107
  - https://github.com/spree/spree/commit/62f67c5e810c2d1cbdec6462718216661c08db43
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREEBACKEND-20475
- id: snykio:rubygems:spree_backend:20476
  title: Cross-site Scripting (XSS)
  description: |
    [`spree_backend`][1] is Required dependency for Spree.

    Affected versions of the package are vulnerable to Cross-site Scripting
    (XSS). An attacker can potentially inject html into the admin by
    registering with a specially crafted email. This could lead to injecting
    javascript into the admin and stealing the admin\'s API key and other
    credentials.



    [1]: https://rubygems.org/gems/spree_backend
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

    You can read more about `Cross-site Scripting (XSS)` on our [blog][1].



    [1]: https://snyk.io/blog/xss-attacks-the-next-wave/
  affected_package: spree_backend
  vulnerable_versions:
  - "<1.0.5  >=1.0.0.pre"
  - ">=1.1.0.beta1 <1.1.3"
  - ">=1.2.0.beta1 <1.2.1"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-79
  disclosed_date: 2016-02-16
  created_date: 2018-01-10
  last_modified_date: 2018-01-10
  credit:
  - John Hawthorn
  references:
  - https://github.com/solidusio/solidus/commit/06458322235df61e7180cf03d3c7c777c0a52afb
  - https://github.com/solidusio/solidus/commit/29706e76a141d5369fecbb907678e3cb2c56083e
  - https://github.com/solidusio/solidus/commit/7285ca3607b8f8d396f54c975491e4c4f5702cb4
  - https://groups.google.com/forum/#!topic/solidus-security/8LGeHi-fXYc
  source_url: https://snyk.io/vuln/SNYK-RUBY-SPREEBACKEND-20476
