---
- id: rubyadvisory:rubygems:sidekiq:CVE-
  title: Sidekiq Gem for Ruby web/views/queue.erb msg.display_class Element XSS
  description: XSS via job arguments display class in Sidekiq::Web
  affected_package: sidekiq
  patched_versions:
  - ">= 3.4.0"
  package_manager: rubygems
  cve:
  - CVE-
  osvdb: 125678
  disclosed_date: 2015-04-21
  created_date: 2015-04-21
  last_modified_date: 2015-04-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/mperham/sidekiq/pull/2309
- id: rubyadvisory:rubygems:sidekiq:OSVDB-125675
  title: Sidekiq Gem for Ruby Multiple Unspecified CSRF
  description: Sidekiq::Web lacks CSRF protection
  affected_package: sidekiq
  patched_versions:
  - ">= 3.4.2"
  package_manager: rubygems
  osvdb: 125675
  disclosed_date: 2015-07-06
  created_date: 2015-07-06
  last_modified_date: 2015-07-06
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/mperham/sidekiq/pull/2422
- id: rubyadvisory:rubygems:sidekiq:OSVDB-125676
  title: |
    Sidekiq Gem for Ruby web/views/queue.erb CurrentMessagesInQueue Element
    Reflected XSS
  description: XSS via queue name in Sidekiq::Web
  affected_package: sidekiq
  patched_versions:
  - ">= 3.4.0"
  package_manager: rubygems
  osvdb: 125676
  disclosed_date: 2015-06-04
  created_date: 2015-06-04
  last_modified_date: 2015-06-04
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/mperham/sidekiq/issues/2330
- id: rubyadvisory:rubygems:sidekiq:OSVDB-125678
  title: Sidekiq Gem for Ruby web/views/queue.erb msg.display_class Element XSS
  description: XSS via job arguments display class in Sidekiq::Web
  affected_package: sidekiq
  patched_versions:
  - ">= 3.4.0"
  package_manager: rubygems
  osvdb: 125678
  disclosed_date: 2015-04-21
  created_date: 2015-04-21
  last_modified_date: 2015-04-21
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/mperham/sidekiq/pull/2309
- id: snykio:rubygems:sidekiq:20216
  title: Cross-site Scripting (XSS)
  description: |+
    [`sidekiq`][1] is a background processing package for Ruby.

    Affected versions contain a vulnerability that allows Cross-site
    Scripting (XSS) using the job arguments display class in `Sidekiq::Web`.



    [1]: https://rubygems.org/gems/sidekiq
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: sidekiq
  vulnerable_versions:
  - "< 3.4.0"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-79
  disclosed_date: 2015-04-20
  created_date: 2015-04-20
  last_modified_date: 2015-04-20
  credit:
  - Nolan Evans
  references:
  - http://rubysec.com/advisories/OSVDB-125678
  - https://github.com/mperham/sidekiq/pull/2309
  source_url: https://snyk.io/vuln/SNYK-RUBY-SIDEKIQ-20216
- id: snykio:rubygems:sidekiq:20221
  title: Cross-site Scripting (XSS)
  description: |+
    [`sidekiq`][1] is a background processing package for Ruby.

    Affected versions contain a vulnerability that allows Cross-site
    Scripting (XSS) using the queue name element in `Sidekiq::Web`.



    [1]: https://rubygems.org/gems/sidekiq
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: sidekiq
  vulnerable_versions:
  - "< 3.4.0"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-79
  disclosed_date: 2015-06-03
  created_date: 2015-06-03
  last_modified_date: 2015-06-03
  credit:
  - KelvinLin
  references:
  - http://rubysec.com/advisories/OSVDB-125676
  - https://github.com/mperham/sidekiq/issues/2330
  source_url: https://snyk.io/vuln/SNYK-RUBY-SIDEKIQ-20221
- id: snykio:rubygems:sidekiq:20233
  title: Cross-site Request Forgery (CSRF)
  description: |
    [`sidekiq`][1] is a background processing package for Ruby.

    Affected versions contain a vulnerability that allows forgery of POST
    requests on certain form elements in the web UI.



    [1]: https://rubygems.org/gems/sidekiq
  affected_package: sidekiq
  vulnerable_versions:
  - "< 3.4.2"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-352
  disclosed_date: 2015-07-05
  created_date: 2015-07-05
  last_modified_date: 2015-07-05
  credit:
  - Egor Homakov
  references:
  - http://rubysec.com/advisories/OSVDB-125675
  - https://github.com/mperham/sidekiq/pull/2422
  source_url: https://snyk.io/vuln/SNYK-RUBY-SIDEKIQ-20233
