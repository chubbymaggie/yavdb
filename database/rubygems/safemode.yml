---
- id: rubyadvisory:rubygems:safemode:2017-04-05
  title: Safemode Gem for Ruby is vulnerable to bypassing safe mode limitations
  description: "Safemode, as used in Foreman, versions 1.3.2 and earlier are vulnerable
    \nto bypassing safe mode limitations via special Ruby syntax. This can\nlead to
    deletion of objects for which the user does not have delete \npermissions or possibly
    to privilege escalation.\n"
  affected_package: safemode
  patched_versions:
  - ">= 1.3.3"
  package_manager: rubygems
  cve:
  - CVE-2017-7540
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  - https://github.com/svenfuchs/safemode/pull/23
  source_url: https://nvd.nist.gov/vuln/detail/CVE-2017-7540
- id: rubyadvisory:rubygems:safemode:2016-04-20
  title: Safemode Gem for Ruby is vulnerable to information disclosure
  description: |
    Safemode is initialised with an optional 'delegate' object.
    If the delegated object is a Rails controller, 'inspect' could
    be called which then exposes all informations about the App,
    including routes, secret tokens, caches and so on.
  affected_package: safemode
  patched_versions:
  - ">= 1.2.4"
  package_manager: rubygems
  cve:
  - CVE-2016-3693
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://seclists.org/oss-sec/2016/q2/119
- id: snykio:rubygems:safemode:2017-07-11
  title: Access Restriction Bypass
  description: |
    [safemode][1] is a library for safe evaluation of Ruby code based on
    RubyParser and Ruby2Ruby.

    Affected versions of this package are vulnerable to bypassing safe mode
    limitations via special Ruby syntax. This can lead to deletion of
    objects for which the user does not have delete permissions or possibly
    to privilege escalation.



    [1]: https://rubygems.org/gems/safemode
    \n[safemode][1] is a library for safe evaluation of Ruby code based on
    RubyParser and Ruby2Ruby.

    Affected versions of this package are vulnerable to bypassing safe mode
    limitations via special Ruby syntax. This can lead to deletion of
    objects for which the user does not have delete permissions or possibly
    to privilege escalation.



    [1]: https://rubygems.org/gems/safemode
    \n[safemode][1] is a library for safe evaluation of Ruby code based on
    RubyParser and Ruby2Ruby.

    Affected versions of this package are vulnerable to bypassing safe mode
    limitations via special Ruby syntax. This can lead to deletion of
    objects for which the user does not have delete permissions or possibly
    to privilege escalation.



    [1]: https://rubygems.org/gems/safemode
  affected_package: safemode
  vulnerable_versions:
  - "< 1.3.3"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-7540
  cwe:
  - CWE-264
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-7540
  - https://github.com/svenfuchs/safemode/pull/23
  - https://github.com/svenfuchs/safemode/commit/a019520e441dab1a277fa9aeb41e9266783e9533
  source_url: https://snyk.io/vuln/SNYK-RUBY-SAFEMODE-22007
- id: snykio:rubygems:safemode:2016-04-19
  title: Information Exposure
  description: |
    [`Safemode`][1] is a library for safe evaluation of Ruby code based on
    RubyParser and Ruby2Ruby. This gem is initialized with an optional
    `delegate` object. If the delegated object is a Rails controller,
    `inspect` could be called which then exposes all informations about the
    App, including routes, secret tokens, caches and so on.



    [1]: https://rubygems.org/gems/safemode
    \n[`Safemode`][1] is a library for safe evaluation of Ruby code based on
    RubyParser and Ruby2Ruby. This gem is initialized with an optional
    `delegate` object. If the delegated object is a Rails controller,
    `inspect` could be called which then exposes all informations about the
    App, including routes, secret tokens, caches and so on.



    [1]: https://rubygems.org/gems/safemode
  affected_package: safemode
  vulnerable_versions:
  - "< 1.2.4"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2016-3693
  cwe:
  - CWE-200
  credit:
  - Ivan Necas
  references:
  - http://rubysec.com/advisories/CVE-2016-3693
  - http://seclists.org/oss-sec/2016/q2/119
  source_url: https://snyk.io/vuln/SNYK-RUBY-SAFEMODE-20266
