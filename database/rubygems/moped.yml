---
- id: rubyadvisory:rubygems:moped:2015-06-04
  title: Data Injection Vulnerability in moped Rubygem
  description: A flaw in the ObjectId validation regular expression can enable attackers
    to inject arbitrary information into a given BSON object.
  affected_package: moped
  patched_versions:
  - "~> 1.5.3"
  - ">= 2.0.5"
  package_manager: rubygems
  cve:
  - CVE-2015-4410
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://sakurity.com/blog/2015/06/04/mongo_ruby_regexp.html
- id: snykio:rubygems:moped:2015-06-03
  title: Content Injection
  description: |
    [`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a BSON Injection (similar to SQL injection)
    and a [Denial of Service (DoS)][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20291
    \n[`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a BSON Injection (similar to SQL injection)
    and a [Denial of Service (DoS)][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20291
    \n[`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a BSON Injection (similar to SQL injection)
    and a [Denial of Service (DoS)][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20291
  affected_package: moped
  vulnerable_versions:
  - "< 2.0.5 &&  >= 1.6 || < 1.5.3"
  severity: low
  package_manager: rubygems
  cve:
  - CVE-2015-4410
  cwe:
  - CWE-74
  credit:
  - Egor Homakov
  references:
  - http://rubysec.com/advisories/CVE-2015-4410
  - http://sakurity.com/blog/2015/06/04/mongo_ruby_regexp.html
  - https://access.redhat.com/security/cve/cve-2015-4410
  - https://bugzilla.redhat.com/show_bug.cgi?id=1229757
  - https://github.com/mongodb/bson-ruby/commit/976da329ff03ecdfca3030eb6efe3c85e6db9999
  source_url: https://snyk.io/vuln/SNYK-RUBY-MOPED-20222
- id: snykio:rubygems:moped:2015-06-03
  title: Denial of Service (DoS)
  description: |+
    [`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a Denial of Service (DoS) attack and a
    [BSON Injection][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20222
    \n[`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a Denial of Service (DoS) attack and a
    [BSON Injection][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20222
    \n[`moped`][1] is a MongoDB driver for Ruby.

    Affected versions of this gem contain a flaw in the `ObjectId`
    validation, which can enable a Denial of Service (DoS) attack and a
    [BSON Injection][2] attack.



    [1]: https://rubygems.org/gems/moped
    [2]: https://snyk.io/vuln/SNYK-RUBY-MOPED-20222
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: moped
  vulnerable_versions:
  - "< 2.0.5 &&  >= 1.6 || < 1.5.3"
  severity: medium
  package_manager: rubygems
  cwe:
  - CWE-400
  credit:
  - Egor Homakov
  references:
  - http://rubysec.com/advisories/CVE-2015-4410
  - http://sakurity.com/blog/2015/06/04/mongo_ruby_regexp.html
  - https://access.redhat.com/security/cve/cve-2015-4410
  - https://bugzilla.redhat.com/show_bug.cgi?id=1229757
  - https://github.com/mongodb/bson-ruby/commit/976da329ff03ecdfca3030eb6efe3c85e6db9999
  source_url: https://snyk.io/vuln/SNYK-RUBY-MOPED-20291
