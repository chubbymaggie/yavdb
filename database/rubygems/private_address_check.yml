---
- id: rubyadvisory:rubygems:private_address_check:CVE-2017-0904
  title: private_address_check Ruby Gem Resolv.getaddresses Server-Side Request Forgery
  description: |
    The private_address_check ruby gem before 0.4.0 is vulnerable to a bypass due to use of Ruby's
    Resolv.getaddresses method, which is OS-dependent and should not be relied upon for security
    measures, such as when used to blacklist private network addresses to prevent server-side
    request forgery.
  affected_package: private_address_check
  patched_versions:
  - ">= 0.4.0"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-0904
  cvss_v2_score: 6.8
  cvss_v3_score: 8.1
  disclosed_date: 2017-11-07
  created_date: 2017-11-07
  last_modified_date: 2017-11-07
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/jtdowney/private_address_check/issues/1
- id: rubyadvisory:rubygems:private_address_check:CVE-2017-0909
  title: private_address_check Ruby Gem Blacklist Bypass privilege escalation
  description: |
    The private_address_check ruby gem before 0.4.1 is vulnerable to a bypass due to an incomplete
    blacklist of common private/local network addresses used to prevent server-side request forgery.
  affected_package: private_address_check
  patched_versions:
  - ">= 0.4.1"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-0909
  cvss_v2_score: 7.5
  cvss_v3_score: 9.8
  disclosed_date: 2017-11-09
  created_date: 2017-11-09
  last_modified_date: 2017-11-09
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/jtdowney/private_address_check/pull/3
- id: rubyadvisory:rubygems:private_address_check:CVE-2018-3759
  title: private_address_check Ruby Gem Time-of-check Time-of-use race condition
  description: |
    private_address_check ruby gem before 0.5.0 is vulnerable to a time-of-check time-of-use (TOCTOU)
    race condition due to the address the socket uses not being checked. DNS entries with a TTL of 0
    can trigger this case where the initial resolution is a public address by the subsequent
    resolution is a private address.
  affected_package: private_address_check
  patched_versions:
  - ">= 0.5.0"
  package_manager: rubygems
  cve:
  - CVE-2018-3759
  disclosed_date: 2018-05-03
  created_date: 2018-05-03
  last_modified_date: 2018-05-03
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: https://github.com/jtdowney/private_address_check/commit/4068228187db87fea7577f7020099399772bb147
- id: snykio:rubygems:private_address_check:CVE-2017-0904
  title: Server-side Request Forgery (SSRF)
  description: |
    [`private_address_check`][1] checks if a IP or hostname would cause a
    request to a private network (RFC 1918).

    Affected versions of the package are vulnerable to Server-side Request
    Forgery (SSRF). The `Resolv::getaddresses` class is OS-dependent,
    therefore by playing around with different IP formats one can return
    blank values. An attacker can abuse this bug in order to bypass the
    exclusion list.



    [1]: https://rubygems.org/gems/private_address_check
  affected_package: private_address_check
  vulnerable_versions:
  - "<0.4.0"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-0904
  cwe:
  - CWE-918
  disclosed_date: 2017-11-06
  created_date: 2017-11-07
  last_modified_date: 2017-11-07
  credit:
  - EdOverflow
  references:
  - https://github.com/jtdowney/private_address_check/issues/1
  - https://github.com/jtdowney/private_address_check/commit/58a0d7fe31de339c0117160567a5b33ad82b46af
  source_url: https://snyk.io/vuln/SNYK-RUBY-PRIVATEADDRESSCHECK-20440
- id: snykio:rubygems:private_address_check:CVE-2017-0909
  title: Server-side Request Forgery (SSRF)
  description: |
    [`private_address_check`][1] checks if a IP or hostname would cause a
    request to a private network (RFC 1918).

    Affected versions of the package are vulnerable to Server-side Request
    Forgery (SSRF). The SSRF filter contained a partial blacklist, and an
    attacker may be able to bypass the filter by supplying an address that
    was not blacklisted.



    [1]: https://rubygems.org/gems/private_address_check
  affected_package: private_address_check
  vulnerable_versions:
  - "<0.4.1"
  severity: high
  package_manager: rubygems
  cve:
  - CVE-2017-0909
  cwe:
  - CWE-918
  disclosed_date: 2017-11-09
  created_date: 2017-11-16
  last_modified_date: 2017-11-16
  credit:
  - EdOverflow
  references:
  - https://github.com/jtdowney/private_address_check/pull/3
  - https://github.com/jtdowney/private_address_check/commit/516ab853e788f1392f81b59cbe30e136f3836cdf
  source_url: https://snyk.io/vuln/SNYK-RUBY-PRIVATEADDRESSCHECK-20446
- id: snykio:rubygems:private_address_check:CVE-2018-3759
  title: Time of Check Time of Use (TOCTOU)
  description: |
    [`private_address_check`][1] checks if a IP or hostname would cause a
    request to a private network (RFC 1918).

    Affected versions of this package are vulnerable to Time of Check Time
    of Use (TOCTOU) attacks. The address that was used by the socket was not
    sufficiently checked.



    [1]: https://rubygems.org/gems/private_address_check
  affected_package: private_address_check
  vulnerable_versions:
  - "<0.5.0"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2018-3759
  cwe:
  - CWE-367
  disclosed_date: 2018-05-04
  created_date: 2018-06-10
  last_modified_date: 2018-06-10
  credit:
  - Unknown
  references:
  - https://github.com/jtdowney/private_address_check/commit/4068228187db87fea7577f7020099399772bb147
  source_url: https://snyk.io/vuln/SNYK-RUBY-PRIVATEADDRESSCHECK-22028
