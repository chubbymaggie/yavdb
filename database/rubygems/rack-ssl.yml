---
- id: rubyadvisory:rubygems:rack-ssl:CVE-2014-2538
  title: rack-ssl Gem for Ruby Error Message Reflected XSS
  description: rack-ssl Gem for Ruby contains a flaw that allows a reflected cross-site
    scripting (XSS) attack. This flaw exists because the program does not validate
    input passed via error messages before returning it to users. This may allow a
    context-dependent attacker to create a specially crafted request that would execute
    arbitrary script code in a user's browser session within the trust relationship
    between their browser and the server.
  affected_package: rack-ssl
  patched_versions:
  - ">= 1.3.4"
  severity: medium
  package_manager: rubygems
  cve: CVE-2014-2538
  osvdb: 104734
  cvss_v2_score: 4.3
  disclosed_date: 2013-07-09
  created_date: 2013-07-09
  last_modified_date: 2013-07-09
  credit:
  - Rubysec
  references:
  - https://github.com/rubysec/ruby-advisory-db
  source_url: http://osvdb.org/show/osvdb/104734
- id: snykio:rubygems:rack-ssl:CVE-2014-2538
  title: Reflected Cross-site Scripting (XSS)
  description: |+
    [`rack-ssl`][1] is Rack middleware to force SSL/TLS.

    Affected versions of this package are vulnerable to Cross-site Scripting
    attacks. because the gem does not validate input passed via error
    messages before returning it to users.

    This may allow a context-dependent attacker to create a specially
    crafted request that would execute arbitrary script code in a user\'s
    browser.



    [1]: https://rubygems.org/gems/rack-ssl
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: rack-ssl
  vulnerable_versions:
  - "< 1.3.4"
  severity: medium
  package_manager: rubygems
  cve:
  - CVE-2014-2538
  cwe:
  - CWE-79
  disclosed_date: 2013-07-08
  created_date: 2013-07-08
  last_modified_date: 2013-07-08
  credit:
  - Unknown
  references:
  - http://lists.opensuse.org/opensuse-updates/2014-04/msg00032.html
  - https://github.com/josh/rack-ssl/commit/9d7d7300b907e496db68d89d07fbc2e0df0b487b
  source_url: https://snyk.io/vuln/SNYK-RUBY-RACKSSL-20101
