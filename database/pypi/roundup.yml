---
- id: snykio:pypi:roundup:CVE-2010-2491
  title: Cross-site Scripting (XSS)
  description: |+
    [`roundup`][1] is a simple-to-use and -install issue-tracking system
    with command-line, web and e-mail interfaces. Highly customisable.

    Cross-site Scripting (XSS) vulnerability in cgi/client.py in Roundup
    before 1.4.14 allows remote attackers to inject arbitrary web script or
    HTML via the template argument to the /issue program.



    [1]: https://pypi.python.org/pypi/roundup
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: roundup
  vulnerable_versions:
  - "< 1.4.14"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2010-2491
  cwe:
  - CWE-79
  disclosed_date: 2010-06-30
  created_date: 2010-06-30
  last_modified_date: 2010-06-30
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-2491
  - http://issues.roundup-tracker.org/issue2550654
  - http://www.openwall.com/lists/oss-security/2010/07/02/12
  - https://bugzilla.redhat.com/show_bug.cgi?id=610861
  source_url: https://snyk.io/vuln/SNYK-PYTHON-ROUNDUP-40050
- id: snykio:pypi:roundup:CVE-2012-6130
  title: Cross-site Scripting (XSS)
  description: |+
    [`roundup`][1] is a simple-to-use and -install issue-tracking system
    with command-line, web and e-mail interfaces. Highly customisable.

    Cross-site Scripting (XSS) vulnerability in the history display in
    Roundup before 1.4.20 allows remote attackers to inject arbitrary web
    script or HTML via a username, related to generating a link.



    [1]: https://pypi.python.org/pypi/roundup
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: roundup
  vulnerable_versions:
  - "< 1.4.20"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-6130
  cwe:
  - CWE-79
  disclosed_date: 2011-07-16
  created_date: 2011-07-16
  last_modified_date: 2011-07-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6130
  - http://issues.roundup-tracker.org/issue2550684
  - http://www.openwall.com/lists/oss-security/2012/11/10/2
  - http://www.openwall.com/lists/oss-security/2013/02/13/8
  - https://bugzilla.redhat.com/show_bug.cgi?id=722672
  - https://pypi.python.org/pypi/roundup/1.4.20
  source_url: https://snyk.io/vuln/SNYK-PYTHON-ROUNDUP-40164
- id: snykio:pypi:roundup:CVE-2012-6131
  title: Cross-site Scripting (XSS)
  description: |+
    [`roundup`][1] is a simple-to-use and -install issue-tracking system
    with command-line, web and e-mail interfaces. Highly customisable.

    Cross-site Scripting (XSS) vulnerability in cgi/client.py in Roundup
    before 1.4.20 allows remote attackers to inject arbitrary web script or
    HTML via the @action parameter to support/issue1.



    [1]: https://pypi.python.org/pypi/roundup
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: roundup
  vulnerable_versions:
  - "< 1.4.20"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-6131
  cwe:
  - CWE-79
  disclosed_date: 2011-07-16
  created_date: 2011-07-16
  last_modified_date: 2011-07-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6131
  - http://issues.roundup-tracker.org/issue2550711
  - http://www.openwall.com/lists/oss-security/2012/11/10/2
  - http://www.openwall.com/lists/oss-security/2013/02/13/8
  - https://bugzilla.redhat.com/show_bug.cgi?id=722672
  - https://pypi.python.org/pypi/roundup/1.4.20
  source_url: https://snyk.io/vuln/SNYK-PYTHON-ROUNDUP-40165
- id: snykio:pypi:roundup:CVE-2012-6132
  title: Cross-site Scripting (XSS)
  description: |+
    [`roundup`][1] is a simple-to-use and -install issue-tracking system
    with command-line, web and e-mail interfaces. Highly customisable.

    Cross-site Scripting (XSS) vulnerability in Roundup before 1.4.20 allows
    remote attackers to inject arbitrary web script or HTML via the otk
    parameter.



    [1]: https://pypi.python.org/pypi/roundup
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: roundup
  vulnerable_versions:
  - "< 1.4.20"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-6132
  cwe:
  - CWE-79
  disclosed_date: 2011-07-16
  created_date: 2011-07-16
  last_modified_date: 2011-07-16
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6132
  - http://www.openwall.com/lists/oss-security/2012/11/10/2
  - http://www.openwall.com/lists/oss-security/2013/02/13/8
  - https://bugzilla.redhat.com/show_bug.cgi?id=722672
  - https://pypi.python.org/pypi/roundup/1.4.20
  source_url: https://snyk.io/vuln/SNYK-PYTHON-ROUNDUP-40166
- id: snykio:pypi:roundup:CVE-2014-6276
  title: Information Exposure
  description: |
    [`roundup`][1] is a simple-to-use and -install issue-tracking system
    with command-line, web and e-mail interfaces. Highly customisable.
    schema.py in Roundup before 1.5.1 does not properly limit attributes
    included in default user permissions, which might allow remote
    authenticated users to obtain sensitive user information by viewing user
    details.



    [1]: https://pypi.python.org/pypi/roundup
  affected_package: roundup
  vulnerable_versions:
  - "< 1.5.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-6276
  cwe:
  - CWE-264
  disclosed_date: 2016-03-04
  created_date: 2016-03-04
  last_modified_date: 2016-03-04
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6276
  - http://www.debian.org/security/2016/dsa-3502
  source_url: https://snyk.io/vuln/SNYK-PYTHON-ROUNDUP-40291
