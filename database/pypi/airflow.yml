---
- id: snykio:pypi:airflow:40467
  title: Arbitrary Code Execution
  description: |
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution attacks due to a flaw in the code that evaluates a variable
    improperly, allowing an attacker to hijack the interpreter.



    [1]: https://pypi.python.org/pypi/airflow
  affected_package: airflow
  vulnerable_versions:
  - "< 1.8"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-94
  disclosed_date: 2016-06-10
  created_date: 2016-06-10
  last_modified_date: 2016-06-10
  credit:
  - Maxime Beauchemin
  references:
  - https://github.com/apache/incubator-airflow/commit/7d29698b639d9e2060465aa778efb842986df706
  - https://github.com/apache/incubator-airflow/pull/1584
  - https://issues.apache.org/jira/browse/AIRFLOW-231
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40467
- id: snykio:pypi:airflow:40615
  title: Cross-site Request Forgery (CSRF)
  description: |
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF) attacks because the `paused` and `query` endpoints are
    state-changing.



    [1]: https://pypi.python.org/pypi/airflow
  affected_package: airflow
  vulnerable_versions:
  - "< 1.9"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-352
  disclosed_date: 2017-02-04
  created_date: 2017-02-04
  last_modified_date: 2017-02-04
  credit:
  - Alex Guziel
  references:
  - https://github.com/apache/incubator-airflow/commit/673026c740411cc6447aede8c6a816460fe03a59
  - https://github.com/apache/incubator-airflow/pull/2054
  - https://issues.apache.org/jira/browse/AIRFLOW-836
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40615
- id: snykio:pypi:airflow:40616
  title: Arbitrary Code Execution
  description: |
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. User input is sent unchecked to the the python `eval`
    function which directly executes the parameters. Any user who can create
    or edit charts may execute arbitrary code on the server.



    [1]: https://pypi.python.org/pypi/airflow
  affected_package: airflow
  vulnerable_versions:
  - "< 1.8.0"
  severity: high
  package_manager: pypi
  cwe:
  - CWE-94
  disclosed_date: 2017-03-03
  created_date: 2017-03-03
  last_modified_date: 2017-03-03
  credit:
  - Unknown
  references:
  - https://github.com/apache/incubator-airflow/commit/88d9b0dc96e7528c87326c8070ee276e8565545f
  - https://github.com/apache/incubator-airflow/pull/2117
  - https://issues.apache.org/jira/browse/AIRFLOW-933
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40616
- id: snykio:pypi:airflow:40619
  title: Arbitrary Code Execution
  description: |
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution. Anyone able to modify the application\'s underlying database,
    or a computer where certain DAG tasks are executed, may execute
    arbitrary code on the Airflow host.



    [1]: https://pypi.python.org/pypi/airflow
  affected_package: airflow
  vulnerable_versions:
  - "<= 1.8.1"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-94
  disclosed_date: 2017-03-08
  created_date: 2017-03-08
  last_modified_date: 2017-03-08
  credit:
  - Rui Wang
  references:
  - https://github.com/apache/incubator-airflow/pull/2132
  - https://issues.apache.org/jira/browse/AIRFLOW-855
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40619
- id: snykio:pypi:airflow:40620
  title: Cross-site Scripting (XSS)
  description: |+
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks due to not sanitizing user-inputted HTML passed to Markup.
    This allows a malicious user to execute arbitrary code.



    [1]: https://pypi.python.org/pypi/airflow
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: airflow
  vulnerable_versions:
  - ">= 1.6.0 <= 1.8.0"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-79
  disclosed_date: 2017-03-28
  created_date: 2017-03-28
  last_modified_date: 2017-03-28
  credit:
  - Alex Guziel
  references:
  - https://github.com/apache/incubator-airflow/commit/fe9ebe3ccf5fec4c491343659aa0c52e4125f66b
  - https://github.com/apache/incubator-airflow/pull/2193
  - https://issues.apache.org/jira/browse/AIRFLOW-1047
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40620
- id: snykio:pypi:airflow:40624
  title: Arbitrary Code Execution
  description: |
    [`airflow`][1] is a Programmatically author, schedule and monitor data
    pipelines.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution attacks due to not preventing the `chart_data` endpoints from
    using user-input and executing them.



    [1]: https://pypi.python.org/pypi/airflow
  affected_package: airflow
  vulnerable_versions:
  - ">= 1.8.0"
  severity: high
  package_manager: pypi
  cwe:
  - CWE-94
  disclosed_date: 2017-04-07
  created_date: 2017-04-07
  last_modified_date: 2017-04-07
  credit:
  - Unknown
  references:
  - https://github.com/apache/incubator-airflow/commit/04cacdd0a7526927137b452f38c3e894a5d2ce4a
  - https://github.com/apache/incubator-airflow/pull/2184
  - https://issues.apache.org/jira/browse/AIRFLOW-1007
  source_url: https://snyk.io/vuln/SNYK-PYTHON-AIRFLOW-40624
