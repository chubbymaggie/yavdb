---
- id: snykio:pypi:products.kupu:2015-09-09
  title: Privilege Escalation
  description: |
    Affected versions of [`products.kupu`][1] are vulnerable to Privilege
    escalation attacks.



    [1]: https://pypi.python.org/pypi/products.kupu
    \nAffected versions of [`products.kupu`][1] are vulnerable to Privilege
    escalation attacks.



    [1]: https://pypi.python.org/pypi/products.kupu
  affected_package: products.kupu
  vulnerable_versions:
  - "<= 1.5.0b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2015-7317
  cwe:
  - CWE-264
  credit:
  - Richard Mitchell
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7317
  - https://plone.org/security/hotfix/20150910/privilege-escalation-in-kupu
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PRODUCTSKUPU-40352
- id: snykio:pypi:products.kupu:2013-06-18
  title: Information Exposure
  description: |
    Affected versions of [`products.kupu`][1] are vulnerable to Information
    Exposure. The WYSIWYG component (wysiwyg.py) in Plone 2.1 through 4.1,
    4.2.x through 4.2.5, and 4.3.x through 4.3.1 allows remote attackers to
    obtain sensitive information via a crafted URL, which reveals the
    installation path in an error message.



    [1]: https://pypi.python.org/pypi/products.kupu
    \nAffected versions of [`products.kupu`][1] are vulnerable to Information
    Exposure. The WYSIWYG component (wysiwyg.py) in Plone 2.1 through 4.1,
    4.2.x through 4.2.5, and 4.3.x through 4.3.1 allows remote attackers to
    obtain sensitive information via a crafted URL, which reveals the
    installation path in an error message.



    [1]: https://pypi.python.org/pypi/products.kupu
  affected_package: products.kupu
  vulnerable_versions:
  - "< 1.5.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4194
  cwe:
  - CWE-200
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4194
  - https://bugzilla.redhat.com/show_bug.cgi?id=978470
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PRODUCTSKUPU-40202
- id: snykio:pypi:products.kupu:2012-11-10
  title: Denial of Service (DoS)
  description: |+
    kupu\_spellcheck.py in [`products.kupu`][1] is a UNKNOWN in Plone before
    4.0 allows remote attackers to cause a denial of service (ZServer thread
    lock) via a crafted URL.



    [1]: https://pypi.python.org/pypi/products.kupu
    \nkupu\_spellcheck.py in [`products.kupu`][1] is a UNKNOWN in Plone before
    4.0 allows remote attackers to cause a denial of service (ZServer thread
    lock) via a crafted URL.



    [1]: https://pypi.python.org/pypi/products.kupu
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: products.kupu
  vulnerable_versions:
  - "< 1.5.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5496
  cwe:
  - CWE-399
  credit:
  - Richard Mitchel
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5496
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PRODUCTSKUPU-40129
