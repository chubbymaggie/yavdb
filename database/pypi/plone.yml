---
- id: snykio:pypi:plone:CVE-2008-1394
  title: Information Exposure
  description: |
    [plone][1] is a user friendly and extensible Content Management System
    running on top of Python and Zope.

    Affected versions of this package are vulnerable to Information
    Exposure. It places a base64 encoded form of the username and password
    in the `__ac` cookie for all user accounts, which makes it easier for
    remote attackers to obtain access by sniffing the network.



    [1]: https://pypi.org/project/Plone/
  affected_package: plone
  vulnerable_versions:
  - "< 3.0.0"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2008-1394
  cwe:
  - CWE-255
  disclosed_date: 2008-10-15
  created_date: 2018-06-17
  last_modified_date: 2018-06-17
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2008-4571
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40790
- id: snykio:pypi:plone:CVE-2008-4571
  title: Cross-site Scripting (XSS)
  description: |+
    [plone][1] is a user friendly and extensible Content Management System
    running on top of Python and Zope.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks. A malicious user could inject arbitrary web script or
    HTML via the `Description` field for search results.



    [1]: https://pypi.org/project/Plone/
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 3.0.4"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2008-4571
  cwe:
  - CWE-79
  disclosed_date: 2008-10-15
  created_date: 2018-06-17
  last_modified_date: 2018-06-17
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2008-4571
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42153
- id: snykio:pypi:plone:CVE-2010-2422
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System..

    Cross-site Scripting (XSS) vulnerability in PortalTransforms in Plone
    2.1 through 3.3.4 before hotfix 20100612 allows remote attackers to
    inject arbitrary web script or HTML via the safe\_html transform.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - ">= 2.1 < 3.3.5"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2010-2422
  cwe:
  - CWE-79
  disclosed_date: 2010-06-12
  created_date: 2010-06-12
  last_modified_date: 2010-06-12
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-2422
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40047
- id: snykio:pypi:plone:CVE-2011-0720
  title: Arbitrary File Creation
  description: |
    [`plone`][1] is a Content Management System..

    Unspecified vulnerability in Plone 2.5 through 4.0, as used in Conga,
    luci, and possibly other products, allows remote attackers to obtain
    administrative access, read or create arbitrary content, and change the
    site skin via unknown vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 2.5 < 4.1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2011-0720
  cwe:
  - CWE-264
  disclosed_date: 2011-02-03
  created_date: 2011-02-03
  last_modified_date: 2011-02-03
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-0720
  - https://access.redhat.com/security/cve/cve-2011-0720
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40061
- id: snykio:pypi:plone:CVE-2011-1340
  title: Cross-site Scripting (XSS)
  description: |+
    [plone][1] is a user friendly and extensible Content Management System
    running on top of Python and Zope.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks. A remote attackers could inject arbitrary web script or
    HTML via the `type_name` parameter to `Members/ipa/createObject`.



    [1]: https://pypi.org/project/Plone/
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 2.5.3"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2011-1340
  cwe:
  - CWE-79
  disclosed_date: 2011-08-05
  created_date: 2018-06-17
  last_modified_date: 2018-06-17
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2011-1340
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42154
- id: snykio:pypi:plone:CVE-2011-1948
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Cross-site Scripting (XSS) vulnerability in Plone 4.1 and earlier allows
    remote attackers to inject arbitrary web script or HTML via a crafted
    URL.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2011-1948
  cwe:
  - CWE-79
  disclosed_date: 2011-05-31
  created_date: 2011-05-31
  last_modified_date: 2011-05-31
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-1948
  - https://access.redhat.com/security/cve/CVE-2011-1948
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40068
- id: snykio:pypi:plone:CVE-2011-1950
  title: Arbitrary Property Modification
  description: |
    [`plone`][1] is a Content Management System..

    plone.app.users in Plone 4.0 and 4.1 allows remote authenticated users
    to modify the properties of arbitrary accounts via unspecified vectors,
    as exploited in the wild in June 2011.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4 < 4.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2011-1950
  cwe:
  - CWE-264
  disclosed_date: 2011-05-31
  created_date: 2011-05-31
  last_modified_date: 2011-05-31
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-1950
  - https://access.redhat.com/security/cve/CVE-2011-1950
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40071
- id: snykio:pypi:plone:CVE-2011-2528
  title: Privilege Escalation
  description: |
    [`plone`][1] is a Content Management System.

    Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x
    before 2.13.8, as used in Plone 4.x and other products, and (2)
    PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges
    via unspecified vectors, related to a \"highly serious vulnerability.\"
    NOTE: this vulnerability exists because of an incorrect fix for
    CVE-2011-0720.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4.1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2011-2528
  cwe:
  - CWE-265
  disclosed_date: 2011-06-28
  created_date: 2011-06-28
  last_modified_date: 2011-06-28
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-2528
  - http://www.openwall.com/lists/oss-security/2011/07/12/9
  - https://access.redhat.com/security/cve/CVE-2011-2528
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40075
- id: snykio:pypi:plone:CVE-2011-4030
  title: Arbitrary Sub-object Access
  description: |
    [`plone`][1] is a Content Management System.

    The CMFEditions component 2.x in Plone 4.0.x through 4.0.9, 4.1, and 4.2
    through 4.2a2 does not prevent the KwAsAttributes classes from being
    publishable, which allows remote attackers to access sub-objects via
    unspecified vectors, a different vulnerability than CVE-2011-3587.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4 <= 4.0.9"
  - ">= 4.1 <= 4.2a2"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2011-4030
  cwe:
  - CWE-264
  disclosed_date: 2011-10-04
  created_date: 2011-10-04
  last_modified_date: 2011-10-04
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-4030
  - https://access.redhat.com/security/cve/CVE-2011-4030
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40078
- id: snykio:pypi:plone:CVE-2011-4462
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    Plone 4.1.3 and earlier computes hash values for form parameters without
    restricting the ability to trigger hash collisions predictably, which
    allows remote attackers to cause a Denial of Service (CPU consumption)
    by sending many crafted parameters.



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "<= 4.1.3"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2011-4462
  cwe:
  - CWE-20
  disclosed_date: 2011-12-28
  created_date: 2011-12-28
  last_modified_date: 2011-12-28
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2011-4462
  - https://access.redhat.com/security/cve/CVE-2011-4462
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40088
- id: snykio:pypi:plone:CVE-2012-5485
  title: Arbitrary Code Execution
  description: |
    [plone][1] is a user friendly and extensible Content Management System
    running on top of Python and Zope.

    Affected versions of this package are vulnerable to Arbitrary Code
    Execution.



    [1]: https://pypi.org/project/Plone/
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5485
  cwe:
  - CWE-94
  disclosed_date: 2012-09-30
  created_date: 2018-06-17
  last_modified_date: 2018-06-17
  credit:
  - Unknown
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2012-5485
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42152
- id: snykio:pypi:plone:CVE-2012-5487
  title: Arbitrary Code Execution
  description: |
    [`plone`][1] is a Content Management System.

    The sandbox whitelisting function (allowmodule.py) in Plone before 4.2.3
    and 4.3 before beta 1 allows remote authenticated users with certain
    privileges to bypass the Python sandbox restriction and execute
    arbitrary Python code via vectors related to importing.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2012-5487
  cwe:
  - CWE-264
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5487
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5487
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40107
- id: snykio:pypi:plone:CVE-2012-5488
  title: Arbitrary Code Execution
  description: |
    [`plone`][1] is a Content Management System.

    python\_scripts.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to execute Python code via a crafted URL, related to
    createObject.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5488
  cwe:
  - CWE-94
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5488
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5488
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40110
- id: snykio:pypi:plone:CVE-2012-5490
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Cross-site Scripting (XSS) vulnerability in kssdevel.py in Plone before
    4.2.3 and 4.3 before beta 1 allows remote attackers to inject arbitrary
    web script or HTML via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5490
  cwe:
  - CWE-79
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5490
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5490
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40118
- id: snykio:pypi:plone:CVE-2012-5491
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    z3c.form, as used in Plone before 4.2.3 and 4.3 before beta 1, allows
    remote attackers to obtain the default form field values by leveraging
    knowledge of the form location and the element id.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5491
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5491
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5491
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40120
- id: snykio:pypi:plone:CVE-2012-5492
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    uid\_catalog.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to obtain metadata about hidden objects via a crafted
    URL.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5492
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5492
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5492
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40122
- id: snykio:pypi:plone:CVE-2012-5493
  title: Arbitrary Code Execution
  description: |
    [`plone`][1] is a Content Management System.

    gtbn.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote
    authenticated users with certain permissions to bypass the Python
    sandbox and execute arbitrary Python code via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2012-5493
  cwe:
  - CWE-94
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5493
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5493
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40124
- id: snykio:pypi:plone:CVE-2012-5494
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Cross-site Scripting (XSS) vulnerability in python\_scripts.py in Plone
    before 4.2.3 and 4.3 before beta 1 allows remote attackers to inject
    arbitrary web script or HTML via unspecified vectors, related to
    \"\{u,}translate.\"



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5494
  cwe:
  - CWE-79
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5494
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5494
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40126
- id: snykio:pypi:plone:CVE-2012-5495
  title: Arbitrary Code Execution
  description: |
    [`plone`][1] is a Content Management System.

    python\_scripts.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to execute Python code via a crafted URL, related to
    \"go\_back.\"



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5495
  cwe:
  - CWE-94
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5495
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5495
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40128
- id: snykio:pypi:plone:CVE-2012-5496
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    kupu\_spellcheck.py in Kupu in Plone before 4.0 allows remote attackers
    to cause a Denial of Service (ZServer thread lock) via a crafted URL.



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.0"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5496
  cwe:
  - CWE-399
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5496
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5496
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40130
- id: snykio:pypi:plone:CVE-2012-5497
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    membership\_tool.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to enumerate user account names via a crafted URL.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5497
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5497
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5497
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40132
- id: snykio:pypi:plone:CVE-2012-5498
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    queryCatalog.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to bypass caching and cause a Denial of Service via a
    crafted request to a collection.



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5498
  cwe:
  - CWE-264
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5498
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5498
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40133
- id: snykio:pypi:plone:CVE-2012-5499
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    python\_scripts.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to cause a Denial of Service (memory consumption) via a
    large value, related to formatColumns.



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5499
  cwe:
  - CWE-399
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5499
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5499
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40134
- id: snykio:pypi:plone:CVE-2012-5500
  title: Cross-site Request Forgery (CSRF)
  description: |
    [`plone`][1] is a Content Management System.

    The batch id change script (renameObjectsByPaths.py) in Plone before
    4.2.3 and 4.3 before beta 1 allows remote attackers to change the titles
    of content items by leveraging a valid CSRF token in a crafted request.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5500
  cwe:
  - CWE-352
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5500
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5500
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40136
- id: snykio:pypi:plone:CVE-2012-5501
  title: Arbitrary BLOB Read
  description: |
    [`plone`][1] is a Content Management System.

    at\_download.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to read arbitrary BLOBs (Files and Images) stored on
    custom content types via a crafted URL.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5501
  cwe:
  - CWE-264
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5501
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5501
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40140
- id: snykio:pypi:plone:CVE-2012-5502
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Cross-site Scripting (XSS) vulnerability in safe\_html.py in Plone
    before 4.2.3 and 4.3 before beta 1 allows remote authenticated users
    with permissions to edit content to inject arbitrary web script or HTML
    via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2012-5502
  cwe:
  - CWE-79
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5502
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5502
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40143
- id: snykio:pypi:plone:CVE-2012-5503
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    ftp.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote
    attackers to read hidden folder contents via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5503
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5503
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5503
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40145
- id: snykio:pypi:plone:CVE-2012-5504
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Cross-site Scripting (XSS) vulnerability in widget\_traversal.py in
    Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to
    inject arbitrary web script or HTML via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5504
  cwe:
  - CWE-79
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5504
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5504
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40147
- id: snykio:pypi:plone:CVE-2012-5505
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    atat.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote
    attackers to read private data structures via a request for a view
    without a name.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5505
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5505
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5505
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40150
- id: snykio:pypi:plone:CVE-2012-5506
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    python\_scripts.py in Plone before 4.2.3 and 4.3 before beta 1 allows
    remote attackers to cause a Denial of Service (infinite loop) via an RSS
    feed request for a folder the user does not have permission to access.



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5506
  cwe:
  - CWE-399
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5506
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5506
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40153
- id: snykio:pypi:plone:CVE-2012-5508
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    The error pages in Plone before 4.2.3 and 4.3 before beta 1 allow remote
    attackers to obtain random numbers and derive the PRNG state for
    password resets via unspecified vectors. NOTE: this identifier was SPLIT
    per ADT2 due to different vulnerability types. CVE-2012-6661 was
    assigned for the PRNG reseeding issue in Zope.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.3"
  - ">= 4.3 < 4.3b1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2012-5508
  cwe:
  - CWE-200
  disclosed_date: 2012-11-06
  created_date: 2012-11-06
  last_modified_date: 2012-11-06
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5508
  - http://www.openwall.com/lists/oss-security/2012/11/10/1
  - https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt
  - https://access.redhat.com/security/cve/CVE-2012-5508
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40156
- id: snykio:pypi:plone:CVE-2013-4188
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    traverser.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and 4.3.x
    through 4.3.1 allows remote attackers with administrator privileges to
    cause a Denial of Service (infinite loop and resource consumption) via
    unspecified vectors related to \"retrieving information for certain
    resources.\"



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4188
  cwe:
  - CWE-399
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4188
  - http://seclists.org/oss-sec/2013/q3/261
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40189
- id: snykio:pypi:plone:CVE-2013-4189
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Multiple unspecified vulnerabilities in (1) dataitems.py, (2) get.py,
    and (3) traverseName.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5,
    and 4.3.x through 4.3.1 allow remote authenticated users with
    administrator access to a subtree to access nodes above the subtree via
    unknown vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4189
  cwe:
  - CWE-284
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4189
  - http://plone.org/products/plone-hotfix/releases/20130618,http://plone.org/products/plone/security/advisories/20130618-announcement,http://seclists.org/oss-sec/2013/q3/261,https://bugzilla.redhat.com/show_bug.cgi?id=978450
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40192
- id: snykio:pypi:plone:CVE-2013-4190
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Multiple Cross-site Scripting (XSS) vulnerabilities in (1)
    spamProtect.py, (2) pts.py, and (3) request.py in Plone 2.1 through 4.1,
    4.2.x through 4.2.5, and 4.3.x through 4.3.1 allow remote attackers to
    inject arbitrary web script or HTML via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4190
  cwe:
  - CWE-79
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4190
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978451
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40195
- id: snykio:pypi:plone:CVE-2013-4191
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    zip.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and 4.3.x through
    4.3.1 does not properly enforce access restrictions when including
    content in a zip archive, which allows remote attackers to obtain
    sensitive information by reading a generated archive.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4191
  cwe:
  - CWE-264
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4191
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978453
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40197
- id: snykio:pypi:plone:CVE-2013-4192
  title: Email Spoofing
  description: |
    [`plone`][1] is a Content Management System.

    sendto.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and 4.3.x
    through 4.3.1 allows remote authenticated users to spoof emails via
    unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4192
  cwe:
  - CWE-20
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4192
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978464
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40199
- id: snykio:pypi:plone:CVE-2013-4193
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    typeswidget.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and 4.3.x
    through 4.3.1 does not properly enforce the immutable setting on
    unspecified content edit forms, which allows remote attackers to hide
    fields on the forms via a crafted URL.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4193
  cwe:
  - CWE-264
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4193
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978469
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40201
- id: snykio:pypi:plone:CVE-2013-4194
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    The WYSIWYG component (wysiwyg.py) in Plone 2.1 through 4.1, 4.2.x
    through 4.2.5, and 4.3.x through 4.3.1 allows remote attackers to obtain
    sensitive information via a crafted URL, which reveals the installation
    path in an error message.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4194
  cwe:
  - CWE-200
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4194
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978470
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40203
- id: snykio:pypi:plone:CVE-2013-4195
  title: Open Redirect
  description: |
    [`plone`][1] is a Content Management System.

    Multiple open redirect vulnerabilities in (1) marmoset\_patch.py, (2)
    publish.py, and (3) principiaredirect.py in Plone 2.1 through 4.1, 4.2.x
    through 4.2.5, and 4.3.x through 4.3.1 allow remote attackers to
    redirect users to arbitrary web sites and conduct phishing attacks via
    unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4195
  cwe:
  - CWE-20
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4195
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978471
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40205
- id: snykio:pypi:plone:CVE-2013-4196
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    The object manager implementation (objectmanager.py) in Plone 2.1
    through 4.1, 4.2.x through 4.2.5, and 4.3.x through 4.3.1 does not
    properly restrict access to internal methods, which allows remote
    attackers to obtain sensitive information via a crafted request.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4196
  cwe:
  - CWE-264
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4196
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978475
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40209
- id: snykio:pypi:plone:CVE-2013-4197
  title: Arbitrary Portrait Modification
  description: |
    [`plone`][1] is a Content Management System.

    member\_portrait.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and
    4.3.x through 4.3.1 allows remote authenticated users to modify or
    delete portraits of other users via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4197
  cwe:
  - CWE-20
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4197
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978478
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40211
- id: snykio:pypi:plone:CVE-2013-4198
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    mail\_password.py in Plone 2.1 through 4.1, 4.2.x through 4.2.5, and
    4.3.x through 4.3.1 allows remote authenticated users to bypass the
    prohibition on password changes via the forgotten password email
    functionality.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4198
  cwe:
  - CWE-264
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4198
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978480
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40214
- id: snykio:pypi:plone:CVE-2013-4199
  title: Denial of Service (DoS)
  description: |+
    [`plone`][1] is a Content Management System.

    (1) cb\_decode.py and (2) linkintegrity.py in Plone 2.1 through 4.1,
    4.2.x through 4.2.5, and 4.3.x through 4.3.1 allow remote authenticated
    users to cause a Denial of Service (resource consumption) via a large
    zip archive, which is expanded (decompressed).



    [1]: https://pypi.python.org/pypi/plone
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: plone
  vulnerable_versions:
  - "< 4.2.5"
  - ">= 4.3 < 4.3.1"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2013-4199
  cwe:
  - CWE-20
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4199
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978482
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40216
- id: snykio:pypi:plone:CVE-2013-4200
  title: Arbitrary Web Redirect
  description: |
    [`plone`][1] is a Content Management System.

    The isURLInPortal method in the URLTool class in in\_portal.py in Plone
    2.1 through 4.1, 4.2.x through 4.2.5, and 4.3.x through 4.3.1 treats
    URLs starting with a space as a relative URL, which allows remote
    attackers to bypass the allow\_external\_login\_sites filtering
    property, redirect users to arbitrary web sites, and conduct phishing
    attacks via a space before a URL in the \"next\" parameter to
    acl\_users/credentials\_cookie\_auth/require\_login.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4.3.0 <= 4.3.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4200
  cwe:
  - CWE-264
  disclosed_date: 2013-08-01
  created_date: 2013-08-01
  last_modified_date: 2013-08-01
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-4200
  - http://plone.org/products/plone-hotfix/releases/20130618,http://plone.org/products/plone/security/advisories/20130618-announcement,http://www.openwall.com/lists/oss-security/2013/08/01/2,http://www.securityfocus.com/archive/1/archive/1/530787/100/0/threaded,https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-4200
  - http://seclists.org/oss-sec/2013/q3/261
  - https://bugzilla.redhat.com/show_bug.cgi?id=978482
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40219
- id: snykio:pypi:plone:CVE-2013-7060
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    Products/CMFPlone/FactoryTool.py in Plone 3.3 through 4.3.2 allows
    remote attackers to obtain the installation path via vectors related to
    a file object for unspecified documentation which is initialized in
    class scope.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 3.3 <= 4.3.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-7060
  cwe:
  - CWE-200
  disclosed_date: 2013-12-10
  created_date: 2013-12-10
  last_modified_date: 2013-12-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-7060
  - http://www.openwall.com/lists/oss-security/2013/12/12/3
  - https://plone.org/security/20131210/path-leak
  - https://access.redhat.com/security/cve/CVE-2013-7060
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40242
- id: snykio:pypi:plone:CVE-2013-7061
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Products/CMFPlone/CatalogTool.py in Plone 3.3 through 4.3.2 allows
    remote administrators to bypass restrictions and obtain sensitive
    information via an unspecified search API.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 3.3 <= 4.3.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-7061
  cwe:
  - CWE-285
  disclosed_date: 2013-12-10
  created_date: 2013-12-10
  last_modified_date: 2013-12-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-7061
  - http://www.openwall.com/lists/oss-security/2013/12/12/3
  - https://plone.org/security/20131210/catalogue-exposure
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40244
- id: snykio:pypi:plone:CVE-2015-7293
  title: Cross-site Request Forgery (CSRF)
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Request
    Forgery (CSRF). Multiple cross-site request forgery (CSRF)
    vulnerabilities in Zope Management Interface 4.3.7 and earlier, and
    Plone before 5.x.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 5.0"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2015-7293
  cwe:
  - CWE-352
  disclosed_date: 2016-02-27
  created_date: 2017-11-07
  last_modified_date: 2017-11-07
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7293
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40343
- id: snykio:pypi:plone:CVE-2015-7315
  title: Unauthorized User Creation
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Unauthorized user
    creation. A vulnerability that allows remote attackers to add a new
    member to a Plone site when registration is enabled, without
    acknowledgment of site administrator was found. Versions affected are
    Plone 3.x, 4.1.x, 4.2.x, &lt;4.3.7, &lt;5.0rc1.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.3.7"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2015-7315
  cwe:
  - CWE-286
  disclosed_date: 2015-09-10
  created_date: 2015-09-10
  last_modified_date: 2015-09-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7315
  - http://seclists.org/oss-sec/2015/q3/586
  - https://github.com/zopefoundation/Products.CMFCore/commit/e1d981bfa14b664317285f0f36498f4be4a23406
  - https://access.redhat.com/security/cve/CVE-2015-7315
  - https://bugzilla.redhat.com/show_bug.cgi?id=1264791
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40345
- id: snykio:pypi:plone:CVE-2015-7316
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks. Plone\'s URL checking infrastructure includes a method
    for checking if URLs valid and located in the Plone site. By passing
    HTML into this specially crafted url, XSS can be achieved. Versions
    affected are Plone 3.x, 4.1.x, 4.2.x, &lt;4.3.7, &lt;5.0rc1.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.3.7"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2015-7316
  cwe:
  - CWE-79
  disclosed_date: 2015-09-10
  created_date: 2015-09-10
  last_modified_date: 2015-09-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7316
  - http://seclists.org/oss-sec/2015/q3/587
  - https://github.com/plone/Products.CMFPlone/commit/3da710a2cd68587f0bf34f2e7ea1167d6eeee087
  - https://access.redhat.com/security/cve/CVE-2015-7316
  - https://bugzilla.redhat.com/show_bug.cgi?id=1264788
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40350
- id: snykio:pypi:plone:CVE-2015-7317
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. An incorrect security declaration would allow any authenticated
    user to edit kupu settings--the wysiwyg editor for old versions of
    Plone. Versions affected are all versions Plone 3 through 4.2.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 3.3 <= 4.2.7"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2015-7317
  cwe:
  - CWE-284
  disclosed_date: 2015-09-10
  created_date: 2015-09-10
  last_modified_date: 2015-09-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7317
  - http://seclists.org/oss-sec/2015/q3/588
  - https://plone.org/security/20150910/
  - https://access.redhat.com/security/cve/CVE-2015-7317
  - https://bugzilla.redhat.com/show_bug.cgi?id=1264799
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40353
- id: snykio:pypi:plone:CVE-2015-7318
  title: HTTP Response Splitting
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to HTTP Response
    Splitting.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 3 < 4.0"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2015-7318
  cwe:
  - CWE-113
  disclosed_date: 2015-09-10
  created_date: 2015-09-10
  last_modified_date: 2015-09-10
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7318
  - http://seclists.org/oss-sec/2015/q3/589
  - https://plone.org/security/20150910/
  - http://seclists.org/oss-sec/2015/q3/589
  - https://bugzilla.redhat.com/show_bug.cgi?id=1264796
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40355
- id: snykio:pypi:plone:CVE-2016-4041
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Access Restriction
    Bypass. Dexterity content is missing security declarations for WebDAV
    requests. This only affects Dexterity objects.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4.0 <= 5.1a1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2016-4041
  cwe:
  - CWE-284
  disclosed_date: 2016-04-09
  created_date: 2016-04-09
  last_modified_date: 2016-04-09
  credit:
  - Thomas Mogensen
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4041
  - https://plone.org/security/hotfix/20160419/privilege-escalation-in-webdav
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40393
- id: snykio:pypi:plone:CVE-2016-4042
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Information
    Exposure. Plone 3.3 through 5.1a1 allows remote attackers to obtain
    information about the ID of sensitive content via unspecified vectors.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 3.3 <= 5.1a1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2016-4042
  cwe:
  - CWE-200
  disclosed_date: 2016-04-20
  created_date: 2016-04-20
  last_modified_date: 2016-04-20
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4042
  - http://www.openwall.com/lists/oss-security/2016/04/20/2
  - https://plone.org/security/hotfix/20160419/unauthorized-disclosure-of-site-content
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40394
- id: snykio:pypi:plone:CVE-2016-4043
  title: Access Restriction Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Bypass Restricted
    Python. This vulnerability should only affect site administrators who
    have ZMI access, or when you gave users permission to edit PloneFormGen
    templates. Only Chameleon (five.pt) is affected. This package is used by
    default in Plone 5, and can be added in Plone 4.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 5.0 <= 5.1a1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2016-4043
  cwe:
  - CWE-284
  disclosed_date: 2016-04-20
  created_date: 2016-04-20
  last_modified_date: 2016-04-20
  credit:
  - Fred van Dijk
  - Maurits van Rees
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4043
  - https://plone.org/security/hotfix/20160419/bypass-restricted-python
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40396
- id: snykio:pypi:plone:CVE-2016-7135
  title: Information Exposure
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Information
    Exposure.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4.2 <= 5.1a1"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2016-7135
  cwe:
  - CWE-200
  disclosed_date: 2016-08-30
  created_date: 2016-08-30
  last_modified_date: 2016-08-30
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7135
  - https://plone.org/security/hotfix/20160830/filesystem-information-leak
  - http://seclists.org/fulldisclosure/2016/Oct/80
  - https://access.redhat.com/security/cve/cve-2016-7135
  - https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-7135
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40412
- id: snykio:pypi:plone:CVE-2016-7136
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks.

    z3c.form will currently accept data from GET requests when the form is
    supposed to be POST. This allows a user to inject a potential XSS attack
    into a form. With certain widgets in Plone admin forms, the input is
    expected to be safe and can cause a reflexive XSS attack. Additionally,
    there is potential for an attack that will trick a user into saving a
    persistent XSS.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - ">= 4 <= 5.1a1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2016-7136
  cwe:
  - CWE-79
  disclosed_date: 2016-07-18
  created_date: 2016-07-18
  last_modified_date: 2016-07-18
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7136
  - https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms
  - http://seclists.org/fulldisclosure/2016/Oct/80
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40416
- id: snykio:pypi:plone:CVE-2016-7137
  title: Open Redirect
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Open Redirect. In
    multiple places, Plone blindly uses the referer header to redirect a
    user to the next page after a particular action. An attacker could
    utilize this to draw a user into a redirection attack.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - "<= 5.0.6"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2016-7137
  cwe:
  - CWE-601
  disclosed_date: 2016-07-18
  created_date: 2016-07-18
  last_modified_date: 2016-07-18
  credit:
  - Sebastian Perez
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7137
  - https://plone.org/security/hotfix/20160830/open-redirection-in-plone
  - http://seclists.org/fulldisclosure/2016/Oct/80
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40419
- id: snykio:pypi:plone:CVE-2016-7138
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks. Plone\'s URL checking infrastructure includes a method
    for checking if URLs valid and located in the Plone site. By passing
    javascript into this specially crafted url, XSS can be achieved.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "<= 5.1a1"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2016-7138
  cwe:
  - CWE-79
  disclosed_date: 2016-07-18
  created_date: 2016-07-18
  last_modified_date: 2016-07-18
  credit:
  - Sebastian Perez
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7138
  - https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1
  - http://seclists.org/fulldisclosure/2016/Oct/80
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40423
- id: snykio:pypi:plone:CVE-2016-7139
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks due to unescaped user input in a page template.



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - ">= 4 <= 5.1a1"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2016-7139
  cwe:
  - CWE-79
  disclosed_date: 2016-09-06
  created_date: 2016-09-06
  last_modified_date: 2016-09-06
  credit:
  - Sebastian Perez
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7139
  - https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone
  - http://seclists.org/fulldisclosure/2016/Oct/80
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40426
- id: snykio:pypi:plone:CVE-2016-7147
  title: Cross-site Scripting (XSS)
  description: |+
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS).



    [1]: https://pypi.python.org/pypi/plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "<= 5.1a2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2016-7147
  cwe:
  - CWE-79
  disclosed_date: 2017-01-18
  created_date: 2017-01-18
  last_modified_date: 2017-01-18
  credit:
  - Unknown
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7147
  - https://plone.org/security/hotfix/20170117/non-persistent-xss-in-zope2
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40432
- id: snykio:pypi:plone:CVE-2017-1000481
  title: Open Redirect
  description: |
    [plone][1] is a Content Management System running on top of Python and
    Zope.

    Affected versions of this package are vulnerable to Open Redirect and
    reflected Cross-site Scripting (XSS) attacks. An attacker might persuade
    a user to click on a specially crafted link, and get him redirect to a
    malicious site.



    [1]: https://github.com/plone/Plone
  affected_package: plone
  vulnerable_versions:
  - "< 4.3.16"
  - ">= 5 < 5.1.0"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2017-1000481
  cwe:
  - CWE-601
  disclosed_date: 2017-01-20
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Zhouyuan Yang
  - Jayson Grace
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000481
  - https://plone.org/security/hotfix/20171128/open-redirection-on-login-form
  - https://plone.org/security/hotfix/20171128
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42049
- id: snykio:pypi:plone:CVE-2017-1000482
  title: Cross-site Scripting (XSS)
  description: |+
    [plone][1] is a Content Management System running on top of Python and
    Zope.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS). An attacker may set javascript in the `home_page` property of his
    profile, and have this executed when a visitor click the home page link
    on the author page.



    [1]: https://github.com/plone/Plone
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: plone
  vulnerable_versions:
  - "< 4.3.16"
  - ">= 5 < 5.1.0"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2017-1000482
  cwe:
  - CWE-79
  disclosed_date: 2017-01-20
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Zhouyuan Yang
  references:
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000482
  - https://plone.org/security/hotfix/20171128/xss-using-the-home_page-member-property
  - https://plone.org/security/hotfix/20171128
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42052
- id: snykio:pypi:plone:CVE-2017-1000483
  title: Sandbox Escape
  description: |
    [plone][1] is a Content Management System running on top of Python and
    Zope.

    Affected versions of this package are vulnerable to Sandbox escape.
    Accessing private content via str.format in through-the-web templates
    and scripts.



    [1]: https://github.com/plone/Plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4.0 < 4.3.16"
  - ">= 5 < 5.1.0"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2017-1000483
  cwe:
  - CWE-265
  disclosed_date: 2017-09-14
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Michael Howitz
  references:
  - https://plone.org/security/hotfix/20171128/sandbox-escape
  - https://plone.org/security/hotfix/20171128
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000483
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42053
- id: snykio:pypi:plone:CVE-2017-1000484
  title: Open Redirect
  description: |
    [plone][1] is a Content Management System running on top of Python and
    Zope.

    Affected versions of this package are vulnerable to Open Redirect. By
    linking to a specific url in Plone with a parameter, an attacker could
    send the user to his own website.



    [1]: https://github.com/plone/Plone
  affected_package: plone
  vulnerable_versions:
  - ">= 2.5 < 5.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2017-1000484
  cwe:
  - CWE-601
  disclosed_date: 2017-02-03
  created_date: 2018-02-12
  last_modified_date: 2018-02-12
  credit:
  - Plone Security Team
  references:
  - https://plone.org/security/hotfix/20171128/an-open-redirection-when-calling-a-specific-url
  - https://plone.org/security/hotfix/20171128
  - https://nvd.nist.gov/vuln/detail/CVE-2017-1000484
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-42051
- id: snykio:pypi:plone:CVE-2017-5524
  title: Sandbox Bypass
  description: |
    [`plone`][1] is a Content Management System.

    Affected versions of this package are vulnerable to Sandbox Bypass.
    Plone 4.x through 4.3.11 and 5.x through 5.0.6 allow remote attackers to
    bypass a sandbox protection mechanism and obtain sensitive information
    by leveraging the Python string format method.



    [1]: https://pypi.python.org/pypi/plone
  affected_package: plone
  vulnerable_versions:
  - ">= 4 <= 5.1a2"
  severity: low
  package_manager: pypi
  cve:
  - CVE-2017-5524
  cwe:
  - CWE-264
  disclosed_date: 2017-01-18
  created_date: 2017-01-18
  last_modified_date: 2017-01-18
  credit:
  - Armin Ronacher
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-5524
  - https://plone.org/security/hotfix/20170117/sandbox-escape
  - http://www.openwall.com/lists/oss-security/2017/01/18/6
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PLONE-40454
