---
- id: snykio:pypi:html5lib:CVE-2016-9909
  title: Cross-site Scripting (XSS)
  description: |+
    Affected versions of [`html5lib`][1] are vulnerable to Cross-site
    Scripting (XSS) attacks.

    The serializer in html5lib before 0.99999999 might allow remote
    attackers to conduct cross-site scripting (XSS) attacks by leveraging
    mishandling of the &lt; (less than) character in attribute values.



    [1]: https://pypi.python.org/pypi/html5lib
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: html5lib
  vulnerable_versions:
  - "< 0.99999999"
  - ">= 1.0b1 < 1.0b9"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2016-9909
  cwe:
  - CWE-79
  disclosed_date: 2017-02-22
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Geoffrey Sneddon
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9909
  - https://github.com/html5lib/html5lib-python/issues/11
  - https://github.com/html5lib/html5lib-python/issues/12
  - https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7
  source_url: https://snyk.io/vuln/SNYK-PYTHON-HTML5LIB-40702
- id: snykio:pypi:html5lib:CVE-2016-9910
  title: Cross-site Scripting (XSS)
  description: |+
    [`html5lib`][1] is a HTML parser based on the WHATWG HTML specification.

    Affected versions of this package are vulnerable to Cross-site Scripting
    (XSS) attacks. The serializer in html5lib before 0.99999999 might allow
    remote attackers to conduct cross-site scripting (XSS) attacks by
    leveraging mishandling of special characters in attribute values, a
    different vulnerability than CVE-2016-9909.



    [1]: https://pypi.python.org/pypi/html5lib
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: html5lib
  vulnerable_versions:
  - "< 0.99999999"
  - ">= 1.0b1 < 1.0b9"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2016-9910
  cwe:
  - CWE-79
  disclosed_date: 2013-04-10
  created_date: 2013-04-10
  last_modified_date: 2013-04-10
  credit:
  - Geoffrey Sneddon
  references:
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9910
  - https://github.com/html5lib/html5lib-python/issues/11
  - https://github.com/html5lib/html5lib-python/issues/12
  - https://github.com/html5lib/html5lib-python/pull/95
  - https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7
  source_url: https://snyk.io/vuln/SNYK-PYTHON-HTML5LIB-40558
