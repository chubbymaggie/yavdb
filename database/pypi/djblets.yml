---
- id: snykio:pypi:djblets:CVE-2013-4409
  title: Arbitrary Code Execution
  description: |
    [`Djblets`][1] is a collection of useful classes and functions for
    developing large-scale Django-based web applications. Affected versions
    of this package are vulnerable to Arbitrary Code Execution due to using
    the unsafe `eval()` function.



    [1]: https://pypi.python.org/pypi/Djblets
  affected_package: djblets
  vulnerable_versions:
  - "< 0.7.15"
  - "< 1.6.19"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2013-4409
  cwe:
  - CWE-94
  disclosed_date: 2013-10-10
  created_date: 2013-10-10
  last_modified_date: 2013-10-10
  credit:
  - Frederik Braun
  references:
  - https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-4409
  source_url: https://snyk.io/vuln/SNYK-PYTHON-DJBLETS-40273
- id: snykio:pypi:djblets:CVE-2014-3994
  title: Cross-site Scripting (XSS)
  description: |+
    [`djblets`][1] is a collection of useful classes and functions for
    developing large-scale Django-based web applications.

    Cross-site Scripting (XSS) vulnerability in
    util/templatetags/djblets\_js.py in Djblets before 0.7.30 and 0.8.x
    before 0.8.3 for Django, as used in Review Board, allows remote
    attackers to inject arbitrary web script or HTML via a JSON object, as
    demonstrated by the name field when changing a user name.



    [1]: https://pypi.python.org/pypi/djblets
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: djblets
  vulnerable_versions:
  - "<= 0.7.30"
  - ">= 0.8 <= 0.8.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-3994
  cwe:
  - CWE-79
  disclosed_date: 2014-06-06
  created_date: 2014-06-06
  last_modified_date: 2014-06-06
  credit:
  - Christian Hammond
  references:
  - http://seclists.org/oss-sec/2014/q2/494
  - https://github.com/djblets/djblets/commit/50000d0bbb983fa8c097b588d06b64df8df483bd
  - https://github.com/djblets/djblets/commit/77a68c03cd619a0996f3f37337b8c39ca6643d6e
  - https://github.com/djblets/djblets/commit/e2c79117efd925636acd871a5f473512602243cf
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3994
  source_url: https://snyk.io/vuln/SNYK-PYTHON-DJBLETS-40285
- id: snykio:pypi:djblets:CVE-2014-3995
  title: Cross-site Scripting (XSS)
  description: |+
    [`djblets`][1] is a collection of useful classes and functions for
    developing large-scale Django-based web applications.

    Cross-site Scripting (XSS) vulnerability in
    gravatars/templatetags/gravatars.py in Djblets before 0.7.30 and 0.8.x
    before 0.8.3 for Django allows remote attackers to inject arbitrary web
    script or HTML via a user display name.



    [1]: https://pypi.python.org/pypi/djblets
    \nCross-Site Scripting (XSS) attacks occur when an attacker tricks a
    user’s browser to execute malicious JavaScript code in the context of a
    victim’s domain. Such scripts can steal the user’s session cookies for
    the domain, scrape or modify its content, and perform or modify actions
    on the user’s behalf, actions typically blocked by the browser’s Same
    Origin Policy.

    These attacks are possible by escaping the context of the web
    application and injecting malicious scripts in an otherwise trusted
    website. These scripts can introduce additional attributes (say, a
    \"new\" option in a dropdown list or a new link to a malicious site) and
    can potentially execute code on the clients side, unbeknown to the
    victim. This occurs when characters like `<` `>` `"` `'` are not escaped
    properly.

    There are a few types of XSS:

    * **Persistent XSS** is an attack in which the malicious code persists
      into the web app’s database.
    * **Reflected XSS** is an which the website echoes back a portion of the
      request. The attacker needs to trick the user into clicking a
      malicious link (for instance through a phishing email or malicious JS
      on another page), which triggers the XSS attack.
    * **DOM-based XSS** is an that occurs purely in the browser when
      client-side JavaScript echoes back a portion of the URL onto the page.
      DOM-Based XSS is notoriously hard to detect, as the server never gets
      a chance to see the attack taking place.

  affected_package: djblets
  vulnerable_versions:
  - ">= 0.8 <= 0.8.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-3995
  cwe:
  - CWE-79
  disclosed_date: 2014-06-06
  created_date: 2014-06-06
  last_modified_date: 2014-06-06
  credit:
  - uchida
  references:
  - http://seclists.org/oss-sec/2014/q2/494
  - https://github.com/djblets/djblets/commit/50000d0bbb983fa8c097b588d06b64df8df483bd
  - https://github.com/djblets/djblets/commit/77ac64642ad530bf69e390c51fc6fdcb8914c8e7
  - https://github.com/djblets/djblets/commit/e2c79117efd925636acd871a5f473512602243cf
  - https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-3994
  source_url: https://snyk.io/vuln/SNYK-PYTHON-DJBLETS-40286
