---
- id: snykio:pypi:pyjwt:40733
  title: Security Bypass
  description: |
    Affected versions of [`pyjwt`][1] are vulnerable to Security Bypass.

    when `alg=none` its accept value for the key which could bypass
    signature verification.



    [1]: https://pypi.python.org/pypi/pyjwt
  affected_package: pyjwt
  vulnerable_versions:
  - "< 1.0.0"
  severity: medium
  package_manager: pypi
  cwe:
  - CWE-284
  disclosed_date: 2015-03-17
  created_date: 2017-12-04
  last_modified_date: 2017-12-04
  credit:
  - Unknown
  references:
  - https://github.com/jpadilla/pyjwt/blob/master/CHANGELOG.md#fixed-12
  - https://github.com/jpadilla/pyjwt/commit/88a9fc56bdc6c870aa6af93bda401414a217db2a
  - https://github.com/jpadilla/pyjwt/pull/109
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PYJWT-40733
- id: snykio:pypi:pyjwt:CVE-2017-11424
  title: Authentication Bypass
  description: |
    [`pyjwt`][1] is a JSON Web Token implementation in Python.

    Affected versions of the package are vulnerable to Authentication
    Bypass. In PyJWT 1.5.0 and below the `invalid_strings` check in
    `HMACAlgorithm.prepare_key` does not account for all PEM encoded public
    keys. Specifically, the PKCS1 PEM encoded format would be allowed
    because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----`
    which is not accounted for. This enables symmetric/asymmetric key
    confusion attacks against users using the PKCS1 PEM encoded public keys,
    which would allow an attacker to craft JWTs from scratch.



    [1]: http://pypi.python.org/pypi/PyJWT
  affected_package: pyjwt
  vulnerable_versions:
  - "< 1.5.1"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2017-11424
  cwe:
  - CWE-284
  disclosed_date: 2017-06-21
  created_date: 2017-11-09
  last_modified_date: 2017-11-09
  credit:
  - Unknown
  references:
  - https://github.com/jpadilla/pyjwt/commit/37926ea0dd207db070b45473438853447e4c1392
  - https://github.com/jpadilla/pyjwt/pull/277
  - https://nvd.nist.gov/vuln/detail/CVE-2017-11424
  source_url: https://snyk.io/vuln/SNYK-PYTHON-PYJWT-40693
